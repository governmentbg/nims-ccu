//--------------------------------------------------------------
// Autogenerated by XSDObjectGen version 1.0.0.0
//--------------------------------------------------------------

using System;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;

namespace R_10018
{

	public struct Declarations
	{
		public const string SchemaVersion = "http://ereg.egov.bg/segment/R-10018";
	}


	[Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public partial class AttachedDocumentContentCollection : System.Collections.Generic.List<R_09992.AttachedDocumentContent>
	{
	}



	[XmlType(TypeName="AttachedDocument",Namespace=Declarations.SchemaVersion),Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public partial class AttachedDocument
	{

		[System.Web.Script.Serialization.ScriptIgnore]
        [Newtonsoft.Json.JsonIgnore]
		[XmlElement(Type=typeof(R_10000.PrivateNomenclature),ElementName="Type",IsNullable=false,Form=XmlSchemaForm.Qualified,Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public R_10000.PrivateNomenclature __Type;
		
		[XmlIgnore]
		public R_10000.PrivateNomenclature Type
		{
			get {return __Type;}
			set {__Type = value;}
		}

		[System.Web.Script.Serialization.ScriptIgnore]
        [Newtonsoft.Json.JsonIgnore]
		[XmlElement(ElementName="Description",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="string",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __Description;
		
		[XmlIgnore]
		public string Description
		{ 
			get { return __Description; }
			set { __Description = value; }
		}

		[System.Web.Script.Serialization.ScriptIgnore]
        [Newtonsoft.Json.JsonIgnore]
		[XmlElement(ElementName="VersionNum",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="string",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __VersionNum;
		
		[XmlIgnore]
		public string VersionNum
		{ 
			get { return __VersionNum; }
			set { __VersionNum = value; }
		}

		[System.Web.Script.Serialization.ScriptIgnore]
        [Newtonsoft.Json.JsonIgnore]
		[XmlElement(ElementName="VersionSubNum",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="string",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __VersionSubNum;
		
		[XmlIgnore]
		public string VersionSubNum
		{ 
			get { return __VersionSubNum; }
			set { __VersionSubNum = value; }
		}

		[System.Web.Script.Serialization.ScriptIgnore]
        [Newtonsoft.Json.JsonIgnore]
		[XmlElement(ElementName="ActivationDate",Form=XmlSchemaForm.Qualified,DataType="dateTime",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public DateTime? __ActivationDate;
		
		[System.Web.Script.Serialization.ScriptIgnore]
        [Newtonsoft.Json.JsonIgnore]
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __ActivationDateSpecified { get { return __ActivationDate.HasValue; } }
		
		[XmlIgnore]
		public DateTime? ActivationDate
		{ 
			get { return __ActivationDate; }
			set { __ActivationDate = value; }
		}
		


		[System.Web.Script.Serialization.ScriptIgnore]
        [Newtonsoft.Json.JsonIgnore]
		[XmlElement(Type=typeof(R_09992.AttachedDocumentContent),ElementName="AttachedDocumentContent",IsNullable=false,Form=XmlSchemaForm.Qualified,Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public R_09992.AttachedDocumentContent __AttachedDocumentContent;
		
		[XmlIgnore]
		public R_09992.AttachedDocumentContent AttachedDocumentContent
		{
			get {return __AttachedDocumentContent;}
			set {__AttachedDocumentContent = value;}
		}

		[System.Web.Script.Serialization.ScriptIgnore]
        [Newtonsoft.Json.JsonIgnore]
		[XmlElement(Type=typeof(R_09992.AttachedDocumentContent),ElementName="SignatureContent",IsNullable=false,Form=XmlSchemaForm.Qualified,Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public AttachedDocumentContentCollection __SignatureContentCollection;
		
		[XmlIgnore]
		public AttachedDocumentContentCollection SignatureContentCollection
		{
			get
			{
				if (__SignatureContentCollection == null) __SignatureContentCollection = new AttachedDocumentContentCollection();
				return __SignatureContentCollection;
			}
			set {__SignatureContentCollection = value;}
		}

		public AttachedDocument()
		{
		}
	}
}
