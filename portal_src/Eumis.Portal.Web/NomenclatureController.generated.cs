// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Eumis.Portal.Web.Controllers
{
    public partial class NomenclatureController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public NomenclatureController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected NomenclatureController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }


        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public NomenclatureController Actions { get { return MVC.Nomenclature; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Nomenclature";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Nomenclature";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string GetInterventionFields = "GetInterventionFields";
            public readonly string GetFormOfFinances = "GetFormOfFinances";
            public readonly string GetEconomicDimensions = "GetEconomicDimensions";
            public readonly string GetESFSecondaryThemes = "GetESFSecondaryThemes";
            public readonly string GetTerritorialDeliveryMechanisms = "GetTerritorialDeliveryMechanisms";
            public readonly string GetTerritorialDimensions = "GetTerritorialDimensions";
            public readonly string GetThematicObjectives = "GetThematicObjectives";
            public readonly string GetAttachedDocumentTypes = "GetAttachedDocumentTypes";
            public readonly string GetContractReportDocumentTypes = "GetContractReportDocumentTypes";
            public readonly string GetProgrammePriorities = "GetProgrammePriorities";
            public readonly string GetInvestmentPriorities = "GetInvestmentPriorities";
            public readonly string GetFinanceSources = "GetFinanceSources";
            public readonly string GetSpecificTargets = "GetSpecificTargets";
            public readonly string GetDummies = "GetDummies";
            public readonly string GetProjectCommunicationBeneficiarySubjects = "GetProjectCommunicationBeneficiarySubjects";
            public readonly string GetProjectCommunicationManagingAuthoritySubjects = "GetProjectCommunicationManagingAuthoritySubjects";
            public readonly string GetAmountTypes = "GetAmountTypes";
            public readonly string GetUinTypes = "GetUinTypes";
            public readonly string GetTechnicalReportTeamUinTypes = "GetTechnicalReportTeamUinTypes";
            public readonly string GetErrandTypes = "GetErrandTypes";
            public readonly string GetErrandAreas = "GetErrandAreas";
            public readonly string GetErrandLegalActs = "GetErrandLegalActs";
            public readonly string GetCompletionStatuses = "GetCompletionStatuses";
            public readonly string GetCommitmentTypes = "GetCommitmentTypes";
            public readonly string GetAuditInstitutions = "GetAuditInstitutions";
            public readonly string GetAuditTypes = "GetAuditTypes";
            public readonly string GetAuditKinds = "GetAuditKinds";
            public readonly string GetAuditeeTypes = "GetAuditeeTypes";
            public readonly string GetActivityStatuses = "GetActivityStatuses";
            public readonly string GetCostSupprotingDocumentTypes = "GetCostSupprotingDocumentTypes";
            public readonly string GetIncomeTypes = "GetIncomeTypes";
            public readonly string GetProductKinds = "GetProductKinds";
            public readonly string GetAdvancePaymentTypes = "GetAdvancePaymentTypes";
            public readonly string GetFinalPaymentTypes = "GetFinalPaymentTypes";
            public readonly string GetKidCodes = "GetKidCodes";
            public readonly string GetCompanyTypes = "GetCompanyTypes";
            public readonly string GetCompanyLegalTypes = "GetCompanyLegalTypes";
            public readonly string GetCompanySizeTypes = "GetCompanySizeTypes";
            public readonly string GetCountries = "GetCountries";
            public readonly string GetProtectedZones = "GetProtectedZones";
            public readonly string GetNuts1s = "GetNuts1s";
            public readonly string GetNuts2s = "GetNuts2s";
            public readonly string GetDistricts = "GetDistricts";
            public readonly string GetSettlements = "GetSettlements";
            public readonly string GetMunicipalities = "GetMunicipalities";
            public readonly string GetMunicipalitiesByDistrictId = "GetMunicipalitiesByDistrictId";
            public readonly string GetSettlementsByMunicipalityId = "GetSettlementsByMunicipalityId";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string GetInterventionFields = "GetInterventionFields";
            public const string GetFormOfFinances = "GetFormOfFinances";
            public const string GetEconomicDimensions = "GetEconomicDimensions";
            public const string GetESFSecondaryThemes = "GetESFSecondaryThemes";
            public const string GetTerritorialDeliveryMechanisms = "GetTerritorialDeliveryMechanisms";
            public const string GetTerritorialDimensions = "GetTerritorialDimensions";
            public const string GetThematicObjectives = "GetThematicObjectives";
            public const string GetAttachedDocumentTypes = "GetAttachedDocumentTypes";
            public const string GetContractReportDocumentTypes = "GetContractReportDocumentTypes";
            public const string GetProgrammePriorities = "GetProgrammePriorities";
            public const string GetInvestmentPriorities = "GetInvestmentPriorities";
            public const string GetFinanceSources = "GetFinanceSources";
            public const string GetSpecificTargets = "GetSpecificTargets";
            public const string GetDummies = "GetDummies";
            public const string GetProjectCommunicationBeneficiarySubjects = "GetProjectCommunicationBeneficiarySubjects";
            public const string GetProjectCommunicationManagingAuthoritySubjects = "GetProjectCommunicationManagingAuthoritySubjects";
            public const string GetAmountTypes = "GetAmountTypes";
            public const string GetUinTypes = "GetUinTypes";
            public const string GetTechnicalReportTeamUinTypes = "GetTechnicalReportTeamUinTypes";
            public const string GetErrandTypes = "GetErrandTypes";
            public const string GetErrandAreas = "GetErrandAreas";
            public const string GetErrandLegalActs = "GetErrandLegalActs";
            public const string GetCompletionStatuses = "GetCompletionStatuses";
            public const string GetCommitmentTypes = "GetCommitmentTypes";
            public const string GetAuditInstitutions = "GetAuditInstitutions";
            public const string GetAuditTypes = "GetAuditTypes";
            public const string GetAuditKinds = "GetAuditKinds";
            public const string GetAuditeeTypes = "GetAuditeeTypes";
            public const string GetActivityStatuses = "GetActivityStatuses";
            public const string GetCostSupprotingDocumentTypes = "GetCostSupprotingDocumentTypes";
            public const string GetIncomeTypes = "GetIncomeTypes";
            public const string GetProductKinds = "GetProductKinds";
            public const string GetAdvancePaymentTypes = "GetAdvancePaymentTypes";
            public const string GetFinalPaymentTypes = "GetFinalPaymentTypes";
            public const string GetKidCodes = "GetKidCodes";
            public const string GetCompanyTypes = "GetCompanyTypes";
            public const string GetCompanyLegalTypes = "GetCompanyLegalTypes";
            public const string GetCompanySizeTypes = "GetCompanySizeTypes";
            public const string GetCountries = "GetCountries";
            public const string GetProtectedZones = "GetProtectedZones";
            public const string GetNuts1s = "GetNuts1s";
            public const string GetNuts2s = "GetNuts2s";
            public const string GetDistricts = "GetDistricts";
            public const string GetSettlements = "GetSettlements";
            public const string GetMunicipalities = "GetMunicipalities";
            public const string GetMunicipalitiesByDistrictId = "GetMunicipalitiesByDistrictId";
            public const string GetSettlementsByMunicipalityId = "GetSettlementsByMunicipalityId";
        }


        static readonly ActionParamsClass_GetInterventionFields s_params_GetInterventionFields = new ActionParamsClass_GetInterventionFields();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetInterventionFields GetInterventionFieldsParams { get { return s_params_GetInterventionFields; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetInterventionFields
        {
            public readonly string term = "term";
            public readonly string offset = "offset";
            public readonly string limit = "limit";
        }
        static readonly ActionParamsClass_GetFormOfFinances s_params_GetFormOfFinances = new ActionParamsClass_GetFormOfFinances();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetFormOfFinances GetFormOfFinancesParams { get { return s_params_GetFormOfFinances; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetFormOfFinances
        {
            public readonly string term = "term";
            public readonly string offset = "offset";
            public readonly string limit = "limit";
        }
        static readonly ActionParamsClass_GetEconomicDimensions s_params_GetEconomicDimensions = new ActionParamsClass_GetEconomicDimensions();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetEconomicDimensions GetEconomicDimensionsParams { get { return s_params_GetEconomicDimensions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetEconomicDimensions
        {
            public readonly string term = "term";
            public readonly string offset = "offset";
            public readonly string limit = "limit";
        }
        static readonly ActionParamsClass_GetESFSecondaryThemes s_params_GetESFSecondaryThemes = new ActionParamsClass_GetESFSecondaryThemes();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetESFSecondaryThemes GetESFSecondaryThemesParams { get { return s_params_GetESFSecondaryThemes; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetESFSecondaryThemes
        {
            public readonly string term = "term";
            public readonly string offset = "offset";
            public readonly string limit = "limit";
        }
        static readonly ActionParamsClass_GetTerritorialDeliveryMechanisms s_params_GetTerritorialDeliveryMechanisms = new ActionParamsClass_GetTerritorialDeliveryMechanisms();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetTerritorialDeliveryMechanisms GetTerritorialDeliveryMechanismsParams { get { return s_params_GetTerritorialDeliveryMechanisms; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetTerritorialDeliveryMechanisms
        {
            public readonly string term = "term";
            public readonly string offset = "offset";
            public readonly string limit = "limit";
        }
        static readonly ActionParamsClass_GetTerritorialDimensions s_params_GetTerritorialDimensions = new ActionParamsClass_GetTerritorialDimensions();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetTerritorialDimensions GetTerritorialDimensionsParams { get { return s_params_GetTerritorialDimensions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetTerritorialDimensions
        {
            public readonly string term = "term";
            public readonly string offset = "offset";
            public readonly string limit = "limit";
        }
        static readonly ActionParamsClass_GetThematicObjectives s_params_GetThematicObjectives = new ActionParamsClass_GetThematicObjectives();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetThematicObjectives GetThematicObjectivesParams { get { return s_params_GetThematicObjectives; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetThematicObjectives
        {
            public readonly string term = "term";
            public readonly string offset = "offset";
            public readonly string limit = "limit";
        }
        static readonly ActionParamsClass_GetAttachedDocumentTypes s_params_GetAttachedDocumentTypes = new ActionParamsClass_GetAttachedDocumentTypes();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetAttachedDocumentTypes GetAttachedDocumentTypesParams { get { return s_params_GetAttachedDocumentTypes; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetAttachedDocumentTypes
        {
            public readonly string term = "term";
            public readonly string offset = "offset";
            public readonly string limit = "limit";
        }
        static readonly ActionParamsClass_GetContractReportDocumentTypes s_params_GetContractReportDocumentTypes = new ActionParamsClass_GetContractReportDocumentTypes();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetContractReportDocumentTypes GetContractReportDocumentTypesParams { get { return s_params_GetContractReportDocumentTypes; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetContractReportDocumentTypes
        {
            public readonly string term = "term";
            public readonly string offset = "offset";
            public readonly string limit = "limit";
        }
        static readonly ActionParamsClass_GetProgrammePriorities s_params_GetProgrammePriorities = new ActionParamsClass_GetProgrammePriorities();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetProgrammePriorities GetProgrammePrioritiesParams { get { return s_params_GetProgrammePriorities; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetProgrammePriorities
        {
            public readonly string term = "term";
            public readonly string offset = "offset";
            public readonly string limit = "limit";
        }
        static readonly ActionParamsClass_GetInvestmentPriorities s_params_GetInvestmentPriorities = new ActionParamsClass_GetInvestmentPriorities();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetInvestmentPriorities GetInvestmentPrioritiesParams { get { return s_params_GetInvestmentPriorities; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetInvestmentPriorities
        {
            public readonly string parentId = "parentId";
            public readonly string term = "term";
            public readonly string offset = "offset";
            public readonly string limit = "limit";
        }
        static readonly ActionParamsClass_GetFinanceSources s_params_GetFinanceSources = new ActionParamsClass_GetFinanceSources();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetFinanceSources GetFinanceSourcesParams { get { return s_params_GetFinanceSources; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetFinanceSources
        {
            public readonly string parentId = "parentId";
            public readonly string term = "term";
            public readonly string offset = "offset";
            public readonly string limit = "limit";
        }
        static readonly ActionParamsClass_GetSpecificTargets s_params_GetSpecificTargets = new ActionParamsClass_GetSpecificTargets();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetSpecificTargets GetSpecificTargetsParams { get { return s_params_GetSpecificTargets; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetSpecificTargets
        {
            public readonly string parentId = "parentId";
            public readonly string term = "term";
            public readonly string offset = "offset";
            public readonly string limit = "limit";
        }
        static readonly ActionParamsClass_GetDummies s_params_GetDummies = new ActionParamsClass_GetDummies();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetDummies GetDummiesParams { get { return s_params_GetDummies; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetDummies
        {
            public readonly string term = "term";
            public readonly string offset = "offset";
            public readonly string limit = "limit";
        }
        static readonly ActionParamsClass_GetProjectCommunicationBeneficiarySubjects s_params_GetProjectCommunicationBeneficiarySubjects = new ActionParamsClass_GetProjectCommunicationBeneficiarySubjects();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetProjectCommunicationBeneficiarySubjects GetProjectCommunicationBeneficiarySubjectsParams { get { return s_params_GetProjectCommunicationBeneficiarySubjects; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetProjectCommunicationBeneficiarySubjects
        {
            public readonly string term = "term";
            public readonly string offset = "offset";
            public readonly string limit = "limit";
        }
        static readonly ActionParamsClass_GetProjectCommunicationManagingAuthoritySubjects s_params_GetProjectCommunicationManagingAuthoritySubjects = new ActionParamsClass_GetProjectCommunicationManagingAuthoritySubjects();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetProjectCommunicationManagingAuthoritySubjects GetProjectCommunicationManagingAuthoritySubjectsParams { get { return s_params_GetProjectCommunicationManagingAuthoritySubjects; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetProjectCommunicationManagingAuthoritySubjects
        {
            public readonly string term = "term";
            public readonly string offset = "offset";
            public readonly string limit = "limit";
        }
        static readonly ActionParamsClass_GetAmountTypes s_params_GetAmountTypes = new ActionParamsClass_GetAmountTypes();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetAmountTypes GetAmountTypesParams { get { return s_params_GetAmountTypes; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetAmountTypes
        {
            public readonly string term = "term";
            public readonly string offset = "offset";
            public readonly string limit = "limit";
        }
        static readonly ActionParamsClass_GetUinTypes s_params_GetUinTypes = new ActionParamsClass_GetUinTypes();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetUinTypes GetUinTypesParams { get { return s_params_GetUinTypes; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetUinTypes
        {
            public readonly string term = "term";
            public readonly string offset = "offset";
            public readonly string limit = "limit";
        }
        static readonly ActionParamsClass_GetTechnicalReportTeamUinTypes s_params_GetTechnicalReportTeamUinTypes = new ActionParamsClass_GetTechnicalReportTeamUinTypes();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetTechnicalReportTeamUinTypes GetTechnicalReportTeamUinTypesParams { get { return s_params_GetTechnicalReportTeamUinTypes; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetTechnicalReportTeamUinTypes
        {
            public readonly string term = "term";
            public readonly string offset = "offset";
            public readonly string limit = "limit";
        }
        static readonly ActionParamsClass_GetErrandTypes s_params_GetErrandTypes = new ActionParamsClass_GetErrandTypes();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetErrandTypes GetErrandTypesParams { get { return s_params_GetErrandTypes; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetErrandTypes
        {
            public readonly string parentId = "parentId";
            public readonly string term = "term";
            public readonly string offset = "offset";
            public readonly string limit = "limit";
        }
        static readonly ActionParamsClass_GetErrandAreas s_params_GetErrandAreas = new ActionParamsClass_GetErrandAreas();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetErrandAreas GetErrandAreasParams { get { return s_params_GetErrandAreas; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetErrandAreas
        {
            public readonly string term = "term";
            public readonly string offset = "offset";
            public readonly string limit = "limit";
        }
        static readonly ActionParamsClass_GetErrandLegalActs s_params_GetErrandLegalActs = new ActionParamsClass_GetErrandLegalActs();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetErrandLegalActs GetErrandLegalActsParams { get { return s_params_GetErrandLegalActs; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetErrandLegalActs
        {
            public readonly string term = "term";
            public readonly string offset = "offset";
            public readonly string limit = "limit";
        }
        static readonly ActionParamsClass_GetCompletionStatuses s_params_GetCompletionStatuses = new ActionParamsClass_GetCompletionStatuses();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetCompletionStatuses GetCompletionStatusesParams { get { return s_params_GetCompletionStatuses; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetCompletionStatuses
        {
            public readonly string term = "term";
            public readonly string offset = "offset";
            public readonly string limit = "limit";
        }
        static readonly ActionParamsClass_GetCommitmentTypes s_params_GetCommitmentTypes = new ActionParamsClass_GetCommitmentTypes();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetCommitmentTypes GetCommitmentTypesParams { get { return s_params_GetCommitmentTypes; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetCommitmentTypes
        {
            public readonly string term = "term";
            public readonly string offset = "offset";
            public readonly string limit = "limit";
        }
        static readonly ActionParamsClass_GetAuditInstitutions s_params_GetAuditInstitutions = new ActionParamsClass_GetAuditInstitutions();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetAuditInstitutions GetAuditInstitutionsParams { get { return s_params_GetAuditInstitutions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetAuditInstitutions
        {
            public readonly string term = "term";
            public readonly string offset = "offset";
            public readonly string limit = "limit";
        }
        static readonly ActionParamsClass_GetAuditTypes s_params_GetAuditTypes = new ActionParamsClass_GetAuditTypes();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetAuditTypes GetAuditTypesParams { get { return s_params_GetAuditTypes; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetAuditTypes
        {
            public readonly string term = "term";
            public readonly string offset = "offset";
            public readonly string limit = "limit";
        }
        static readonly ActionParamsClass_GetAuditKinds s_params_GetAuditKinds = new ActionParamsClass_GetAuditKinds();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetAuditKinds GetAuditKindsParams { get { return s_params_GetAuditKinds; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetAuditKinds
        {
            public readonly string term = "term";
            public readonly string offset = "offset";
            public readonly string limit = "limit";
        }
        static readonly ActionParamsClass_GetAuditeeTypes s_params_GetAuditeeTypes = new ActionParamsClass_GetAuditeeTypes();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetAuditeeTypes GetAuditeeTypesParams { get { return s_params_GetAuditeeTypes; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetAuditeeTypes
        {
            public readonly string term = "term";
            public readonly string offset = "offset";
            public readonly string limit = "limit";
        }
        static readonly ActionParamsClass_GetActivityStatuses s_params_GetActivityStatuses = new ActionParamsClass_GetActivityStatuses();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetActivityStatuses GetActivityStatusesParams { get { return s_params_GetActivityStatuses; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetActivityStatuses
        {
            public readonly string term = "term";
            public readonly string offset = "offset";
            public readonly string limit = "limit";
        }
        static readonly ActionParamsClass_GetCostSupprotingDocumentTypes s_params_GetCostSupprotingDocumentTypes = new ActionParamsClass_GetCostSupprotingDocumentTypes();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetCostSupprotingDocumentTypes GetCostSupprotingDocumentTypesParams { get { return s_params_GetCostSupprotingDocumentTypes; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetCostSupprotingDocumentTypes
        {
            public readonly string term = "term";
            public readonly string offset = "offset";
            public readonly string limit = "limit";
        }
        static readonly ActionParamsClass_GetIncomeTypes s_params_GetIncomeTypes = new ActionParamsClass_GetIncomeTypes();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetIncomeTypes GetIncomeTypesParams { get { return s_params_GetIncomeTypes; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetIncomeTypes
        {
            public readonly string term = "term";
            public readonly string offset = "offset";
            public readonly string limit = "limit";
        }
        static readonly ActionParamsClass_GetProductKinds s_params_GetProductKinds = new ActionParamsClass_GetProductKinds();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetProductKinds GetProductKindsParams { get { return s_params_GetProductKinds; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetProductKinds
        {
            public readonly string term = "term";
            public readonly string offset = "offset";
            public readonly string limit = "limit";
        }
        static readonly ActionParamsClass_GetAdvancePaymentTypes s_params_GetAdvancePaymentTypes = new ActionParamsClass_GetAdvancePaymentTypes();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetAdvancePaymentTypes GetAdvancePaymentTypesParams { get { return s_params_GetAdvancePaymentTypes; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetAdvancePaymentTypes
        {
            public readonly string term = "term";
            public readonly string offset = "offset";
            public readonly string limit = "limit";
        }
        static readonly ActionParamsClass_GetFinalPaymentTypes s_params_GetFinalPaymentTypes = new ActionParamsClass_GetFinalPaymentTypes();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetFinalPaymentTypes GetFinalPaymentTypesParams { get { return s_params_GetFinalPaymentTypes; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetFinalPaymentTypes
        {
            public readonly string term = "term";
            public readonly string offset = "offset";
            public readonly string limit = "limit";
        }
        static readonly ActionParamsClass_GetKidCodes s_params_GetKidCodes = new ActionParamsClass_GetKidCodes();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetKidCodes GetKidCodesParams { get { return s_params_GetKidCodes; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetKidCodes
        {
            public readonly string term = "term";
            public readonly string offset = "offset";
            public readonly string limit = "limit";
        }
        static readonly ActionParamsClass_GetCompanyTypes s_params_GetCompanyTypes = new ActionParamsClass_GetCompanyTypes();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetCompanyTypes GetCompanyTypesParams { get { return s_params_GetCompanyTypes; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetCompanyTypes
        {
            public readonly string term = "term";
            public readonly string offset = "offset";
            public readonly string limit = "limit";
        }
        static readonly ActionParamsClass_GetCompanyLegalTypes s_params_GetCompanyLegalTypes = new ActionParamsClass_GetCompanyLegalTypes();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetCompanyLegalTypes GetCompanyLegalTypesParams { get { return s_params_GetCompanyLegalTypes; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetCompanyLegalTypes
        {
            public readonly string parentId = "parentId";
            public readonly string term = "term";
            public readonly string offset = "offset";
            public readonly string limit = "limit";
        }
        static readonly ActionParamsClass_GetCompanySizeTypes s_params_GetCompanySizeTypes = new ActionParamsClass_GetCompanySizeTypes();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetCompanySizeTypes GetCompanySizeTypesParams { get { return s_params_GetCompanySizeTypes; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetCompanySizeTypes
        {
            public readonly string term = "term";
            public readonly string offset = "offset";
            public readonly string limit = "limit";
        }
        static readonly ActionParamsClass_GetCountries s_params_GetCountries = new ActionParamsClass_GetCountries();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetCountries GetCountriesParams { get { return s_params_GetCountries; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetCountries
        {
            public readonly string term = "term";
            public readonly string offset = "offset";
            public readonly string limit = "limit";
        }
        static readonly ActionParamsClass_GetProtectedZones s_params_GetProtectedZones = new ActionParamsClass_GetProtectedZones();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetProtectedZones GetProtectedZonesParams { get { return s_params_GetProtectedZones; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetProtectedZones
        {
            public readonly string term = "term";
            public readonly string offset = "offset";
            public readonly string limit = "limit";
        }
        static readonly ActionParamsClass_GetNuts1s s_params_GetNuts1s = new ActionParamsClass_GetNuts1s();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetNuts1s GetNuts1sParams { get { return s_params_GetNuts1s; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetNuts1s
        {
            public readonly string term = "term";
            public readonly string offset = "offset";
            public readonly string limit = "limit";
        }
        static readonly ActionParamsClass_GetNuts2s s_params_GetNuts2s = new ActionParamsClass_GetNuts2s();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetNuts2s GetNuts2sParams { get { return s_params_GetNuts2s; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetNuts2s
        {
            public readonly string term = "term";
            public readonly string offset = "offset";
            public readonly string limit = "limit";
        }
        static readonly ActionParamsClass_GetDistricts s_params_GetDistricts = new ActionParamsClass_GetDistricts();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetDistricts GetDistrictsParams { get { return s_params_GetDistricts; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetDistricts
        {
            public readonly string term = "term";
            public readonly string offset = "offset";
            public readonly string limit = "limit";
        }
        static readonly ActionParamsClass_GetSettlements s_params_GetSettlements = new ActionParamsClass_GetSettlements();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetSettlements GetSettlementsParams { get { return s_params_GetSettlements; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetSettlements
        {
            public readonly string term = "term";
            public readonly string offset = "offset";
            public readonly string limit = "limit";
        }
        static readonly ActionParamsClass_GetMunicipalities s_params_GetMunicipalities = new ActionParamsClass_GetMunicipalities();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetMunicipalities GetMunicipalitiesParams { get { return s_params_GetMunicipalities; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetMunicipalities
        {
            public readonly string term = "term";
            public readonly string offset = "offset";
            public readonly string limit = "limit";
        }
        static readonly ActionParamsClass_GetMunicipalitiesByDistrictId s_params_GetMunicipalitiesByDistrictId = new ActionParamsClass_GetMunicipalitiesByDistrictId();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetMunicipalitiesByDistrictId GetMunicipalitiesByDistrictIdParams { get { return s_params_GetMunicipalitiesByDistrictId; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetMunicipalitiesByDistrictId
        {
            public readonly string term = "term";
            public readonly string offset = "offset";
            public readonly string limit = "limit";
            public readonly string parentId = "parentId";
        }
        static readonly ActionParamsClass_GetSettlementsByMunicipalityId s_params_GetSettlementsByMunicipalityId = new ActionParamsClass_GetSettlementsByMunicipalityId();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetSettlementsByMunicipalityId GetSettlementsByMunicipalityIdParams { get { return s_params_GetSettlementsByMunicipalityId; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetSettlementsByMunicipalityId
        {
            public readonly string term = "term";
            public readonly string offset = "offset";
            public readonly string limit = "limit";
            public readonly string parentId = "parentId";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
            }
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_NomenclatureController : Eumis.Portal.Web.Controllers.NomenclatureController
    {
        public T4MVC_NomenclatureController() : base(Dummy.Instance) { }

        [NonAction]
        partial void GetInterventionFieldsOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string term, int offset, int? limit);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetInterventionFields(string term, int offset, int? limit)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetInterventionFields);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "offset", offset);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "limit", limit);
            GetInterventionFieldsOverride(callInfo, term, offset, limit);
            return callInfo;
        }

        [NonAction]
        partial void GetFormOfFinancesOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string term, int offset, int? limit);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetFormOfFinances(string term, int offset, int? limit)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetFormOfFinances);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "offset", offset);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "limit", limit);
            GetFormOfFinancesOverride(callInfo, term, offset, limit);
            return callInfo;
        }

        [NonAction]
        partial void GetEconomicDimensionsOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string term, int offset, int? limit);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetEconomicDimensions(string term, int offset, int? limit)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetEconomicDimensions);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "offset", offset);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "limit", limit);
            GetEconomicDimensionsOverride(callInfo, term, offset, limit);
            return callInfo;
        }

        [NonAction]
        partial void GetESFSecondaryThemesOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string term, int offset, int? limit);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetESFSecondaryThemes(string term, int offset, int? limit)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetESFSecondaryThemes);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "offset", offset);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "limit", limit);
            GetESFSecondaryThemesOverride(callInfo, term, offset, limit);
            return callInfo;
        }

        [NonAction]
        partial void GetTerritorialDeliveryMechanismsOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string term, int offset, int? limit);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetTerritorialDeliveryMechanisms(string term, int offset, int? limit)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetTerritorialDeliveryMechanisms);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "offset", offset);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "limit", limit);
            GetTerritorialDeliveryMechanismsOverride(callInfo, term, offset, limit);
            return callInfo;
        }

        [NonAction]
        partial void GetTerritorialDimensionsOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string term, int offset, int? limit);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetTerritorialDimensions(string term, int offset, int? limit)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetTerritorialDimensions);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "offset", offset);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "limit", limit);
            GetTerritorialDimensionsOverride(callInfo, term, offset, limit);
            return callInfo;
        }

        [NonAction]
        partial void GetThematicObjectivesOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string term, int offset, int? limit);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetThematicObjectives(string term, int offset, int? limit)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetThematicObjectives);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "offset", offset);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "limit", limit);
            GetThematicObjectivesOverride(callInfo, term, offset, limit);
            return callInfo;
        }

        [NonAction]
        partial void GetAttachedDocumentTypesOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string term, int offset, int? limit);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetAttachedDocumentTypes(string term, int offset, int? limit)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetAttachedDocumentTypes);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "offset", offset);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "limit", limit);
            GetAttachedDocumentTypesOverride(callInfo, term, offset, limit);
            return callInfo;
        }

        [NonAction]
        partial void GetContractReportDocumentTypesOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string term, int offset, int? limit);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetContractReportDocumentTypes(string term, int offset, int? limit)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetContractReportDocumentTypes);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "offset", offset);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "limit", limit);
            GetContractReportDocumentTypesOverride(callInfo, term, offset, limit);
            return callInfo;
        }

        [NonAction]
        partial void GetProgrammePrioritiesOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string term, int offset, int? limit);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetProgrammePriorities(string term, int offset, int? limit)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetProgrammePriorities);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "offset", offset);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "limit", limit);
            GetProgrammePrioritiesOverride(callInfo, term, offset, limit);
            return callInfo;
        }

        [NonAction]
        partial void GetInvestmentPrioritiesOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string parentId, string term, int offset, int? limit);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetInvestmentPriorities(string parentId, string term, int offset, int? limit)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetInvestmentPriorities);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "parentId", parentId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "offset", offset);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "limit", limit);
            GetInvestmentPrioritiesOverride(callInfo, parentId, term, offset, limit);
            return callInfo;
        }

        [NonAction]
        partial void GetFinanceSourcesOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string parentId, string term, int offset, int? limit);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetFinanceSources(string parentId, string term, int offset, int? limit)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetFinanceSources);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "parentId", parentId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "offset", offset);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "limit", limit);
            GetFinanceSourcesOverride(callInfo, parentId, term, offset, limit);
            return callInfo;
        }

        [NonAction]
        partial void GetSpecificTargetsOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string parentId, string term, int offset, int? limit);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetSpecificTargets(string parentId, string term, int offset, int? limit)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetSpecificTargets);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "parentId", parentId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "offset", offset);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "limit", limit);
            GetSpecificTargetsOverride(callInfo, parentId, term, offset, limit);
            return callInfo;
        }

        [NonAction]
        partial void GetDummiesOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string term, int offset, int? limit);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetDummies(string term, int offset, int? limit)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetDummies);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "offset", offset);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "limit", limit);
            GetDummiesOverride(callInfo, term, offset, limit);
            return callInfo;
        }

        [NonAction]
        partial void GetProjectCommunicationBeneficiarySubjectsOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string term, int offset, int? limit);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetProjectCommunicationBeneficiarySubjects(string term, int offset, int? limit)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetProjectCommunicationBeneficiarySubjects);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "offset", offset);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "limit", limit);
            GetProjectCommunicationBeneficiarySubjectsOverride(callInfo, term, offset, limit);
            return callInfo;
        }

        [NonAction]
        partial void GetProjectCommunicationManagingAuthoritySubjectsOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string term, int offset, int? limit);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetProjectCommunicationManagingAuthoritySubjects(string term, int offset, int? limit)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetProjectCommunicationManagingAuthoritySubjects);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "offset", offset);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "limit", limit);
            GetProjectCommunicationManagingAuthoritySubjectsOverride(callInfo, term, offset, limit);
            return callInfo;
        }

        [NonAction]
        partial void GetAmountTypesOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string term, int offset, int? limit);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetAmountTypes(string term, int offset, int? limit)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetAmountTypes);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "offset", offset);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "limit", limit);
            GetAmountTypesOverride(callInfo, term, offset, limit);
            return callInfo;
        }

        [NonAction]
        partial void GetUinTypesOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string term, int offset, int? limit);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetUinTypes(string term, int offset, int? limit)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetUinTypes);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "offset", offset);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "limit", limit);
            GetUinTypesOverride(callInfo, term, offset, limit);
            return callInfo;
        }

        [NonAction]
        partial void GetTechnicalReportTeamUinTypesOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string term, int offset, int? limit);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetTechnicalReportTeamUinTypes(string term, int offset, int? limit)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetTechnicalReportTeamUinTypes);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "offset", offset);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "limit", limit);
            GetTechnicalReportTeamUinTypesOverride(callInfo, term, offset, limit);
            return callInfo;
        }

        [NonAction]
        partial void GetErrandTypesOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string parentId, string term, int offset, int? limit);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetErrandTypes(string parentId, string term, int offset, int? limit)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetErrandTypes);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "parentId", parentId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "offset", offset);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "limit", limit);
            GetErrandTypesOverride(callInfo, parentId, term, offset, limit);
            return callInfo;
        }

        [NonAction]
        partial void GetErrandAreasOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string term, int offset, int? limit);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetErrandAreas(string term, int offset, int? limit)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetErrandAreas);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "offset", offset);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "limit", limit);
            GetErrandAreasOverride(callInfo, term, offset, limit);
            return callInfo;
        }

        [NonAction]
        partial void GetErrandLegalActsOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string term, int offset, int? limit);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetErrandLegalActs(string term, int offset, int? limit)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetErrandLegalActs);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "offset", offset);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "limit", limit);
            GetErrandLegalActsOverride(callInfo, term, offset, limit);
            return callInfo;
        }

        [NonAction]
        partial void GetCompletionStatusesOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string term, int offset, int? limit);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetCompletionStatuses(string term, int offset, int? limit)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetCompletionStatuses);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "offset", offset);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "limit", limit);
            GetCompletionStatusesOverride(callInfo, term, offset, limit);
            return callInfo;
        }

        [NonAction]
        partial void GetCommitmentTypesOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string term, int offset, int? limit);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetCommitmentTypes(string term, int offset, int? limit)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetCommitmentTypes);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "offset", offset);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "limit", limit);
            GetCommitmentTypesOverride(callInfo, term, offset, limit);
            return callInfo;
        }

        [NonAction]
        partial void GetAuditInstitutionsOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string term, int offset, int? limit);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetAuditInstitutions(string term, int offset, int? limit)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetAuditInstitutions);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "offset", offset);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "limit", limit);
            GetAuditInstitutionsOverride(callInfo, term, offset, limit);
            return callInfo;
        }

        [NonAction]
        partial void GetAuditTypesOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string term, int offset, int? limit);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetAuditTypes(string term, int offset, int? limit)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetAuditTypes);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "offset", offset);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "limit", limit);
            GetAuditTypesOverride(callInfo, term, offset, limit);
            return callInfo;
        }

        [NonAction]
        partial void GetAuditKindsOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string term, int offset, int? limit);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetAuditKinds(string term, int offset, int? limit)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetAuditKinds);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "offset", offset);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "limit", limit);
            GetAuditKindsOverride(callInfo, term, offset, limit);
            return callInfo;
        }

        [NonAction]
        partial void GetAuditeeTypesOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string term, int offset, int? limit);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetAuditeeTypes(string term, int offset, int? limit)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetAuditeeTypes);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "offset", offset);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "limit", limit);
            GetAuditeeTypesOverride(callInfo, term, offset, limit);
            return callInfo;
        }

        [NonAction]
        partial void GetActivityStatusesOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string term, int offset, int? limit);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetActivityStatuses(string term, int offset, int? limit)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetActivityStatuses);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "offset", offset);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "limit", limit);
            GetActivityStatusesOverride(callInfo, term, offset, limit);
            return callInfo;
        }

        [NonAction]
        partial void GetCostSupprotingDocumentTypesOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string term, int offset, int? limit);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetCostSupprotingDocumentTypes(string term, int offset, int? limit)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetCostSupprotingDocumentTypes);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "offset", offset);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "limit", limit);
            GetCostSupprotingDocumentTypesOverride(callInfo, term, offset, limit);
            return callInfo;
        }

        [NonAction]
        partial void GetIncomeTypesOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string term, int offset, int? limit);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetIncomeTypes(string term, int offset, int? limit)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetIncomeTypes);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "offset", offset);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "limit", limit);
            GetIncomeTypesOverride(callInfo, term, offset, limit);
            return callInfo;
        }

        [NonAction]
        partial void GetProductKindsOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string term, int offset, int? limit);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetProductKinds(string term, int offset, int? limit)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetProductKinds);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "offset", offset);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "limit", limit);
            GetProductKindsOverride(callInfo, term, offset, limit);
            return callInfo;
        }

        [NonAction]
        partial void GetAdvancePaymentTypesOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string term, int offset, int? limit);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetAdvancePaymentTypes(string term, int offset, int? limit)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetAdvancePaymentTypes);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "offset", offset);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "limit", limit);
            GetAdvancePaymentTypesOverride(callInfo, term, offset, limit);
            return callInfo;
        }

        [NonAction]
        partial void GetFinalPaymentTypesOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string term, int offset, int? limit);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetFinalPaymentTypes(string term, int offset, int? limit)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetFinalPaymentTypes);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "offset", offset);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "limit", limit);
            GetFinalPaymentTypesOverride(callInfo, term, offset, limit);
            return callInfo;
        }

        [NonAction]
        partial void GetKidCodesOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string term, int offset, int? limit);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetKidCodes(string term, int offset, int? limit)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetKidCodes);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "offset", offset);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "limit", limit);
            GetKidCodesOverride(callInfo, term, offset, limit);
            return callInfo;
        }

        [NonAction]
        partial void GetCompanyTypesOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string term, int offset, int? limit);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetCompanyTypes(string term, int offset, int? limit)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetCompanyTypes);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "offset", offset);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "limit", limit);
            GetCompanyTypesOverride(callInfo, term, offset, limit);
            return callInfo;
        }

        [NonAction]
        partial void GetCompanyLegalTypesOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string parentId, string term, int offset, int? limit);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetCompanyLegalTypes(string parentId, string term, int offset, int? limit)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetCompanyLegalTypes);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "parentId", parentId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "offset", offset);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "limit", limit);
            GetCompanyLegalTypesOverride(callInfo, parentId, term, offset, limit);
            return callInfo;
        }

        [NonAction]
        partial void GetCompanySizeTypesOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string term, int offset, int? limit);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetCompanySizeTypes(string term, int offset, int? limit)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetCompanySizeTypes);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "offset", offset);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "limit", limit);
            GetCompanySizeTypesOverride(callInfo, term, offset, limit);
            return callInfo;
        }

        [NonAction]
        partial void GetCountriesOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string term, int offset, int? limit);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetCountries(string term, int offset, int? limit)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetCountries);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "offset", offset);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "limit", limit);
            GetCountriesOverride(callInfo, term, offset, limit);
            return callInfo;
        }

        [NonAction]
        partial void GetProtectedZonesOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string term, int offset, int? limit);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetProtectedZones(string term, int offset, int? limit)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetProtectedZones);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "offset", offset);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "limit", limit);
            GetProtectedZonesOverride(callInfo, term, offset, limit);
            return callInfo;
        }

        [NonAction]
        partial void GetNuts1sOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string term, int offset, int? limit);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetNuts1s(string term, int offset, int? limit)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetNuts1s);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "offset", offset);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "limit", limit);
            GetNuts1sOverride(callInfo, term, offset, limit);
            return callInfo;
        }

        [NonAction]
        partial void GetNuts2sOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string term, int offset, int? limit);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetNuts2s(string term, int offset, int? limit)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetNuts2s);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "offset", offset);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "limit", limit);
            GetNuts2sOverride(callInfo, term, offset, limit);
            return callInfo;
        }

        [NonAction]
        partial void GetDistrictsOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string term, int offset, int? limit);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetDistricts(string term, int offset, int? limit)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetDistricts);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "offset", offset);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "limit", limit);
            GetDistrictsOverride(callInfo, term, offset, limit);
            return callInfo;
        }

        [NonAction]
        partial void GetSettlementsOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string term, int offset, int? limit);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetSettlements(string term, int offset, int? limit)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetSettlements);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "offset", offset);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "limit", limit);
            GetSettlementsOverride(callInfo, term, offset, limit);
            return callInfo;
        }

        [NonAction]
        partial void GetMunicipalitiesOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string term, int offset, int? limit);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetMunicipalities(string term, int offset, int? limit)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetMunicipalities);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "offset", offset);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "limit", limit);
            GetMunicipalitiesOverride(callInfo, term, offset, limit);
            return callInfo;
        }

        [NonAction]
        partial void GetMunicipalitiesByDistrictIdOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string term, int offset, int? limit, int? parentId);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetMunicipalitiesByDistrictId(string term, int offset, int? limit, int? parentId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetMunicipalitiesByDistrictId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "offset", offset);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "limit", limit);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "parentId", parentId);
            GetMunicipalitiesByDistrictIdOverride(callInfo, term, offset, limit, parentId);
            return callInfo;
        }

        [NonAction]
        partial void GetSettlementsByMunicipalityIdOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string term, int offset, int? limit, int? parentId);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetSettlementsByMunicipalityId(string term, int offset, int? limit, int? parentId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetSettlementsByMunicipalityId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "term", term);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "offset", offset);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "limit", limit);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "parentId", parentId);
            GetSettlementsByMunicipalityIdOverride(callInfo, term, offset, limit, parentId);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
