// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static partial class MVC
{
    static readonly PrivateClass s_Private = new PrivateClass();
    public static PrivateClass Private { get { return s_Private; } }
    static readonly ReportClass s_Report = new ReportClass();
    public static ReportClass Report { get { return s_Report; } }
    public static Eumis.Portal.Web.Controllers.AccountController Account = new Eumis.Portal.Web.Controllers.T4MVC_AccountController();
    public static Eumis.Portal.Web.Controllers.AddressController Address = new Eumis.Portal.Web.Controllers.T4MVC_AddressController();
    public static Eumis.Portal.Web.Controllers.AdminController Admin = new Eumis.Portal.Web.Controllers.T4MVC_AdminController();
    public static Eumis.Portal.Web.Controllers.ArchivedController Archived = new Eumis.Portal.Web.Controllers.T4MVC_ArchivedController();
    public static Eumis.Portal.Web.Controllers.DefaultController Default = new Eumis.Portal.Web.Controllers.T4MVC_DefaultController();
    public static Eumis.Portal.Web.Controllers.DraftController Draft = new Eumis.Portal.Web.Controllers.T4MVC_DraftController();
    public static Eumis.Portal.Web.Controllers.ErrorController Error = new Eumis.Portal.Web.Controllers.T4MVC_ErrorController();
    public static Eumis.Portal.Web.Controllers.FeedbackController Feedback = new Eumis.Portal.Web.Controllers.T4MVC_FeedbackController();
    public static Eumis.Portal.Web.Controllers.FinalizedController Finalized = new Eumis.Portal.Web.Controllers.T4MVC_FinalizedController();
    public static Eumis.Portal.Web.Controllers.HelpController Help = new Eumis.Portal.Web.Controllers.T4MVC_HelpController();
    public static Eumis.Portal.Web.Controllers.MessageController Message = new Eumis.Portal.Web.Controllers.T4MVC_MessageController();
    public static Eumis.Portal.Web.Controllers.NomenclatureController Nomenclature = new Eumis.Portal.Web.Controllers.T4MVC_NomenclatureController();
    public static Eumis.Portal.Web.Controllers.OfferController Offer = new Eumis.Portal.Web.Controllers.T4MVC_OfferController();
    public static Eumis.Portal.Web.Controllers.OffersController Offers = new Eumis.Portal.Web.Controllers.T4MVC_OffersController();
    public static Eumis.Portal.Web.Controllers.ProcedureController Procedure = new Eumis.Portal.Web.Controllers.T4MVC_ProcedureController();
    public static Eumis.Portal.Web.Controllers.ProjectCommunicationAnswerController ProjectCommunicationAnswer = new Eumis.Portal.Web.Controllers.T4MVC_ProjectCommunicationAnswerController();
    public static Eumis.Portal.Web.Controllers.ProjectCommunicationController ProjectCommunication = new Eumis.Portal.Web.Controllers.T4MVC_ProjectCommunicationController();
    public static Eumis.Portal.Web.Controllers.ProjectController Project = new Eumis.Portal.Web.Controllers.T4MVC_ProjectController();
    public static Eumis.Portal.Web.Controllers.PublicController Public = new Eumis.Portal.Web.Controllers.T4MVC_PublicController();
    public static Eumis.Portal.Web.Controllers.RegisteredController Registered = new Eumis.Portal.Web.Controllers.T4MVC_RegisteredController();
    public static Eumis.Portal.Web.Controllers.SubmitController Submit = new Eumis.Portal.Web.Controllers.T4MVC_SubmitController();
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class PrivateClass
    {
        public readonly string Name = "Private";
        public Eumis.Portal.Web.Areas.Private.Controllers.BFPContractController BFPContract = new Eumis.Portal.Web.Areas.Private.Controllers.T4MVC_BFPContractController();
        public Eumis.Portal.Web.Areas.Private.Controllers.CommunicationController Communication = new Eumis.Portal.Web.Areas.Private.Controllers.T4MVC_CommunicationController();
        public Eumis.Portal.Web.Areas.Private.Controllers.EvalSheetController EvalSheet = new Eumis.Portal.Web.Areas.Private.Controllers.T4MVC_EvalSheetController();
        public Eumis.Portal.Web.Areas.Private.Controllers.EvalTableController EvalTable = new Eumis.Portal.Web.Areas.Private.Controllers.T4MVC_EvalTableController();
        public Eumis.Portal.Web.Areas.Private.Controllers.FinanceReportController FinanceReport = new Eumis.Portal.Web.Areas.Private.Controllers.T4MVC_FinanceReportController();
        public Eumis.Portal.Web.Areas.Private.Controllers.MessageSendController MessageSend = new Eumis.Portal.Web.Areas.Private.Controllers.T4MVC_MessageSendController();
        public Eumis.Portal.Web.Areas.Private.Controllers.MicroDataController MicroData = new Eumis.Portal.Web.Areas.Private.Controllers.T4MVC_MicroDataController();
        public Eumis.Portal.Web.Areas.Private.Controllers.OffersController Offers = new Eumis.Portal.Web.Areas.Private.Controllers.T4MVC_OffersController();
        public Eumis.Portal.Web.Areas.Private.Controllers.PaymentRequestController PaymentRequest = new Eumis.Portal.Web.Areas.Private.Controllers.T4MVC_PaymentRequestController();
        public Eumis.Portal.Web.Areas.Private.Controllers.ProcurementsController Procurements = new Eumis.Portal.Web.Areas.Private.Controllers.T4MVC_ProcurementsController();
        public Eumis.Portal.Web.Areas.Private.Controllers.ProjectCommunicationAnswerController ProjectCommunicationAnswer = new Eumis.Portal.Web.Areas.Private.Controllers.T4MVC_ProjectCommunicationAnswerController();
        public Eumis.Portal.Web.Areas.Private.Controllers.ProjectCommunicationController ProjectCommunication = new Eumis.Portal.Web.Areas.Private.Controllers.T4MVC_ProjectCommunicationController();
        public Eumis.Portal.Web.Areas.Private.Controllers.ProjectController Project = new Eumis.Portal.Web.Areas.Private.Controllers.T4MVC_ProjectController();
        public Eumis.Portal.Web.Areas.Private.Controllers.SpendingPlanController SpendingPlan = new Eumis.Portal.Web.Areas.Private.Controllers.T4MVC_SpendingPlanController();
        public Eumis.Portal.Web.Areas.Private.Controllers.StandpointController Standpoint = new Eumis.Portal.Web.Areas.Private.Controllers.T4MVC_StandpointController();
        public Eumis.Portal.Web.Areas.Private.Controllers.TechnicalReportController TechnicalReport = new Eumis.Portal.Web.Areas.Private.Controllers.T4MVC_TechnicalReportController();
        public T4MVC.Private.SharedController Shared = new T4MVC.Private.SharedController();
    }
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class ReportClass
    {
        public readonly string Name = "Report";
        public Eumis.Portal.Web.Areas.Report.Controllers.AccessCodeController AccessCode = new Eumis.Portal.Web.Areas.Report.Controllers.T4MVC_AccessCodeController();
        public Eumis.Portal.Web.Areas.Report.Controllers.AccountController Account = new Eumis.Portal.Web.Areas.Report.Controllers.T4MVC_AccountController();
        public Eumis.Portal.Web.Areas.Report.Controllers.BFPContractController BFPContract = new Eumis.Portal.Web.Areas.Report.Controllers.T4MVC_BFPContractController();
        public Eumis.Portal.Web.Areas.Report.Controllers.CommunicationController Communication = new Eumis.Portal.Web.Areas.Report.Controllers.T4MVC_CommunicationController();
        public Eumis.Portal.Web.Areas.Report.Controllers.FeedbackController Feedback = new Eumis.Portal.Web.Areas.Report.Controllers.T4MVC_FeedbackController();
        public Eumis.Portal.Web.Areas.Report.Controllers.FinanceReportController FinanceReport = new Eumis.Portal.Web.Areas.Report.Controllers.T4MVC_FinanceReportController();
        public Eumis.Portal.Web.Areas.Report.Controllers.HelpController Help = new Eumis.Portal.Web.Areas.Report.Controllers.T4MVC_HelpController();
        public Eumis.Portal.Web.Areas.Report.Controllers.HomeController Home = new Eumis.Portal.Web.Areas.Report.Controllers.T4MVC_HomeController();
        public Eumis.Portal.Web.Areas.Report.Controllers.ListController List = new Eumis.Portal.Web.Areas.Report.Controllers.T4MVC_ListController();
        public Eumis.Portal.Web.Areas.Report.Controllers.MicroDataController MicroData = new Eumis.Portal.Web.Areas.Report.Controllers.T4MVC_MicroDataController();
        public Eumis.Portal.Web.Areas.Report.Controllers.OfferController Offer = new Eumis.Portal.Web.Areas.Report.Controllers.T4MVC_OfferController();
        public Eumis.Portal.Web.Areas.Report.Controllers.OffersController Offers = new Eumis.Portal.Web.Areas.Report.Controllers.T4MVC_OffersController();
        public Eumis.Portal.Web.Areas.Report.Controllers.PackageController Package = new Eumis.Portal.Web.Areas.Report.Controllers.T4MVC_PackageController();
        public Eumis.Portal.Web.Areas.Report.Controllers.PaymentRequestController PaymentRequest = new Eumis.Portal.Web.Areas.Report.Controllers.T4MVC_PaymentRequestController();
        public Eumis.Portal.Web.Areas.Report.Controllers.ProcurementsController Procurements = new Eumis.Portal.Web.Areas.Report.Controllers.T4MVC_ProcurementsController();
        public Eumis.Portal.Web.Areas.Report.Controllers.SpendingPlanController SpendingPlan = new Eumis.Portal.Web.Areas.Report.Controllers.T4MVC_SpendingPlanController();
        public Eumis.Portal.Web.Areas.Report.Controllers.TechnicalReportController TechnicalReport = new Eumis.Portal.Web.Areas.Report.Controllers.T4MVC_TechnicalReportController();
        public T4MVC.Report.SharedController Shared = new T4MVC.Report.SharedController();
    }
}

#pragma warning disable 0436
namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}
#pragma warning restore 0436

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_JsonResult : System.Web.Mvc.JsonResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_JsonResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_FileResult : System.Web.Mvc.FileResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_FileResult(string area, string controller, string action, string protocol = null): base(" ")
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    protected override void WriteFile(System.Web.HttpResponseBase response) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ContentResult : System.Web.Mvc.ContentResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ContentResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Scripts {
        public const string UrlPath = "~/Scripts";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class angular {
            public const string UrlPath = "~/Scripts/angular";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string angular_animate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/angular-animate.min.js") ? Url("angular-animate.min.js") : Url("angular-animate.js");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class core {
                public const string UrlPath = "~/Scripts/angular/core";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string angular_resource_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/angular-resource.min.js") ? Url("angular-resource.min.js") : Url("angular-resource.js");
                public static readonly string angular_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/angular.min.js") ? Url("angular.min.js") : Url("angular.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class directives {
                public const string UrlPath = "~/Scripts/angular/directives";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string autoGrow_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/autoGrow.min.js") ? Url("autoGrow.min.js") : Url("autoGrow.js");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class booleanRadio {
                    public const string UrlPath = "~/Scripts/angular/directives/booleanRadio";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string booleanRadio_html = Url("booleanRadio.html");
                    public static readonly string booleanRadio_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/booleanRadio.min.js") ? Url("booleanRadio.min.js") : Url("booleanRadio.js");
                }
            
                public static readonly string bootstrapSwitch_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrapSwitch.min.js") ? Url("bootstrapSwitch.min.js") : Url("bootstrapSwitch.js");
                public static readonly string confirmClick_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/confirmClick.min.js") ? Url("confirmClick.min.js") : Url("confirmClick.js");
                public static readonly string datepicker_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/datepicker.min.js") ? Url("datepicker.min.js") : Url("datepicker.js");
                public static readonly string disabled_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/disabled.min.js") ? Url("disabled.min.js") : Url("disabled.js");
                public static readonly string enter_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/enter.min.js") ? Url("enter.min.js") : Url("enter.js");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class eumisAddress {
                    public const string UrlPath = "~/Scripts/angular/directives/eumisAddress";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string eumisAddress_html = Url("eumisAddress.html");
                    public static readonly string eumisAddress_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/eumisAddress.min.js") ? Url("eumisAddress.min.js") : Url("eumisAddress.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class eumisCompany {
                    public const string UrlPath = "~/Scripts/angular/directives/eumisCompany";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string eumisCompany_html = Url("eumisCompany.html");
                    public static readonly string eumisCompany_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/eumisCompany.min.js") ? Url("eumisCompany.min.js") : Url("eumisCompany.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class eumisCompanySearch {
                    public const string UrlPath = "~/Scripts/angular/directives/eumisCompanySearch";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string eumisCompanySearch_html = Url("eumisCompanySearch.html");
                    public static readonly string eumisCompanySearch_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/eumisCompanySearch.min.js") ? Url("eumisCompanySearch.min.js") : Url("eumisCompanySearch.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class external {
                    public const string UrlPath = "~/Scripts/angular/directives/external";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string jq_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jq.min.js") ? Url("jq.min.js") : Url("jq.js");
                    public static readonly string select2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/select2.min.js") ? Url("select2.min.js") : Url("select2.js");
                    public static readonly string ui_bootstrap_tpls_0_10_0_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/ui-bootstrap-tpls-0.10.0.min.js") ? Url("ui-bootstrap-tpls-0.10.0.min.js") : Url("ui-bootstrap-tpls-0.10.0.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class file {
                    public const string UrlPath = "~/Scripts/angular/directives/file";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string fileDirective_html = Url("fileDirective.html");
                    public static readonly string fileDirective_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/fileDirective.min.js") ? Url("fileDirective.min.js") : Url("fileDirective.js");
                }
            
                public static readonly string fireValidationPopover_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/fireValidationPopover.min.js") ? Url("fireValidationPopover.min.js") : Url("fireValidationPopover.js");
                public static readonly string historyBtn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/historyBtn.min.js") ? Url("historyBtn.min.js") : Url("historyBtn.js");
                public static readonly string infoIcon_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/infoIcon.min.js") ? Url("infoIcon.min.js") : Url("infoIcon.js");
                public static readonly string money_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/money.min.js") ? Url("money.min.js") : Url("money.js");
                public static readonly string nomenclature_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/nomenclature.min.js") ? Url("nomenclature.min.js") : Url("nomenclature.js");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class nomRadio {
                    public const string UrlPath = "~/Scripts/angular/directives/nomRadio";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string nomRadio_html = Url("nomRadio.html");
                    public static readonly string nomRadio_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/nomRadio.min.js") ? Url("nomRadio.min.js") : Url("nomRadio.js");
                }
            
                public static readonly string number_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/number.min.js") ? Url("number.min.js") : Url("number.js");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class nutsAddress {
                    public const string UrlPath = "~/Scripts/angular/directives/nutsAddress";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string nutsAddress_html = Url("nutsAddress.html");
                    public static readonly string nutsAddress_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/nutsAddress.min.js") ? Url("nutsAddress.min.js") : Url("nutsAddress.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class nutsAddressAsync {
                    public const string UrlPath = "~/Scripts/angular/directives/nutsAddressAsync";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string nutsAddressAsync_html = Url("nutsAddressAsync.html");
                    public static readonly string nutsAddressAsync_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/nutsAddressAsync.min.js") ? Url("nutsAddressAsync.min.js") : Url("nutsAddressAsync.js");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class privateNomRadio {
                    public const string UrlPath = "~/Scripts/angular/directives/privateNomRadio";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string privateNomRadio_html = Url("privateNomRadio.html");
                    public static readonly string privateNomRadio_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/privateNomRadio.min.js") ? Url("privateNomRadio.min.js") : Url("privateNomRadio.js");
                }
            
                public static readonly string scaffolding_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/scaffolding.min.js") ? Url("scaffolding.min.js") : Url("scaffolding.js");
                public static readonly string symbolsCount_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/symbolsCount.min.js") ? Url("symbolsCount.min.js") : Url("symbolsCount.js");
                public static readonly string validationPopover_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/validationPopover.min.js") ? Url("validationPopover.min.js") : Url("validationPopover.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class modules {
                public const string UrlPath = "~/Scripts/angular/modules";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string _moduleUtils_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/_moduleUtils.min.js") ? Url("_moduleUtils.min.js") : Url("_moduleUtils.js");
                public static readonly string moduleAttachedDocuments_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/moduleAttachedDocuments.min.js") ? Url("moduleAttachedDocuments.min.js") : Url("moduleAttachedDocuments.js");
                public static readonly string moduleAttachedSignatures_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/moduleAttachedSignatures.min.js") ? Url("moduleAttachedSignatures.min.js") : Url("moduleAttachedSignatures.js");
                public static readonly string moduleBFPContract_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/moduleBFPContract.min.js") ? Url("moduleBFPContract.min.js") : Url("moduleBFPContract.js");
                public static readonly string moduleCandidate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/moduleCandidate.min.js") ? Url("moduleCandidate.min.js") : Url("moduleCandidate.js");
                public static readonly string moduleCheckListGroups_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/moduleCheckListGroups.min.js") ? Url("moduleCheckListGroups.min.js") : Url("moduleCheckListGroups.js");
                public static readonly string moduleCheckSheetGroups_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/moduleCheckSheetGroups.min.js") ? Url("moduleCheckSheetGroups.min.js") : Url("moduleCheckSheetGroups.js");
                public static readonly string moduleContractTeamCollection_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/moduleContractTeamCollection.min.js") ? Url("moduleContractTeamCollection.min.js") : Url("moduleContractTeamCollection.js");
                public static readonly string moduleDirections_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/moduleDirections.min.js") ? Url("moduleDirections.min.js") : Url("moduleDirections.js");
                public static readonly string moduleDirectionsBudgetContract_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/moduleDirectionsBudgetContract.min.js") ? Url("moduleDirectionsBudgetContract.min.js") : Url("moduleDirectionsBudgetContract.js");
                public static readonly string moduleElectronicDeclarations_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/moduleElectronicDeclarations.min.js") ? Url("moduleElectronicDeclarations.min.js") : Url("moduleElectronicDeclarations.js");
                public static readonly string moduleEumisNomenclature_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/moduleEumisNomenclature.min.js") ? Url("moduleEumisNomenclature.min.js") : Url("moduleEumisNomenclature.js");
                public static readonly string moduleEvalSheetGroups_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/moduleEvalSheetGroups.min.js") ? Url("moduleEvalSheetGroups.min.js") : Url("moduleEvalSheetGroups.js");
                public static readonly string moduleEvalTableGroups_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/moduleEvalTableGroups.min.js") ? Url("moduleEvalTableGroups.min.js") : Url("moduleEvalTableGroups.js");
                public static readonly string moduleFinanceReport_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/moduleFinanceReport.min.js") ? Url("moduleFinanceReport.min.js") : Url("moduleFinanceReport.js");
                public static readonly string moduleIndicators_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/moduleIndicators.min.js") ? Url("moduleIndicators.min.js") : Url("moduleIndicators.js");
                public static readonly string moduleOffer_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/moduleOffer.min.js") ? Url("moduleOffer.min.js") : Url("moduleOffer.js");
                public static readonly string modulePaperAttachedDocuments_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/modulePaperAttachedDocuments.min.js") ? Url("modulePaperAttachedDocuments.min.js") : Url("modulePaperAttachedDocuments.js");
                public static readonly string modulePartners_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/modulePartners.min.js") ? Url("modulePartners.min.js") : Url("modulePartners.js");
                public static readonly string modulePaymentRequest_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/modulePaymentRequest.min.js") ? Url("modulePaymentRequest.min.js") : Url("modulePaymentRequest.js");
                public static readonly string modulePreliminaryContract_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/modulePreliminaryContract.min.js") ? Url("modulePreliminaryContract.min.js") : Url("modulePreliminaryContract.js");
                public static readonly string modulePreliminaryContractActivities_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/modulePreliminaryContractActivities.min.js") ? Url("modulePreliminaryContractActivities.min.js") : Url("modulePreliminaryContractActivities.js");
                public static readonly string moduleProcurements_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/moduleProcurements.min.js") ? Url("moduleProcurements.min.js") : Url("moduleProcurements.js");
                public static readonly string moduleProgrammeContractActivities_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/moduleProgrammeContractActivities.min.js") ? Url("moduleProgrammeContractActivities.min.js") : Url("moduleProgrammeContractActivities.js");
                public static readonly string moduleProjectBasicData_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/moduleProjectBasicData.min.js") ? Url("moduleProjectBasicData.min.js") : Url("moduleProjectBasicData.js");
                public static readonly string moduleProjectCommunications_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/moduleProjectCommunications.min.js") ? Url("moduleProjectCommunications.min.js") : Url("moduleProjectCommunications.js");
                public static readonly string moduleProjectErrandCollection_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/moduleProjectErrandCollection.min.js") ? Url("moduleProjectErrandCollection.min.js") : Url("moduleProjectErrandCollection.js");
                public static readonly string moduleProjectSpecFields_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/moduleProjectSpecFields.min.js") ? Url("moduleProjectSpecFields.min.js") : Url("moduleProjectSpecFields.js");
                public static readonly string moduleSpendingPlan_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/moduleSpendingPlan.min.js") ? Url("moduleSpendingPlan.min.js") : Url("moduleSpendingPlan.js");
                public static readonly string moduleTechnicalReport_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/moduleTechnicalReport.min.js") ? Url("moduleTechnicalReport.min.js") : Url("moduleTechnicalReport.js");
                public static readonly string moduleTriggers_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/moduleTriggers.min.js") ? Url("moduleTriggers.min.js") : Url("moduleTriggers.js");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class custom {
            public const string UrlPath = "~/Scripts/custom";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string html_extensions_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/html.extensions.min.js") ? Url("html.extensions.min.js") : Url("html.extensions.js");
            public static readonly string jquery_autogrow_textarea_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.autogrow-textarea.min.js") ? Url("jquery.autogrow-textarea.min.js") : Url("jquery.autogrow-textarea.js");
            public static readonly string jquery_cascadingDropDown_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.cascadingDropDown.min.js") ? Url("jquery.cascadingDropDown.min.js") : Url("jquery.cascadingDropDown.js");
            public static readonly string jquery_custom_extensions_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.custom-extensions.min.js") ? Url("jquery.custom-extensions.min.js") : Url("jquery.custom-extensions.js");
            public static readonly string js_find_extension_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/js.find.extension.min.js") ? Url("js.find.extension.min.js") : Url("js.find.extension.js");
            public static readonly string switchFunctions_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/switchFunctions.min.js") ? Url("switchFunctions.min.js") : Url("switchFunctions.js");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class js {
            public const string UrlPath = "~/Scripts/js";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string bootstrap_confirmation_min_js = Url("bootstrap-confirmation.min.js");
            public static readonly string bootstrap_datepicker_bg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.bg.min.js") ? Url("bootstrap-datepicker.bg.min.js") : Url("bootstrap-datepicker.bg.js");
            public static readonly string bootstrap_datepicker_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.min.js") ? Url("bootstrap-datepicker.min.js") : Url("bootstrap-datepicker.js");
            public static readonly string bootstrap_switch_min_js = Url("bootstrap-switch.min.js");
            public static readonly string bootstrap_tabdrop_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-tabdrop.min.js") ? Url("bootstrap-tabdrop.min.js") : Url("bootstrap-tabdrop.js");
            public static readonly string bootstrap_min_js = Url("bootstrap.min.js");
            public static readonly string highcharts_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/highcharts.min.js") ? Url("highcharts.min.js") : Url("highcharts.js");
            public static readonly string jquery_1_11_1_min_js = Url("jquery-1.11.1.min.js");
            public static readonly string jquery_ba_resize_min_js = Url("jquery.ba-resize.min.js");
            public static readonly string jquery_easing_1_3_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.easing.1.3.min.js") ? Url("jquery.easing.1.3.min.js") : Url("jquery.easing.1.3.js");
            public static readonly string jquery_lightbox_min_js = Url("jquery.lightbox.min.js");
            public static readonly string project_scripts_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/project-scripts.min.js") ? Url("project-scripts.min.js") : Url("project-scripts.js");
            public static readonly string scripts_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/scripts.min.js") ? Url("scripts.min.js") : Url("scripts.js");
            public static readonly string select2_min_js = Url("select2.min.js");
            public static readonly string select2_locale_bg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/select2_locale_bg.min.js") ? Url("select2_locale_bg.min.js") : Url("select2_locale_bg.js");
            public static readonly string select2_locale_en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/select2_locale_en.min.js") ? Url("select2_locale_en.min.js") : Url("select2_locale_en.js");
            public static readonly string time_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/time.min.js") ? Url("time.min.js") : Url("time.js");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class tree {
                public const string UrlPath = "~/Scripts/js/tree";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class css {
                    public const string UrlPath = "~/Scripts/js/tree/css";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string easyTree_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/easyTree.min.css") ? Url("easyTree.min.css") : Url("easyTree.css");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class src {
                    public const string UrlPath = "~/Scripts/js/tree/src";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string easyTree_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/easyTree.min.js") ? Url("easyTree.min.js") : Url("easyTree.js");
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class upload {
                public const string UrlPath = "~/Scripts/js/upload";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string jquery_fileupload_audio_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.fileupload-audio.min.js") ? Url("jquery.fileupload-audio.min.js") : Url("jquery.fileupload-audio.js");
                public static readonly string jquery_fileupload_image_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.fileupload-image.min.js") ? Url("jquery.fileupload-image.min.js") : Url("jquery.fileupload-image.js");
                public static readonly string jquery_fileupload_process_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.fileupload-process.min.js") ? Url("jquery.fileupload-process.min.js") : Url("jquery.fileupload-process.js");
                public static readonly string jquery_fileupload_validate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.fileupload-validate.min.js") ? Url("jquery.fileupload-validate.min.js") : Url("jquery.fileupload-validate.js");
                public static readonly string jquery_fileupload_video_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.fileupload-video.min.js") ? Url("jquery.fileupload-video.min.js") : Url("jquery.fileupload-video.js");
                public static readonly string jquery_fileupload_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.fileupload.min.js") ? Url("jquery.fileupload.min.js") : Url("jquery.fileupload.js");
                public static readonly string jquery_iframe_transport_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.iframe-transport.min.js") ? Url("jquery.iframe-transport.min.js") : Url("jquery.iframe-transport.js");
                public static readonly string jquery_ui_widget_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.ui.widget.min.js") ? Url("jquery.ui.widget.min.js") : Url("jquery.ui.widget.js");
            }
        
        }
    
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Content {
        public const string UrlPath = "~/Content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class css {
            public const string UrlPath = "~/Content/css";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string bootstrap_switch_min_css = Url("bootstrap-switch.min.css");
            public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
            public static readonly string custom_style_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/custom-style.min.css") ? Url("custom-style.min.css") : Url("custom-style.css");
            public static readonly string dark_style_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/dark-style.min.css") ? Url("dark-style.min.css") : Url("dark-style.css");
            public static readonly string datepicker_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/datepicker.min.css") ? Url("datepicker.min.css") : Url("datepicker.css");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class lightbox {
                public const string UrlPath = "~/Content/css/lightbox";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string close_png = Url("close.png");
                public static readonly string jquery_lightbox_min_css = Url("jquery.lightbox.min.css");
                public static readonly string loading_gif = Url("loading.gif");
                public static readonly string next_png = Url("next.png");
                public static readonly string previous_png = Url("previous.png");
            }
        
            public static readonly string print_style_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/print-style.min.css") ? Url("print-style.min.css") : Url("print-style.css");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class select2 {
                public const string UrlPath = "~/Content/css/select2";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string select2_spinner_gif = Url("select2-spinner.gif");
                public static readonly string select2_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/select2.min.css") ? Url("select2.min.css") : Url("select2.css");
                public static readonly string select2_png = Url("select2.png");
                public static readonly string select2x2_png = Url("select2x2.png");
            }
        
            public static readonly string style_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/style.min.css") ? Url("style.min.css") : Url("style.css");
            public static readonly string tabdrop_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/tabdrop.min.css") ? Url("tabdrop.min.css") : Url("tabdrop.css");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class fonts {
            public const string UrlPath = "~/Content/fonts";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string glyphicons_halflings_regular_eot = Url("glyphicons-halflings-regular.eot");
            public static readonly string glyphicons_halflings_regular_svg = Url("glyphicons-halflings-regular.svg");
            public static readonly string glyphicons_halflings_regular_ttf = Url("glyphicons-halflings-regular.ttf");
            public static readonly string glyphicons_halflings_regular_woff = Url("glyphicons-halflings-regular.woff");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class img {
            public const string UrlPath = "~/Content/img";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string browser_chrome_png = Url("browser_chrome.png");
            public static readonly string browser_firefox_png = Url("browser_firefox.png");
            public static readonly string browser_ie_png = Url("browser_ie.png");
            public static readonly string browser_opera_png = Url("browser_opera.png");
            public static readonly string browser_safari_png = Url("browser_safari.png");
            public static readonly string eea_norway_grants_png = Url("eea_norway_grants.png");
            public static readonly string eu_png = Url("eu.png");
            public static readonly string eu_big_jpg = Url("eu_big.jpg");
            public static readonly string eu_flag_gif = Url("eu_flag.gif");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class gallery {
                public const string UrlPath = "~/Content/img/gallery";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string _01_gif = Url("01.gif");
                public static readonly string _02_gif = Url("02.gif");
                public static readonly string _03_gif = Url("03.gif");
                public static readonly string _04_gif = Url("04.gif");
            }
        
            public static readonly string gerb_dark_png = Url("gerb-dark.png");
            public static readonly string gerb_jpg = Url("gerb.jpg");
            public static readonly string gerb_footer_png = Url("gerb_footer.png");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class icons {
                public const string UrlPath = "~/Content/img/icons";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string add_new_btn_png = Url("add-new-btn.png");
                public static readonly string arrow_back_png = Url("arrow-back.png");
                public static readonly string arrow_down_gif = Url("arrow-down.gif");
                public static readonly string arrow_right_png = Url("arrow-right.png");
                public static readonly string back_btn_arrow_png = Url("back_btn_arrow.png");
                public static readonly string black_isun_png = Url("black_isun.png");
                public static readonly string blue_arrow_right_gif = Url("blue_arrow_right.gif");
                public static readonly string blue_arrow_right_small_gif = Url("blue_arrow_right_small.gif");
                public static readonly string breadcrumb_sep_png = Url("breadcrumb-sep.png");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class browsers {
                    public const string UrlPath = "~/Content/img/icons/browsers";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string chrome_jpg = Url("chrome.jpg");
                    public static readonly string firefox_jpg = Url("firefox.jpg");
                    public static readonly string ie_jpg = Url("ie.jpg");
                    public static readonly string opera_jpg = Url("opera.jpg");
                    public static readonly string safari_jpg = Url("safari.jpg");
                }
            
                public static readonly string copy_btn_png = Url("copy-btn.png");
                public static readonly string deadline_gif = Url("deadline.gif");
                public static readonly string delete_btn_png = Url("delete-btn.png");
                public static readonly string delete_file_btn_png = Url("delete-file-btn.png");
                public static readonly string download_as_file_gif = Url("download-as-file.gif");
                public static readonly string download_icon_png = Url("download-icon.png");
                public static readonly string drop_arrow_gif = Url("drop-arrow.gif");
                public static readonly string eco_tree_png = Url("eco_tree.png");
                public static readonly string edit_btn_png = Url("edit-btn.png");
                public static readonly string error_gif = Url("error.gif");
                public static readonly string favicon_ico = Url("favicon.ico");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class files {
                    public const string UrlPath = "~/Content/img/icons/files";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string doc_png = Url("doc.png");
                    public static readonly string file_png = Url("file.png");
                    public static readonly string html_png = Url("html.png");
                    public static readonly string pdf_png = Url("pdf.png");
                    public static readonly string ppt_png = Url("ppt.png");
                    public static readonly string txt_png = Url("txt.png");
                    public static readonly string xls_png = Url("xls.png");
                    public static readonly string zip_png = Url("zip.png");
                }
            
                public static readonly string finance_report_png = Url("finance-report.png");
                public static readonly string gototop_png = Url("gototop.png");
                public static readonly string green_tick_gif = Url("green-tick.gif");
                public static readonly string history_btn_png = Url("history-btn.png");
                public static readonly string incoming_jpg = Url("incoming.jpg");
                public static readonly string incoming_png = Url("incoming.png");
                public static readonly string info_white_png = Url("info-white.png");
                public static readonly string info_png = Url("info.png");
                public static readonly string isun_png = Url("isun.png");
                public static readonly string lang_jpg = Url("lang.jpg");
                public static readonly string list_arrow_right_gif = Url("list-arrow-right.gif");
                public static readonly string mappointer_png = Url("mappointer.png");
                public static readonly string microdata_png = Url("microdata.png");
                public static readonly string news_png = Url("news.png");
                public static readonly string outgoing_jpg = Url("outgoing.jpg");
                public static readonly string outgoing_png = Url("outgoing.png");
                public static readonly string pay_request_png = Url("pay-request.png");
                public static readonly string people_png = Url("people.png");
                public static readonly string preview_btn_png = Url("preview-btn.png");
                public static readonly string print_2_gif = Url("print-2.gif");
                public static readonly string print_gif = Url("print.gif");
                public static readonly string public_module_png = Url("public_module.png");
                public static readonly string red_cross_gif = Url("red-cross.gif");
                public static readonly string rules_btn_bw_png = Url("rules-btn-bw.png");
                public static readonly string rules_btn_png = Url("rules-btn.png");
                public static readonly string save_as_draft_gif = Url("save-as-draft.gif");
                public static readonly string search_btn_png = Url("search-btn.png");
                public static readonly string search_png = Url("search.png");
                public static readonly string send_btn_png = Url("send-btn.png");
                public static readonly string stats_png = Url("stats.png");
                public static readonly string step_final_png = Url("step-final.png");
                public static readonly string subm_add_gif = Url("subm-add.gif");
                public static readonly string subm_choose_gif = Url("subm-choose.gif");
                public static readonly string subm_download_gif = Url("subm-download.gif");
                public static readonly string subm_download_png = Url("subm-download.png");
                public static readonly string subm_print_gif = Url("subm-print.gif");
                public static readonly string subm_sign_gif = Url("subm-sign.gif");
                public static readonly string success_gif = Url("success.gif");
                public static readonly string success_png = Url("success.png");
                public static readonly string tech_report_png = Url("tech-report.png");
                public static readonly string tick_gif = Url("tick.gif");
                public static readonly string tick_blue_gif = Url("tick_blue.gif");
                public static readonly string upload_as_file_gif = Url("upload-as-file.gif");
                public static readonly string validate_gif = Url("validate.gif");
                public static readonly string warning_orange_png = Url("warning-orange.png");
                public static readonly string warning_red_gif = Url("warning-red.gif");
                public static readonly string warning_gif = Url("warning.gif");
                public static readonly string warning_png = Url("warning.png");
                public static readonly string white_isun_png = Url("white_isun.png");
                public static readonly string zoomin_gif = Url("zoomin.gif");
            }
        
            public static readonly string isun_lg_gif = Url("isun-lg.gif");
            public static readonly string isun_line_jpg = Url("isun-line.jpg");
            public static readonly string isun_gif = Url("isun.gif");
            public static readonly string isun_png = Url("isun.png");
            public static readonly string loader_gif = Url("loader.gif");
            public static readonly string loader_h26_gif = Url("loader_h26.gif");
            public static readonly string logo_png = Url("logo.png");
            public static readonly string logo_big_jpg = Url("logo_big.jpg");
            public static readonly string logo_good_governance_bg_png = Url("logo_good_governance_bg.png");
            public static readonly string narrow_subheader_dark_jpg = Url("narrow-subheader-dark.jpg");
            public static readonly string narrow_subheader_jpg = Url("narrow-subheader.jpg");
            public static readonly string public_subheader_jpg = Url("public_subheader.jpg");
            public static readonly string qr_jpg = Url("qr.jpg");
            public static readonly string subheader_jpg = Url("subheader.jpg");
            public static readonly string support_mail_PNG = Url("support-mail.PNG");
        }
    
        public static readonly string PagedList_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/PagedList.min.css") ? Url("PagedList.min.css") : Url("PagedList.css");
    }

    
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class Bundles
    {
        public static partial class Scripts 
        {
            public static partial class angular 
            {
                public static partial class core 
                {
                    public static class Assets
                    {
                        public static readonly string angular_resource_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/core/angular-resource.js"); 
                        public static readonly string angular_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/core/angular.js"); 
                    }
                }
                public static partial class directives 
                {
                    public static partial class booleanRadio 
                    {
                        public static class Assets
                        {
                            public static readonly string booleanRadio_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/directives/booleanRadio/booleanRadio.js"); 
                        }
                    }
                    public static partial class eumisAddress 
                    {
                        public static class Assets
                        {
                            public static readonly string eumisAddress_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/directives/eumisAddress/eumisAddress.js"); 
                        }
                    }
                    public static partial class eumisCompany 
                    {
                        public static class Assets
                        {
                            public static readonly string eumisCompany_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/directives/eumisCompany/eumisCompany.js"); 
                        }
                    }
                    public static partial class eumisCompanySearch 
                    {
                        public static class Assets
                        {
                            public static readonly string eumisCompanySearch_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/directives/eumisCompanySearch/eumisCompanySearch.js"); 
                        }
                    }
                    public static partial class external 
                    {
                        public static class Assets
                        {
                            public static readonly string jq_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/directives/external/jq.js"); 
                            public static readonly string select2_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/directives/external/select2.js"); 
                            public static readonly string ui_bootstrap_tpls_0_10_0_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/directives/external/ui-bootstrap-tpls-0.10.0.js"); 
                        }
                    }
                    public static partial class file 
                    {
                        public static class Assets
                        {
                            public static readonly string fileDirective_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/directives/file/fileDirective.js"); 
                        }
                    }
                    public static partial class nomRadio 
                    {
                        public static class Assets
                        {
                            public static readonly string nomRadio_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/directives/nomRadio/nomRadio.js"); 
                        }
                    }
                    public static partial class nutsAddress 
                    {
                        public static class Assets
                        {
                            public static readonly string nutsAddress_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/directives/nutsAddress/nutsAddress.js"); 
                        }
                    }
                    public static partial class nutsAddressAsync 
                    {
                        public static class Assets
                        {
                            public static readonly string nutsAddressAsync_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/directives/nutsAddressAsync/nutsAddressAsync.js"); 
                        }
                    }
                    public static partial class privateNomRadio 
                    {
                        public static class Assets
                        {
                            public static readonly string privateNomRadio_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/directives/privateNomRadio/privateNomRadio.js"); 
                        }
                    }
                    public static class Assets
                    {
                        public static readonly string autoGrow_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/directives/autoGrow.js"); 
                        public static readonly string bootstrapSwitch_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/directives/bootstrapSwitch.js"); 
                        public static readonly string confirmClick_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/directives/confirmClick.js"); 
                        public static readonly string datepicker_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/directives/datepicker.js"); 
                        public static readonly string disabled_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/directives/disabled.js"); 
                        public static readonly string enter_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/directives/enter.js"); 
                        public static readonly string fireValidationPopover_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/directives/fireValidationPopover.js"); 
                        public static readonly string historyBtn_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/directives/historyBtn.js"); 
                        public static readonly string infoIcon_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/directives/infoIcon.js"); 
                        public static readonly string money_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/directives/money.js"); 
                        public static readonly string nomenclature_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/directives/nomenclature.js"); 
                        public static readonly string number_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/directives/number.js"); 
                        public static readonly string scaffolding_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/directives/scaffolding.js"); 
                        public static readonly string symbolsCount_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/directives/symbolsCount.js"); 
                        public static readonly string validationPopover_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/directives/validationPopover.js"); 
                    }
                }
                public static partial class modules 
                {
                    public static class Assets
                    {
                        public static readonly string _moduleUtils_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/modules/_moduleUtils.js"); 
                        public static readonly string moduleAttachedDocuments_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/modules/moduleAttachedDocuments.js"); 
                        public static readonly string moduleAttachedSignatures_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/modules/moduleAttachedSignatures.js"); 
                        public static readonly string moduleBFPContract_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/modules/moduleBFPContract.js"); 
                        public static readonly string moduleCandidate_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/modules/moduleCandidate.js"); 
                        public static readonly string moduleCheckListGroups_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/modules/moduleCheckListGroups.js"); 
                        public static readonly string moduleCheckSheetGroups_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/modules/moduleCheckSheetGroups.js"); 
                        public static readonly string moduleContractTeamCollection_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/modules/moduleContractTeamCollection.js"); 
                        public static readonly string moduleDirections_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/modules/moduleDirections.js"); 
                        public static readonly string moduleDirectionsBudgetContract_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/modules/moduleDirectionsBudgetContract.js"); 
                        public static readonly string moduleElectronicDeclarations_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/modules/moduleElectronicDeclarations.js"); 
                        public static readonly string moduleEumisNomenclature_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/modules/moduleEumisNomenclature.js"); 
                        public static readonly string moduleEvalSheetGroups_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/modules/moduleEvalSheetGroups.js"); 
                        public static readonly string moduleEvalTableGroups_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/modules/moduleEvalTableGroups.js"); 
                        public static readonly string moduleFinanceReport_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/modules/moduleFinanceReport.js"); 
                        public static readonly string moduleIndicators_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/modules/moduleIndicators.js"); 
                        public static readonly string moduleOffer_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/modules/moduleOffer.js"); 
                        public static readonly string modulePaperAttachedDocuments_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/modules/modulePaperAttachedDocuments.js"); 
                        public static readonly string modulePartners_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/modules/modulePartners.js"); 
                        public static readonly string modulePaymentRequest_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/modules/modulePaymentRequest.js"); 
                        public static readonly string modulePreliminaryContract_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/modules/modulePreliminaryContract.js"); 
                        public static readonly string modulePreliminaryContractActivities_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/modules/modulePreliminaryContractActivities.js"); 
                        public static readonly string moduleProcurements_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/modules/moduleProcurements.js"); 
                        public static readonly string moduleProgrammeContractActivities_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/modules/moduleProgrammeContractActivities.js"); 
                        public static readonly string moduleProjectBasicData_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/modules/moduleProjectBasicData.js"); 
                        public static readonly string moduleProjectCommunications_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/modules/moduleProjectCommunications.js"); 
                        public static readonly string moduleProjectErrandCollection_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/modules/moduleProjectErrandCollection.js"); 
                        public static readonly string moduleProjectSpecFields_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/modules/moduleProjectSpecFields.js"); 
                        public static readonly string moduleSpendingPlan_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/modules/moduleSpendingPlan.js"); 
                        public static readonly string moduleTechnicalReport_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/modules/moduleTechnicalReport.js"); 
                        public static readonly string moduleTriggers_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/modules/moduleTriggers.js"); 
                    }
                }
                public static class Assets
                {
                    public static readonly string angular_animate_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/angular/angular-animate.js"); 
                }
            }
            public static partial class custom 
            {
                public static class Assets
                {
                    public static readonly string html_extensions_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/custom/html.extensions.js"); 
                    public static readonly string jquery_autogrow_textarea_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/custom/jquery.autogrow-textarea.js"); 
                    public static readonly string jquery_cascadingDropDown_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/custom/jquery.cascadingDropDown.js"); 
                    public static readonly string jquery_custom_extensions_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/custom/jquery.custom-extensions.js"); 
                    public static readonly string js_find_extension_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/custom/js.find.extension.js"); 
                    public static readonly string switchFunctions_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/custom/switchFunctions.js"); 
                }
            }
            public static partial class js 
            {
                public static partial class tree 
                {
                    public static partial class css 
                    {
                        public static class Assets
                        {
                            public static readonly string easyTree_css = T4MVCHelpers.ProcessAssetPath("~/Scripts/js/tree/css/easyTree.css");
                        }
                    }
                    public static partial class src 
                    {
                        public static class Assets
                        {
                            public static readonly string easyTree_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/js/tree/src/easyTree.js"); 
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class upload 
                {
                    public static class Assets
                    {
                        public static readonly string jquery_fileupload_audio_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/js/upload/jquery.fileupload-audio.js"); 
                        public static readonly string jquery_fileupload_image_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/js/upload/jquery.fileupload-image.js"); 
                        public static readonly string jquery_fileupload_process_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/js/upload/jquery.fileupload-process.js"); 
                        public static readonly string jquery_fileupload_validate_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/js/upload/jquery.fileupload-validate.js"); 
                        public static readonly string jquery_fileupload_video_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/js/upload/jquery.fileupload-video.js"); 
                        public static readonly string jquery_fileupload_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/js/upload/jquery.fileupload.js"); 
                        public static readonly string jquery_iframe_transport_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/js/upload/jquery.iframe-transport.js"); 
                        public static readonly string jquery_ui_widget_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/js/upload/jquery.ui.widget.js"); 
                    }
                }
                public static class Assets
                {
                    public static readonly string bootstrap_confirmation_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/js/bootstrap-confirmation.min.js"); 
                    public static readonly string bootstrap_datepicker_bg_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/js/bootstrap-datepicker.bg.js"); 
                    public static readonly string bootstrap_datepicker_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/js/bootstrap-datepicker.js"); 
                    public static readonly string bootstrap_switch_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/js/bootstrap-switch.min.js"); 
                    public static readonly string bootstrap_tabdrop_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/js/bootstrap-tabdrop.js"); 
                    public static readonly string bootstrap_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/js/bootstrap.min.js"); 
                    public static readonly string highcharts_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/js/highcharts.js"); 
                    public static readonly string jquery_1_11_1_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/js/jquery-1.11.1.min.js"); 
                    public static readonly string jquery_ba_resize_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/js/jquery.ba-resize.min.js"); 
                    public static readonly string jquery_easing_1_3_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/js/jquery.easing.1.3.js"); 
                    public static readonly string jquery_lightbox_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/js/jquery.lightbox.min.js"); 
                    public static readonly string project_scripts_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/js/project-scripts.js"); 
                    public static readonly string scripts_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/js/scripts.js"); 
                    public static readonly string select2_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/js/select2.min.js"); 
                    public static readonly string select2_locale_bg_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/js/select2_locale_bg.js"); 
                    public static readonly string select2_locale_en_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/js/select2_locale_en.js"); 
                    public static readonly string time_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/js/time.js"); 
                }
            }
            public static class Assets
            {
            }
        }
        public static partial class Content 
        {
            public static partial class css 
            {
                public static partial class lightbox 
                {
                    public static class Assets
                    {
                        public static readonly string jquery_lightbox_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/css/lightbox/jquery.lightbox.min.css");
                    }
                }
                public static partial class select2 
                {
                    public static class Assets
                    {
                        public static readonly string select2_css = T4MVCHelpers.ProcessAssetPath("~/Content/css/select2/select2.css");
                    }
                }
                public static class Assets
                {
                    public static readonly string bootstrap_switch_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/css/bootstrap-switch.min.css");
                    public static readonly string bootstrap_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/css/bootstrap.min.css");
                    public static readonly string custom_style_css = T4MVCHelpers.ProcessAssetPath("~/Content/css/custom-style.css");
                    public static readonly string dark_style_css = T4MVCHelpers.ProcessAssetPath("~/Content/css/dark-style.css");
                    public static readonly string datepicker_css = T4MVCHelpers.ProcessAssetPath("~/Content/css/datepicker.css");
                    public static readonly string print_style_css = T4MVCHelpers.ProcessAssetPath("~/Content/css/print-style.css");
                    public static readonly string style_css = T4MVCHelpers.ProcessAssetPath("~/Content/css/style.css");
                    public static readonly string tabdrop_css = T4MVCHelpers.ProcessAssetPath("~/Content/css/tabdrop.css");
                }
            }
            public static partial class fonts 
            {
                public static class Assets
                {
                }
            }
            public static partial class img 
            {
                public static partial class gallery 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class icons 
                {
                    public static partial class browsers 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class files 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                }
            }
            public static class Assets
            {
                public static readonly string PagedList_css = T4MVCHelpers.ProcessAssetPath("~/Content/PagedList.css");
            }
        }
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    private static string ProcessAssetPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and should retain this prefix
        return virtualPath;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;
    public static Func<string, string> ProcessAssetPath = ProcessAssetPathDefault;

    // Calling T4Extension.TimestampString through delegate to allow it to be replaced for unit testing and other purposes
    public static Func<string, string> TimestampString = System.Web.Mvc.T4Extensions.TimestampString;

    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}





#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114


