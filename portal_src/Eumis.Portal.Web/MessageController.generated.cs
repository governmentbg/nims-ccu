// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Eumis.Portal.Web.Controllers
{
    public partial class MessageController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected MessageController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Index()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Preview()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Preview);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult PreviewAnswer()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PreviewAnswer);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult NewAnswer()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.NewAnswer);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Edit()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Edit);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Delete()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Delete);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.FileResult GetDeclaration()
        {
            return new T4MVC_System_Web_Mvc_FileResult(Area, Name, ActionNames.GetDeclaration);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.FileResult GetLabel()
        {
            return new T4MVC_System_Web_Mvc_FileResult(Area, Name, ActionNames.GetLabel);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Submit()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Submit);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.FileResult SaveDeclaration()
        {
            return new T4MVC_System_Web_Mvc_FileResult(Area, Name, ActionNames.SaveDeclaration);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.FileResult SaveLabel()
        {
            return new T4MVC_System_Web_Mvc_FileResult(Area, Name, ActionNames.SaveLabel);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ContentResult Save()
        {
            return new T4MVC_System_Web_Mvc_ContentResult(Area, Name, ActionNames.Save);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public MessageController Actions { get { return MVC.Message; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Message";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Message";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string New = "New";
            public readonly string Preview = "Preview";
            public readonly string PreviewAnswer = "PreviewAnswer";
            public readonly string NewAnswer = "NewAnswer";
            public readonly string Prepare = "Prepare";
            public readonly string Edit = "Edit";
            public readonly string Finalize = "Finalize";
            public readonly string Delete = "Delete";
            public readonly string GetDeclaration = "GetDeclaration";
            public readonly string GetLabel = "GetLabel";
            public readonly string Submit = "Submit";
            public readonly string HowToSubmit = "HowToSubmit";
            public readonly string SaveForPaper = "SaveForPaper";
            public readonly string Paper = "Paper";
            public readonly string SaveDeclaration = "SaveDeclaration";
            public readonly string SaveLabel = "SaveLabel";
            public readonly string Signature = "Signature";
            public readonly string Download = "Download";
            public readonly string Finish = "Finish";
            public readonly string Display = "Display";
            public readonly string Save = "Save";
            public readonly string Print = "Print";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string New = "New";
            public const string Preview = "Preview";
            public const string PreviewAnswer = "PreviewAnswer";
            public const string NewAnswer = "NewAnswer";
            public const string Prepare = "Prepare";
            public const string Edit = "Edit";
            public const string Finalize = "Finalize";
            public const string Delete = "Delete";
            public const string GetDeclaration = "GetDeclaration";
            public const string GetLabel = "GetLabel";
            public const string Submit = "Submit";
            public const string HowToSubmit = "HowToSubmit";
            public const string SaveForPaper = "SaveForPaper";
            public const string Paper = "Paper";
            public const string SaveDeclaration = "SaveDeclaration";
            public const string SaveLabel = "SaveLabel";
            public const string Signature = "Signature";
            public const string Download = "Download";
            public const string Finish = "Finish";
            public const string Display = "Display";
            public const string Save = "Save";
            public const string Print = "Print";
        }


        static readonly ActionParamsClass_Index s_params_Index = new ActionParamsClass_Index();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Index IndexParams { get { return s_params_Index; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Index
        {
            public readonly string hasFinishedAnswer = "hasFinishedAnswer";
        }
        static readonly ActionParamsClass_Preview s_params_Preview = new ActionParamsClass_Preview();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Preview PreviewParams { get { return s_params_Preview; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Preview
        {
            public readonly string gid = "gid";
        }
        static readonly ActionParamsClass_PreviewAnswer s_params_PreviewAnswer = new ActionParamsClass_PreviewAnswer();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_PreviewAnswer PreviewAnswerParams { get { return s_params_PreviewAnswer; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_PreviewAnswer
        {
            public readonly string communicationGid = "communicationGid";
            public readonly string answerGid = "answerGid";
        }
        static readonly ActionParamsClass_NewAnswer s_params_NewAnswer = new ActionParamsClass_NewAnswer();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_NewAnswer NewAnswerParams { get { return s_params_NewAnswer; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_NewAnswer
        {
            public readonly string communicationGid = "communicationGid";
            public readonly string version = "version";
        }
        static readonly ActionParamsClass_Prepare s_params_Prepare = new ActionParamsClass_Prepare();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Prepare PrepareParams { get { return s_params_Prepare; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Prepare
        {
            public readonly string vm = "vm";
        }
        static readonly ActionParamsClass_Edit s_params_Edit = new ActionParamsClass_Edit();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Edit EditParams { get { return s_params_Edit; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Edit
        {
            public readonly string communicationGid = "communicationGid";
            public readonly string answerGid = "answerGid";
            public readonly string status = "status";
            public readonly string version = "version";
        }
        static readonly ActionParamsClass_Delete s_params_Delete = new ActionParamsClass_Delete();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Delete DeleteParams { get { return s_params_Delete; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Delete
        {
            public readonly string communicationGid = "communicationGid";
            public readonly string answerGid = "answerGid";
            public readonly string version = "version";
        }
        static readonly ActionParamsClass_GetDeclaration s_params_GetDeclaration = new ActionParamsClass_GetDeclaration();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetDeclaration GetDeclarationParams { get { return s_params_GetDeclaration; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetDeclaration
        {
            public readonly string gid = "gid";
            public readonly string hash = "hash";
        }
        static readonly ActionParamsClass_GetLabel s_params_GetLabel = new ActionParamsClass_GetLabel();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetLabel GetLabelParams { get { return s_params_GetLabel; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetLabel
        {
            public readonly string communicationGid = "communicationGid";
            public readonly string answerGid = "answerGid";
            public readonly string hash = "hash";
        }
        static readonly ActionParamsClass_Submit s_params_Submit = new ActionParamsClass_Submit();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Submit SubmitParams { get { return s_params_Submit; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Submit
        {
            public readonly string communicationGid = "communicationGid";
            public readonly string answerGid = "answerGid";
        }
        static readonly ActionParamsClass_SaveDeclaration s_params_SaveDeclaration = new ActionParamsClass_SaveDeclaration();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SaveDeclaration SaveDeclarationParams { get { return s_params_SaveDeclaration; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SaveDeclaration
        {
            public readonly string hash = "hash";
        }
        static readonly ActionParamsClass_SaveLabel s_params_SaveLabel = new ActionParamsClass_SaveLabel();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SaveLabel SaveLabelParams { get { return s_params_SaveLabel; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SaveLabel
        {
            public readonly string hash = "hash";
        }
        static readonly ActionParamsClass_Signature s_params_Signature = new ActionParamsClass_Signature();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Signature SignatureParams { get { return s_params_Signature; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Signature
        {
            public readonly string form = "form";
        }
        static readonly ActionParamsClass_Save s_params_Save = new ActionParamsClass_Save();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Save SaveParams { get { return s_params_Save; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Save
        {
            public readonly string model = "model";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string Declaration = "Declaration";
                public readonly string Display = "Display";
                public readonly string Finalized = "Finalized";
                public readonly string Finish = "Finish";
                public readonly string HowToSubmit = "HowToSubmit";
                public readonly string Index = "Index";
                public readonly string Label = "Label";
                public readonly string Paper = "Paper";
                public readonly string Prepare = "Prepare";
                public readonly string Preview = "Preview";
                public readonly string Print = "Print";
                public readonly string Signature = "Signature";
                public readonly string Submit = "Submit";
            }
            public readonly string Declaration = "~/Views/Message/Declaration.cshtml";
            public readonly string Display = "~/Views/Message/Display.cshtml";
            public readonly string Finalized = "~/Views/Message/Finalized.cshtml";
            public readonly string Finish = "~/Views/Message/Finish.cshtml";
            public readonly string HowToSubmit = "~/Views/Message/HowToSubmit.cshtml";
            public readonly string Index = "~/Views/Message/Index.cshtml";
            public readonly string Label = "~/Views/Message/Label.cshtml";
            public readonly string Paper = "~/Views/Message/Paper.cshtml";
            public readonly string Prepare = "~/Views/Message/Prepare.cshtml";
            public readonly string Preview = "~/Views/Message/Preview.cshtml";
            public readonly string Print = "~/Views/Message/Print.cshtml";
            public readonly string Signature = "~/Views/Message/Signature.cshtml";
            public readonly string Submit = "~/Views/Message/Submit.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_MessageController : Eumis.Portal.Web.Controllers.MessageController
    {
        public T4MVC_MessageController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, bool? hasFinishedAnswer);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index(bool? hasFinishedAnswer)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "hasFinishedAnswer", hasFinishedAnswer);
            IndexOverride(callInfo, hasFinishedAnswer);
            return callInfo;
        }

        [NonAction]
        partial void NewOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult New()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.New);
            NewOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void PreviewOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Guid gid);

        [NonAction]
        public override System.Web.Mvc.ActionResult Preview(System.Guid gid)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Preview);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "gid", gid);
            PreviewOverride(callInfo, gid);
            return callInfo;
        }

        [NonAction]
        partial void PreviewAnswerOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Guid communicationGid, System.Guid answerGid);

        [NonAction]
        public override System.Web.Mvc.ActionResult PreviewAnswer(System.Guid communicationGid, System.Guid answerGid)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PreviewAnswer);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "communicationGid", communicationGid);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "answerGid", answerGid);
            PreviewAnswerOverride(callInfo, communicationGid, answerGid);
            return callInfo;
        }

        [NonAction]
        partial void NewAnswerOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Guid communicationGid, string version);

        [NonAction]
        public override System.Web.Mvc.ActionResult NewAnswer(System.Guid communicationGid, string version)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.NewAnswer);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "communicationGid", communicationGid);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "version", version);
            NewAnswerOverride(callInfo, communicationGid, version);
            return callInfo;
        }

        [NonAction]
        partial void PrepareOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Eumis.Portal.Web.Models.Message.EditVM vm);

        [NonAction]
        public override System.Web.Mvc.ActionResult Prepare(Eumis.Portal.Web.Models.Message.EditVM vm)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Prepare);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "vm", vm);
            PrepareOverride(callInfo, vm);
            return callInfo;
        }

        [NonAction]
        partial void EditOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Guid communicationGid, System.Guid answerGid, Eumis.Documents.Contracts.RegMessageAnswerType status, string version);

        [NonAction]
        public override System.Web.Mvc.ActionResult Edit(System.Guid communicationGid, System.Guid answerGid, Eumis.Documents.Contracts.RegMessageAnswerType status, string version)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Edit);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "communicationGid", communicationGid);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "answerGid", answerGid);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "status", status);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "version", version);
            EditOverride(callInfo, communicationGid, answerGid, status, version);
            return callInfo;
        }

        [NonAction]
        partial void FinalizeOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Finalize()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Finalize);
            FinalizeOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void DeleteOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Guid communicationGid, System.Guid answerGid, string version);

        [NonAction]
        public override System.Web.Mvc.ActionResult Delete(System.Guid communicationGid, System.Guid answerGid, string version)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Delete);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "communicationGid", communicationGid);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "answerGid", answerGid);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "version", version);
            DeleteOverride(callInfo, communicationGid, answerGid, version);
            return callInfo;
        }

        [NonAction]
        partial void GetDeclarationOverride(T4MVC_System_Web_Mvc_FileResult callInfo, System.Guid gid, string hash);

        [NonAction]
        public override System.Web.Mvc.FileResult GetDeclaration(System.Guid gid, string hash)
        {
            var callInfo = new T4MVC_System_Web_Mvc_FileResult(Area, Name, ActionNames.GetDeclaration);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "gid", gid);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "hash", hash);
            GetDeclarationOverride(callInfo, gid, hash);
            return callInfo;
        }

        [NonAction]
        partial void GetLabelOverride(T4MVC_System_Web_Mvc_FileResult callInfo, System.Guid communicationGid, System.Guid answerGid, string hash);

        [NonAction]
        public override System.Web.Mvc.FileResult GetLabel(System.Guid communicationGid, System.Guid answerGid, string hash)
        {
            var callInfo = new T4MVC_System_Web_Mvc_FileResult(Area, Name, ActionNames.GetLabel);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "communicationGid", communicationGid);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "answerGid", answerGid);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "hash", hash);
            GetLabelOverride(callInfo, communicationGid, answerGid, hash);
            return callInfo;
        }

        [NonAction]
        partial void SubmitOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Guid communicationGid, System.Guid answerGid);

        [NonAction]
        public override System.Web.Mvc.ActionResult Submit(System.Guid communicationGid, System.Guid answerGid)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Submit);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "communicationGid", communicationGid);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "answerGid", answerGid);
            SubmitOverride(callInfo, communicationGid, answerGid);
            return callInfo;
        }

        [NonAction]
        partial void HowToSubmitOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult HowToSubmit()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.HowToSubmit);
            HowToSubmitOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void SaveForPaperOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult SaveForPaper()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SaveForPaper);
            SaveForPaperOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void PaperOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Paper()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Paper);
            PaperOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void SaveDeclarationOverride(T4MVC_System_Web_Mvc_FileResult callInfo, string hash);

        [NonAction]
        public override System.Web.Mvc.FileResult SaveDeclaration(string hash)
        {
            var callInfo = new T4MVC_System_Web_Mvc_FileResult(Area, Name, ActionNames.SaveDeclaration);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "hash", hash);
            SaveDeclarationOverride(callInfo, hash);
            return callInfo;
        }

        [NonAction]
        partial void SaveLabelOverride(T4MVC_System_Web_Mvc_FileResult callInfo, string hash);

        [NonAction]
        public override System.Web.Mvc.FileResult SaveLabel(string hash)
        {
            var callInfo = new T4MVC_System_Web_Mvc_FileResult(Area, Name, ActionNames.SaveLabel);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "hash", hash);
            SaveLabelOverride(callInfo, hash);
            return callInfo;
        }

        [NonAction]
        partial void SignatureOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Signature()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Signature);
            SignatureOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void SignatureOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Web.Mvc.FormCollection form);

        [NonAction]
        public override System.Web.Mvc.ActionResult Signature(System.Web.Mvc.FormCollection form)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Signature);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "form", form);
            SignatureOverride(callInfo, form);
            return callInfo;
        }

        [NonAction]
        partial void DownloadOverride(T4MVC_System_Web_Mvc_FileResult callInfo);

        [NonAction]
        public override System.Web.Mvc.FileResult Download()
        {
            var callInfo = new T4MVC_System_Web_Mvc_FileResult(Area, Name, ActionNames.Download);
            DownloadOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void FinishOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Finish()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Finish);
            FinishOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void PrepareOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Prepare()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Prepare);
            PrepareOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void DisplayOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Display()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Display);
            DisplayOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void SaveOverride(T4MVC_System_Web_Mvc_ContentResult callInfo, Eumis.Portal.Web.Models.Message.EditVM model);

        [NonAction]
        public override System.Web.Mvc.ContentResult Save(Eumis.Portal.Web.Models.Message.EditVM model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ContentResult(Area, Name, ActionNames.Save);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            SaveOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void PrintOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Print()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Print);
            PrintOverride(callInfo);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
