<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ForgotPasswordSuccess" xml:space="preserve">
    <value>Ще получите съобщение на имейл адрес &lt;b&gt;{0}&lt;/b&gt; с линк за потвърждение.</value>
  </data>
  <data name="RecoveryPasswordSuccess" xml:space="preserve">
    <value>Паролата е променена успешно.</value>
  </data>
  <data name="RegisterSuccess" xml:space="preserve">
    <value>Регистрацията премина успешно. На посочения електронен адрес &lt;b&gt;{0}&lt;/b&gt; ще получите линк за потвърждение, с който може да активирате профила си.</value>
  </data>
  <data name="ValidationActivationConfirmPasswordInvalid" xml:space="preserve">
    <value>Полетата "Парола" и "Парола отново" не съвпадат.</value>
  </data>
  <data name="ValidationActivationConfirmPasswordRequired" xml:space="preserve">
    <value>Полето "Парола отново" е задължително.</value>
  </data>
  <data name="ValidationActivationPasswordInvalid" xml:space="preserve">
    <value>Полето "Парола" трябва да съдържа поне 8 символа.</value>
  </data>
  <data name="ValidationActivationPasswordRequired" xml:space="preserve">
    <value>Полето "Парола" е задължително.</value>
  </data>
  <data name="ValidationConfirmPasswordInvalid" xml:space="preserve">
    <value>Полетата "Нова парола" и "Въведи новата парола повторно" не съвпадат.</value>
  </data>
  <data name="ValidationConfirmPasswordRequired" xml:space="preserve">
    <value>Полето "Въведи новата парола повторно" е задължително.</value>
  </data>
  <data name="ValidationEmailForgottenInvalid" xml:space="preserve">
    <value>Полето "Потребителско име" е невалидно.</value>
  </data>
  <data name="ValidationEmailForgottenRequired" xml:space="preserve">
    <value>Полето "Потребителско име" е задължително.</value>
  </data>
  <data name="ValidationEmailInvalid" xml:space="preserve">
    <value>Полето "Потребителско име", съдържащо Вашия имейл адрес е невалидно.</value>
  </data>
  <data name="ValidationEmailLength" xml:space="preserve">
    <value>Полето "Потребителско име" не може да съдържа повече от 100 символа.</value>
  </data>
  <data name="ValidationEmailRequired" xml:space="preserve">
    <value>Полето "Потребителско име", съдържащо Вашия имейл адрес е задължително.</value>
  </data>
  <data name="ValidationFirstNameLength" xml:space="preserve">
    <value>Полето "Собствено име" не може да съдържа повече от 100 символа.</value>
  </data>
  <data name="ValidationFirstNameRequired" xml:space="preserve">
    <value>Полето "Собствено име" е задължително.</value>
  </data>
  <data name="ValidationLastNameLength" xml:space="preserve">
    <value>Полето "Фамилия" не може да съдържа повече от 100 символа.</value>
  </data>
  <data name="ValidationLastNameRequired" xml:space="preserve">
    <value>Полето "Фамилия" е задължително.</value>
  </data>
  <data name="ValidationNameRequired" xml:space="preserve">
    <value>Полето "Име" е задължително.</value>
  </data>
  <data name="ValidationOldPasswordRequired" xml:space="preserve">
    <value>Полето "Стара парола" е задължително.</value>
  </data>
  <data name="ValidationPasswordInvalid" xml:space="preserve">
    <value>Полето "Нова парола" трябва да съдържа поне 6 символа.</value>
  </data>
  <data name="ValidationPasswordLength" xml:space="preserve">
    <value>Полето "Парола" не може да съдържа повече от 100 символа.</value>
  </data>
  <data name="ValidationPasswordRequired" xml:space="preserve">
    <value>Полето "Нова парола" е задължително.</value>
  </data>
  <data name="ValidationPasswordSymbols" xml:space="preserve">
    <value>Паролата трябва да съдържа минимум осем знака, като поне два от тях трябва да са: главни букви, малки букви, числа и специални символи. Пример: Pr0gr@m1.</value>
  </data>
  <data name="ValidationPhoneInvalid" xml:space="preserve">
    <value>Полето "Телефон" не е задължително, но може да съдържа само цифри, интервали, символа „+“ и не трябва да е по-голямо от 50 знака.</value>
  </data>
  <data name="ValidationPhoneLengthInvalid" xml:space="preserve">
    <value>Полето "Телефон" не може да съдържа повече от 50 символа.</value>
  </data>
  <data name="ValidationUserInvalid" xml:space="preserve">
    <value>Полето "Потребителско име", съдържащо Вашия имейл адрес е невалидно.</value>
  </data>
  <data name="ValidationUserRequired" xml:space="preserve">
    <value>Полето "Потребителско име", съдържащо Вашия имейл адрес е задължително.</value>
  </data>
</root>