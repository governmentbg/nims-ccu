<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Actions" xml:space="preserve">
    <value>Действия</value>
  </data>
  <data name="CheckSignature" xml:space="preserve">
    <value>Моля, преди подписване се уверете, че сте изтеглили от стъпка 1 и подготвили за подпис заредената в системата и приключила версия на Вашето проектно предложение.</value>
  </data>
  <data name="DownloadProjectProposal" xml:space="preserve">
    <value>1. Изтеглете проектното предложение</value>
  </data>
  <data name="DownloadThis" xml:space="preserve">
    <value>изтегляне на</value>
  </data>
  <data name="ElectronicSignature" xml:space="preserve">
    <value>2. Подпишете с електронен подпис</value>
  </data>
  <data name="ElectronicSignatureDiscription" xml:space="preserve">
    <value>За повече информация относно видовете електронни подписи, кои от тях се признават, как се използват и как се подписва с електронен подпис, можете да се обърнете към Вашия доставчик на удостоверителни услуги.</value>
  </data>
  <data name="File" xml:space="preserve">
    <value>Файл</value>
  </data>
  <data name="FileName" xml:space="preserve">
    <value>Име на файл: </value>
  </data>
  <data name="FileSignatureExtension" xml:space="preserve">
    <value>Подписването на файла с разширение &lt;strong&gt;„.suni“&lt;/strong&gt; трябва да е от вид (схема) &lt;strong&gt;„Detached signature“&lt;/strong&gt;. Изходният файл съдържа само електронния подпис, без оригиналния &lt;strong&gt;„.suni“&lt;/strong&gt; документ и е с разширение &lt;strong&gt;„.p7s“&lt;/strong&gt; или друг подобен.</value>
  </data>
  <data name="FileExtension" xml:space="preserve">
    <value>- Файлът с разширение &lt;b&gt;„.suni“&lt;/b&gt; не се прикача, той вече е зареден в системата.&lt;br /&gt;</value>
  </data>
  <data name="FollowTheInstructions" xml:space="preserve">
    <value>Следвайте стъпките по-долу.</value>
  </data>
  <data name="InvalideSignature" xml:space="preserve">
    <value>Невалиден подпис или подписа/ите (файлове с разширение „.p7s“) не се отнасят за зареденото в системата и приключило проектно предложение. Моля, след изтриване на заредения файл изпълнете отново стъпките по-горе.</value>
  </data>
  <data name="LoadSignature" xml:space="preserve">
    <value>3. Заредете подписите</value>
  </data>
  <data name="LoadSignatureType" xml:space="preserve">
    <value>- Заредете подписите - това са файлове с разширение &lt;b&gt;„.p7s“&lt;/b&gt; или друг подобен.</value>
  </data>
  <data name="Nbsp" xml:space="preserve">
    <value>&amp;nbsp;</value>
  </data>
  <data name="PersonsRepresentingCandidate" xml:space="preserve">
    <value>- Броят им е равен на броя лица, представляващи кандидата в процедурата.</value>
  </data>
  <data name="ProjectProposal" xml:space="preserve">
    <value>проектно предложение</value>
  </data>
  <data name="ProjectProposalInstructions" xml:space="preserve">
    <value>За да подадете проектното предложение, е необходимо да изтеглите и запишете на компютъра си приключения по-долу електронен формуляр (файла с разширение &lt;b&gt;„.suni“&lt;/b&gt;), след което да го подпишете с електронния подпис на кандидата.</value>
  </data>
  <data name="ProjectProposalQualifiedElectronicSignature" xml:space="preserve">
    <value>За да подадете Вашето проектно предложение електронно, е необходимо да разполагате с Квалифициран електронен подпис.</value>
  </data>
  <data name="ProjectProposalRegistrationNumber" xml:space="preserve">
    <value>След като подадете проектното предложение системата ще Ви издаде входящ регистрационен номер. Подаденото проектно предложение ще се съхрани в системата и може да бъде намерено в раздел &lt;b&gt;„Подадени“&lt;/b&gt; на менюто &lt;b&gt;„Проектни предложения“&lt;/b&gt;.</value>
  </data>
  <data name="SignatureHelp" xml:space="preserve">
    <value>Подпишете с помощта на електронния подпис на кандидата изтегления файл с разширение &lt;b&gt;„.suni“&lt;/b&gt;. В случаите когато кандидатът се представлява от повече от едно лице, файлът се подписва от всяко едно от тях.</value>
  </data>
  <data name="SubmissionProjectProposal" xml:space="preserve">
    <value>4. Подаване на проектното предложение</value>
  </data>
  <data name="SubmitOnline" xml:space="preserve">
    <value>Електронно подаване</value>
  </data>
  <data name="SubmitProjectProposal" xml:space="preserve">
    <value>подай проектното предложение</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>Внимание:</value>
  </data>
</root>