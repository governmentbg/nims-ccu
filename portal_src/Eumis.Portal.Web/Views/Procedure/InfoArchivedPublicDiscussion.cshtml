@using Eumis.Portal.Web.Helpers
@using PagedList.Mvc

@model Eumis.Documents.Contracts.ContractProcedureInfo

@Html.Breadcrumb(new List<BreadcrumbItem>()
{
    new BreadcrumbItem(Url.Action(MVC.Default.ActionNames.Index, MVC.Default.Name), Global.HomeButton),
    new BreadcrumbItem(Url.Action(MVC.Procedure.ActionNames.ArchivedPublicDiscussion, MVC.Procedure.Name), Global.BreadcrumbsArchivedPublicDiscussionProcedures)
}
, Model.displayName)

<!-- PAGE TITLE -->
<div class="container page-title">
    <h1>@Global.ArchivedPublicDiscussionProcedure</h1>
</div>

<!-- PAGE -->
<div class="container">
    <div class="page-content clearfix text-justify">
        <div class="col-xs-12">
            <div class="procedure-info">
                @{ var procedureName = Model.code + " - " + Model.displayName;}

                @if (Request.IsAuthenticated)
                {
                    @Html.ActionLink(procedureName, MVC.Project.ActionNames.New, MVC.Project.Name, new { id = Model.gid }, new { style = "color:black;font-weight:bold" })
                }
                else
                {
                    <strong>@procedureName</strong>
                }

                @Html.Raw(Model.displayDescription)

                @if (!string.IsNullOrEmpty(Model.endingDateNotes))
                {
                    <strong>@ProcedureInfo.EndingDateNoteTitle</strong>
                    @Html.Raw(Model.endingDateNotes)
                }
            </div>

            @if (Model.listingDate.HasValue)
            {
                <p><b>@ProcedureInfo.ListingDate</b> <span class="required-span">@Eumis.Common.Helpers.Helper.DateFormat(Model.listingDate)</span></p>
            }

            <p><b>@ProcedureInfo.FirstPublicationDate</b> <span class="required-span">@Eumis.Common.Helpers.Helper.DateFormat(Model.publicDiscussionFirstPublicationDate)</span></p>

            @if (!String.IsNullOrWhiteSpace(Model.internetAddress))
            {
                <p><b>@ProcedureInfo.InternetAddress:</b> <a href="@Model.internetAddress" target="_blank">@Model.internetAddress</a></p>
            }

            @if (Model.publicDiscussionGuidelines != null && Model.publicDiscussionGuidelines.Count != 0)
            {
                <h2>@Global.ApplicantsDocuments</h2>
                <ul class="file-list">
                    @foreach (var guideline in Model.publicDiscussionGuidelines)
                    {
                        var extenstion = guideline.filename.Split('.').Last();
                        if (extenstion == "docx") { extenstion = "doc"; }
                        if (string.IsNullOrEmpty(MimeTypeFileExtension.GetFileMimeTypeByExtenstion("." + extenstion)))
                        {
                            extenstion = string.Empty;
                        }
                        else
                        {
                            extenstion = "file-" + extenstion;
                        }

                  <li class="@(extenstion)">

                    <a target="_blank" href="@(Url.Action(MVC.Procedure.InfoPublicDiscussionDownload(Model.gid, guideline.blobKey)))">@guideline.name</a>  @ProcedureInfo.PublishDate @Eumis.Common.Helpers.Helper.DateTimeFormatWithoutSeconds(guideline.statusDate)

                    @if (!string.IsNullOrEmpty(guideline.description))
                    {
                      <img class="info-icon" src="@(Links.Content.img.icons.info_png)" data-placement="right" data-toggle="popover" data-content="@(guideline.description)" data-trigger="hover">
                    }

                  </li>
                    }

                    @if (Model.qaBlobKey.HasValue)
                    {
                        var extenstion = Model.qaFileName.Split('.').Last();
                        if (extenstion == "docx") { extenstion = "doc"; }
                        if (string.IsNullOrEmpty(MimeTypeFileExtension.GetFileMimeTypeByExtenstion("." + extenstion)))
                        {
                            extenstion = string.Empty;
                        }
                        else
                        {
                            extenstion = "file-" + extenstion;
                        }

                        <li class="@(extenstion)">

                            <a target="_blank" href="@(Url.Action(MVC.Procedure.InfoPublicDiscussionDownload(Model.gid, Model.qaBlobKey.Value)))">
                                @ProcedureInfo.QA
                            </a>

                            @if (Model.qaModifyDate.HasValue)
                            {
                                <span>(@ProcedureInfo.ModifyDate: @Eumis.Common.Helpers.Helper.DateTimeFormat(Model.qaModifyDate.Value))</span>
                            }

                        </li>
                    }
                </ul>
            }

                <div class="table-wrapper">
                    <h2>@Global.Comments</h2>
                    @if (Model.publicDiscussionComments != null && Model.publicDiscussionComments.Count != 0)
                    {
                        <table class="chart-info dynamic-rows" width="100%">
                            <thead>
                                <tr>
                                    <th style="width: 200px">@ProcedureInfo.CommentDate</th>
                                    <th style="width: 200px">@ProcedureInfo.CommentSender</th>
                                    <th>@ProcedureInfo.CommentMessage</th>
                                    <th>@ProcedureInfo.CommentStandpoint</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var comment in Model.publicDiscussionComments)
                                {
                                    <tr>
                                        <td>
                                            @Eumis.Common.Helpers.Helper.DateTimeFormat(comment.createDate)
                                        </td>
                                        <td>
                                            @comment.senderEmail
                                        </td>
                                        <td>
                                            @comment.comment
                                        </td>
                                        <td>
                                            @comment.standpoint
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
                    else if (Model.HasAnyPublicDiscussionComments)
                    {
                        <div class="info-block">
                            <p>@ProcedureInfo.CommentsUnderProcess</p>
                        </div>
                    }
                    else
                    {
                        <div class="info-block">
                            <p>@ProcedureInfo.CommentsNotFound</p>
                        </div>
                    }
                </div>
            @*@Html.PagedListPager(Model,
                page => Url.Action((String)ViewContext.RouteData.Values["action"],
                (String)ViewContext.RouteData.Values["controller"],
                new
                {
                    page = page
                }),
                Constants.PagedListRenderOptions)*@
        </div>
    </div>
</div>
