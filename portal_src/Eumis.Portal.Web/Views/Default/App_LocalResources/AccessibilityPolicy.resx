<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Header1" xml:space="preserve">
    <value>Декларация за достъпност</value>
  </data>
  <data name="Header2" xml:space="preserve">
    <value>Инициатива за уеб достъпност</value>
  </data>
  <data name="Header3" xml:space="preserve">
    <value>W3C Стандарти</value>
  </data>
  <data name="Header4" xml:space="preserve">
    <value>Изключения</value>
  </data>
  <data name="Paragraph11" xml:space="preserve">
    <value>Дирекция „Централно координационно звено“ към Администрацията на Министерски съвет се ангажира да осигури достъпност на СУНИ за максимално широка група потребители независимо от използваните технологии и умения.</value>
  </data>
  <data name="Paragraph12" xml:space="preserve">
    <value>Ние активно работим за подобряване на достъпността и използваемостта на ИСУН и в тази си дейност се придържаме към наличните стандарти и добри практики.</value>
  </data>
  <data name="Paragraph13" xml:space="preserve">
    <value>За да отговорим на поставените изисквания и критерии за ниво на достъпност, поставени от Европейската комисия относно интернет страниците на публичната администрация, и същевременно да посрещнем изискванията на текущите интернет технологии, ще се придържаме към стандартите на WCAG 2.0 и ниво на съответствие "Двойно-A".</value>
  </data>
  <data name="Paragraph21" xml:space="preserve">
    <value>СУНИ ще се опитва да покрие ниво на достъпност двойно-А според последните стандарти на World Wide Web Consortium - Web Content Accessibility Guidelines 2.0 (WCAG 2.0), като използва най-добрите практики и техники.</value>
  </data>
  <data name="Paragraph22" xml:space="preserve">
    <value>WCAG 2.0 обяснява как съдържанието в интернет страниците да бъде направено по-достъпно за хора с увреждания. Изпълнението на насоките ще помогне на повече хора да се чувстват удобно и да се възползват от предимствата на интернет.</value>
  </data>
  <data name="Paragraph31" xml:space="preserve">
    <value>СУНИ е изградена с код, съвместим с W3C стандартите за XHTML и CSS. Кодът се възпроизвежда коректно в наличните към момента интернет браузъри, а използването на W3C стандартите гарантира съвместимост и с бъдещите нови или подобрени браузъри.</value>
  </data>
  <data name="Paragraph41" xml:space="preserve">
    <value>Макар да се стремим да осигурим съвместимост с наличните стандарти за достъпност, това не винаги е възможно във всеки един аспект. Браузърите и техниките за разработка и достъп до интернет се развиват много бързо и понякога някои от стандартните изисквания за достъпност стават излишни. В тази светлина ние непрекъснато развиваме технологично СУНИ с оглед постигането на високи стандарти на достъпност и използваемост на съдържанието в него.</value>
  </data>
</root>