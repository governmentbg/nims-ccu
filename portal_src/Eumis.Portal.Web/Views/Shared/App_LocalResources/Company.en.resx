<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Actions" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="CompanyContactPerson" xml:space="preserve">
    <value>Contact person</value>
  </data>
  <data name="CompanyContactPersonEmail" xml:space="preserve">
    <value>E-mail of contact person</value>
  </data>
  <data name="CompanyContactPersonPhone" xml:space="preserve">
    <value>Tel. of contact person</value>
  </data>
  <data name="CompanyLegalType" xml:space="preserve">
    <value>Organization kind</value>
  </data>
  <data name="CompanyRepresentativePerson" xml:space="preserve">
    <value>Name of person representing the organization</value>
  </data>
  <data name="CompanySizeType" xml:space="preserve">
    <value>Category/status of development</value>
  </data>
  <data name="CompanyType" xml:space="preserve">
    <value>Type of organization</value>
  </data>
  <data name="Correspondence" xml:space="preserve">
    <value>Address for correspondence</value>
  </data>
  <data name="DataFilled" xml:space="preserve">
    <value>Data completed!</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Е-mail</value>
  </data>
  <data name="EmailTooltip" xml:space="preserve">
    <value>E-mail address is automatically filled in by the candidate profile.</value>
  </data>
  <data name="Fax" xml:space="preserve">
    <value>Fax number</value>
  </data>
  <data name="FinancialContribution" xml:space="preserve">
    <value>Financial contribution</value>
  </data>
  <data name="IsCountryLegal" xml:space="preserve">
    <value>Public legal</value>
  </data>
  <data name="IsPrivateLegal" xml:space="preserve">
    <value>Private legal</value>
  </data>
  <data name="KidCodeOrganization" xml:space="preserve">
    <value>Organization code KID 2008</value>
  </data>
  <data name="KidCodeProject" xml:space="preserve">
    <value>Project code KID 2008</value>
  </data>
  <data name="Management" xml:space="preserve">
    <value>Management address</value>
  </data>
  <data name="MaxPartnersHint" xml:space="preserve">
    <value>The system allows entering up to {0} partners.</value>
  </data>
  <data name="MaxPartnersReached" xml:space="preserve">
    <value>You reached the maximum allowed number of {0} partners!</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Full name</value>
  </data>
  <data name="NameEN" xml:space="preserve">
    <value>Full name in English</value>
  </data>
  <data name="NameENTooltip" xml:space="preserve">
    <value>The field is completed by all candidates, with the exception of individuals, the text must be entirely in English.</value>
  </data>
  <data name="NoResult" xml:space="preserve">
    <value>No results found!</value>
  </data>
  <data name="Phone1" xml:space="preserve">
    <value>Phone number 1</value>
  </data>
  <data name="Phone2" xml:space="preserve">
    <value>Phone number 2</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search Bulstat</value>
  </data>
  <data name="Seat" xml:space="preserve">
    <value>Residence</value>
  </data>
  <data name="Uin" xml:space="preserve">
    <value>Number</value>
  </data>
  <data name="UinType" xml:space="preserve">
    <value>UIC/BULSTAT</value>
  </data>
  <data name="ValidationError" xml:space="preserve">
    <value>Please fill correctly the search fields.</value>
  </data>
</root>