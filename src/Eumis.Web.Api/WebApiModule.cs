using Autofac;
using Eumis.Web.Api.ActionLogs.Controllers;
using Eumis.Web.Api.ActuallyPaidAmounts.Controllers;
using Eumis.Web.Api.Allowances.Controllers;
using Eumis.Web.Api.AnnualAccountReports.Controllers;
using Eumis.Web.Api.BasicInterestRates.Controllers;
using Eumis.Web.Api.BfpCalculator.Controllers;
using Eumis.Web.Api.CertAuthorityChecks.Controllers;
using Eumis.Web.Api.CertReports.Controllers;
using Eumis.Web.Api.CheckBlankTopics.Controllers;
using Eumis.Web.Api.Companies.Controllers;
using Eumis.Web.Api.CompensationDocuments.Controllers;
using Eumis.Web.Api.ContractAccessCodes.Controllers;
using Eumis.Web.Api.ContractCommunications.Controllers;
using Eumis.Web.Api.ContractRegistrations.Controllers;
using Eumis.Web.Api.ContractReportAdvanceNVPaymentAmounts.Controllers;
using Eumis.Web.Api.ContractReportAdvancePaymentAmounts.Controllers;
using Eumis.Web.Api.ContractReportCertAuthorityCorrections.Controllers;
using Eumis.Web.Api.ContractReportCertAuthorityFinancialCorrections.Controllers;
using Eumis.Web.Api.ContractReportCertCorrections.Controllers;
using Eumis.Web.Api.ContractReportCorrections.Controllers;
using Eumis.Web.Api.ContractReportFinancialCertCorrections.Controllers;
using Eumis.Web.Api.ContractReportFinancialCorrections.Controllers;
using Eumis.Web.Api.ContractReportFinancialCSDs.Controllers;
using Eumis.Web.Api.ContractReportFinancialRevalidations.Controllers;
using Eumis.Web.Api.ContractReportIndicators.Controllers;
using Eumis.Web.Api.ContractReportRevalidationCertAuthorityCorrections.Controllers;
using Eumis.Web.Api.ContractReportRevalidationCertAuthorityFinancialCorrections;
using Eumis.Web.Api.ContractReportRevalidationCertAuthorityFinancialCorrections.Controllers;
using Eumis.Web.Api.ContractReportRevalidations.Controllers;
using Eumis.Web.Api.ContractReports.Controllers;
using Eumis.Web.Api.ContractReportTechnicalCorrections.Controllers;
using Eumis.Web.Api.Contracts.Controllers;
using Eumis.Web.Api.Core;
using Eumis.Web.Api.Debts.Controllers;
using Eumis.Web.Api.Declarations.Controllers;
using Eumis.Web.Api.EuReimbursedAmounts.Controllers;
using Eumis.Web.Api.EvalSessions.Controllers;
using Eumis.Web.Api.ExpenseTypes.Controllers;
using Eumis.Web.Api.FinancialCorrections.Controllers;
using Eumis.Web.Api.FlatFinancialCorrections.Controllers;
using Eumis.Web.Api.Guidances.Controllers;
using Eumis.Web.Api.HistoricContracts.Controllers;
using Eumis.Web.Api.Indicators.Controllers;
using Eumis.Web.Api.InterestSchemes.Controllers;
using Eumis.Web.Api.Interfaces.Controllers;
using Eumis.Web.Api.Irregularities.Controllers;
using Eumis.Web.Api.Measures.Controllers;
using Eumis.Web.Api.Messages.Controllers;
using Eumis.Web.Api.Monitoring.Controllers;
using Eumis.Web.Api.Monitorstat.Controllers;
using Eumis.Web.Api.News.Controllers;
using Eumis.Web.Api.NonAggregates.Controllers;
using Eumis.Web.Api.NonAggregates.Controllers.Noms;
using Eumis.Web.Api.NonAggregates.Controllers.Suggestions;
using Eumis.Web.Api.Notifications;
using Eumis.Web.Api.Notifications.Controllers;
using Eumis.Web.Api.OperationalMap.Directions.Controllers;
using Eumis.Web.Api.OperationalMap.MapNodes.Controllers;
using Eumis.Web.Api.OperationalMap.ProgrammePriorities.Controllers;
using Eumis.Web.Api.OperationalMap.Programmes.Controllers;
using Eumis.Web.Api.OperationalMap.SubDirections.Controllers;
using Eumis.Web.Api.PermissionTemplates.Controllers;
using Eumis.Web.Api.Procedures.Controllers;
using Eumis.Web.Api.Procurements.Controllers;
using Eumis.Web.Api.Prognoses.Controllers;
using Eumis.Web.Api.ProjectManagingAuthorityCommunications.Controllers;
using Eumis.Web.Api.Projects.Controllers;
using Eumis.Web.Api.Registrations.Controllers;
using Eumis.Web.Api.Regix;
using Eumis.Web.Api.ReimbursedAmounts.Controllers;
using Eumis.Web.Api.RequestPackages.Controllers;
using Eumis.Web.Api.SapInterfaces.Controllers;
using Eumis.Web.Api.SystemFunctions.Controllers;
using Eumis.Web.Api.UserOrganizations.Controllers;
using Eumis.Web.Api.Users.Controllers;
using Eumis.Web.Api.UserTypes.Controllers;

namespace Eumis.Web.Api
{
    public class WebApiModule : Module
    {
        protected override void Load(ContainerBuilder moduleBuilder)
        {
            moduleBuilder.RegisterType<SystemFunctionsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<UsersController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<UserDeclarationsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<UserNotificationSettingsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<UsersExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<UserPermissionsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<UserRequestsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<UserProfileController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<PermissionTemplatesController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProgrammesController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProgrammeBudgetsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProgrammeDocumentsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProgrammeBlobsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProgrammeProcedureManualsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProgrammeProcedureManualBlobsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProgrammeProcedureManualStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProgrammeApplicationDocumentsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProgrammeApplicationDocumentsExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProgrammeAppFormDeclarationsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProgrammeAppFormDeclarationItemsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<IndicatorsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<IndicatorItemTypesController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<IndicatorItemTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<MeasuresController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CheckBlankTopicsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProgrammePrioritiesController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProgrammePriorityBudgetsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProgrammePriorityDocumentsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProgrammePriorityBlobsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProgrammePriorityTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProgrammeDirectionsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProgrammePriorityDirectionsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<DirectionsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<SubDirectionsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<DirectionNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<SubDirectionNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProjectVersionFileNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CompaniesController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CompaniesExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<RegistrationsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<RegistrationsExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProjectsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProjectsExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProjectCommunicationsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProjectCommunicationAnswersController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProjectManagingAuthorityCommunicationsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProjectManagingAuthorityCommunicationAnswersController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProjectManagingAuthorityCommunicationsExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProjectMassManagingAuthorityCommunicationsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProjectMassManagingAuthorityCommunicationBlobsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProjectMassManagingAuthorityCommunicationDocumentsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProjectMassManagingAuthorityCommunicationRecipientsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProjectProjectManagingAuthorityCommunicationsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProjectProjectManagingAuthorityCommunicationAnswersController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProjectMonitorstatRequestBlobsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProjectMonitorstatRequestsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProjectMonitorstatResponseBlobsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProjectVersionsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<UserTypesController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<RequestPackagesController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<RequestPackageUsersController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<RequestPackageUserRegDataRequestsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<RequestPackageUserPermissionRequestsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<AuthorizerController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<UserOrganizationsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<EvalSessionsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<EvalSessionUsersController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<EvalSessionProjectsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<EvalSessionProjectsExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<EvalSessionSheetsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<EvalSessionSheetsExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<EvalSessionStandpointsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<EvalSessionDistributionsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<EvalSessionReportsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<EvalSessionReportsExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<EvalSessionAutomaticProjectMonitorstatRequestsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<MyEvalSessionsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<MyEvalSessionSheetsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<MyEvalSessionStandpointsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<EvalSessionEvaluationsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<EvalSessionResultsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<EvalSessionResultUserNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ExpenseTypesController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ExpenseSubTypesController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<AllowancesController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<AllowanceRatesController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<BasicInterestRatesController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<InterestRatesController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<InterestSchemesController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<DeclarationBlobsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<DeclarationFeedBlobsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<DeclarationsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<DeclarationStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<RequestPackageBlobsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<EvalSessionDocumentsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<EvalSessionBlobsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<EvalSessionAutomaticProjectEvaluationsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ActionLogsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<EvalSessionProjectStandingsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<EvalSessionStandingsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<EvalSessionCommunicationsExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<EvalSessionResultTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<EvalSessionResultStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProjectFilesController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProjectCommunicationFilesController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<NewsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<NewsBlobsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<NewsFeedBlobsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<MessagesController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<MessagesBlobsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<GuidancesController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<GuidanceBlobsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<GuidanceNavBlobsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<HistoricContractsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractsExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractBlobsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractOffersController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractVersionsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractProcurementsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractRegistrationsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractRegistrationsExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractContractRegistrationBlobsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractContractAccessCodesController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractSpendingPlansController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractUserNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractUsersController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractGrantDocumentsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractProcurementDocumentsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractContractCommunicationsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractContractCommunicationsExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractProcurementPlanNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractServiceController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractServiceProcedureNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<FlatFinancialCorrectionsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<FlatFinancialCorrectionBlobsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<FlatFinancialCorrectionProgrammeItemsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<FlatFinancialCorrectionProgrammePriorityItemsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<FlatFinancialCorrectionProcedureItemsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<FlatFinancialCorrectionContractItemsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<FlatFinancialCorrectionContractContractItemsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<FinancialCorrectionsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<FinancialCorrectionVersionsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<FinancialCorrectionVersionBlobsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractDebtsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractDebtsExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractDebtVersionsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractDebtInterestsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CorrectionDebtsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CorrectionDebtVersionsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<RegixController>().InstancePerLifetimeScope();

            // AnnualAccountReportsControllers
            moduleBuilder.RegisterType<AnnualAccountReportsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<AnnualAccountReportPeriodNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<AnnualAccountReportStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<AnnualAccountReportCertificationDocumentsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<AnnualAccountReportAuditDocumentsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<AnnualAccountReportBlobsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<AnnualAccountReportAttachedCertReportsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<AnnualAccountReportFinancialCorrectionsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<AnnualAccountReportFinancialCorrectionsExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<AnnualAccountReportCorrectionsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<AnnualAccountReportCorrectionsExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<AnnualAccountReportCertifiedFinancialCorrectionsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<AnnualAccountReportCertifiedCorrectionsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<AnnualAccountReportCertifiedFinancialCorrectionsExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<AnnualAccountReportCertifiedCorrectionsExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<AnnualAccountReportAppendices5Controller>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<AnnualAccountReportAppendices8Controller>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<AnnualAccountReportCertifiedRevalidationFinancialCorrectionsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<AnnualAccountReportCertifiedRevalidationCorrectionsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<AnnualAccountReportCertifiedRevalidationCorrectionsExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<AnnualAccountReportCertifiedRevalidationFinancialCorrectionsExcelController>().InstancePerLifetimeScope();

            // CertReportsControllers
            moduleBuilder.RegisterType<CertReportsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CertReportDocumentsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CertReportCertificationDocumentsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CertReportBlobsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CertReportPaymentsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CertReportPaymentCSDsExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CertReportAdvancePaymentsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CertReportFinancialCorrectionsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CertReportFinancialRevalidationsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CertReportFinancialCertCorrectionsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CertReportCorrectionsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CertReportRevalidationsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CertReportCertCorrectionsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CertReportAttachedCertReportsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CertReportSummaryController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CertReportSummaryExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CertReportContractDebtsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CertReportDebtReimbursedAmountsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CertReportNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CertReportPaymentsExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CertReportAdvancePaymentsExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CertReportFinancialCorrectionsExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CertReportCorrectionsExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CertReportFinancialRevalidationsExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CertReportRevalidationsExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CertReportFinancialCertCorrectionsExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CertReportCertCorrectionsExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CertReportSnapshotsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CertReportsExcelController>().InstancePerLifetimeScope();

            // ContractReportsControllers
            moduleBuilder.RegisterType<ContractReportsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportFinancialsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportPaymentsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportTechnicalsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportFinancialChecksController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportMicrosController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportMicroNewVersionController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportMicroStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportMicroBlobsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportPaymentChecksController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportTechnicalChecksController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportMicroChecksController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportMicroCheckBlobsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportMicroCheckStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportMicroCheckApprovalsNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportFinancialCorrectionsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportCheckBlobsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportFinancialCSDBudgetItemsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportFinancialCSDBudgetItemsExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportFinancialCSDBlobsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportFinancialCorrectionBlobsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportFinancialCorrectionCSDsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportIndicatorsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportAdvancePaymentAmountsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportsExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportIndicatorsExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportAttachedFinancialCorrectionsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportPaymentRequestsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportAdvanceNVPaymentAmountsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportChecksExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportTechnicalCorrectionBlobsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportTechnicalCorrectionIndicatorsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportTechnicalCorrectionIndicatorStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportTechnicalCorrectionProcedureNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportTechnicalCorrectionsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportTechnicalCorrectionStatusNomsController>().InstancePerLifetimeScope();

            // IrregularitiesControllers
            moduleBuilder.RegisterType<IrregularitySignalsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<IrregularitySignalInvolvedPersonController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<IrregularitySignalDocumentsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<IrregularitySignalBlobsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<IrregularitiesController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<IrregularitiesExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<IrregularityFinancialCorrectionsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<IrregularityDocumentsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<IrregularityBlobsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<IrregularityVersionsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<IrregularityVersionInvolvedPersonsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<IrregularityVersionDocumentsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<IrregularityVersionBlobsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<IrregularitySignalContractNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<IrregularitySignalStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<IrregularityStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<IrregularityVersionStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<IrregularitySignalProgrammeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<IrregularityInvolvedPersonLegalTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<IrregularitySignalNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<IrregularityRapporteurNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<IrregularityImpairedRegulationActNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<IrregularityCategoryNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<IrregularityTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<IrregularityProcedureStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<IrregularityFinancialStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<IrregularityClassificationNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<IrregularitySanctionProcedureTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<IrregularitySanctionProcedureKindNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<IrregularitySanctionProcedureStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<IrregularitySanctionCategoryNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<IrregularitySanctionTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<IrregularityReasonNotReportingToOlafNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<IrregularityCaseStateNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<IrregularityProgrammeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<IrregularityCheckTimeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<IrregularitySignalsExcelController>().InstancePerLifetimeScope();

            // ActuallyPaidAmountsControllers
            moduleBuilder.RegisterType<ActuallyPaidAmountsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ActuallyPaidAmountContractNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ActuallyPaidAmountStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ActuallyPaidAmountPaymentReasonNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ActuallyPaidAmountProgrammeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ActuallyPaidAmountsExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ActuallyPaidAmountDocumentsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ActuallyPaidAmountBlobsController>().InstancePerLifetimeScope();

            // CompensationDocumentsControllers
            moduleBuilder.RegisterType<CompensationDocumentsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CompensationDocumentDocsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CompensationDocumentBlobsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CompensationDocumentStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CompensationDocumentTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CompensationDocumentSignNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CompensationDocumentProgrammeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CompensationDocumentContractNomsController>().InstancePerLifetimeScope();

            // ReimbursedAmountsControllers
            moduleBuilder.RegisterType<DebtReimbursedAmountsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<DebtReimbursedAmountsExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReimbursedAmountsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReimbursedAmountsExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ReimbursedAmountContractNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ReimbursedAmountStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ReimbursementTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ReimbursedAmountContractDebtNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ReimbursementNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ReimbursedAmountProgrammeNomsController>().InstancePerLifetimeScope();

            // CertAuthorityChecksControllers
            moduleBuilder.RegisterType<CertAuthorityChecksController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CertAuthorityChecksExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CertAuthorityCheckAscertainmentsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CertAuthorityCheckItemsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CertAuthorityCheckProjectsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CertAuthorityCheckAscertainmentStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CertAuthorityCheckSubjectTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CertAuthorityCheckAscertainmentExecutionStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CertAuthorityCheckAscertainmentTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CertAuthorityCheckStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CertAuthorityCheckTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CertAuthorityCheckLevelNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CertAuthorityCheckKindNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CertAuthorityCheckBlobsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CertAuthorityCheckDocumentsController>().InstancePerLifetimeScope();

            // EuReimbursedAmountsControllers
            moduleBuilder.RegisterType<EuReimbursedAmountsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<EuReimbursedAmountCertReportsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<EuReimbursedAmountProgrammeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<EuReimbursedAmountPaymentTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<EuReimbursedAmountStatusNomsController>().InstancePerLifetimeScope();

            // ContractAccesCodes
            moduleBuilder.RegisterType<ContractAccessCodesController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractAccessCodesExcelController>().InstancePerLifetimeScope();

            // ContractCommunications
            moduleBuilder.RegisterType<AdminAuthorityCommunicationsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CertAuthorityCommunicationsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<AuditAuthorityCommunicationsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractCommunicationSourceNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractCommunicationStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<AdminAuthorityCommunicationsExcelController>().InstancePerLifetimeScope();

            // ContractReportCorrectionControllers
            moduleBuilder.RegisterType<ContractReportCorrectionBlobsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportCorrectionContractNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportCorrectionDocsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportCorrectionProcedureNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportCorrectionProgrammeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportCorrectionsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportCorrectionStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportCorrectionTypeNomsController>().InstancePerLifetimeScope();

            // ContractReportRevalidationControllers
            moduleBuilder.RegisterType<ContractReportRevalidationBlobsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportRevalidationContractNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportRevalidationDocsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportRevalidationProcedureNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportRevalidationProgrammeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportRevalidationsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportRevalidationStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportRevalidationTypeNomsController>().InstancePerLifetimeScope();

            // ContractReportFinancialRevalidationControllers
            moduleBuilder.RegisterType<ContractReportFinancialRevalidationBlobsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportFinancialRevalidationCSDCertStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportFinancialRevalidationCSDsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportFinancialRevalidationCSDStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportFinancialRevalidationProcedureNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportFinancialRevalidationsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportFinancialRevalidationStatusNomsController>().InstancePerLifetimeScope();

            // ContractReportCertCorrectionControllers
            moduleBuilder.RegisterType<ContractReportCertCorrectionBlobsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportCertCorrectionContractNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportCertCorrectionDocsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportCertCorrectionProcedureNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportCertCorrectionProgrammeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportCertCorrectionsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportCertCorrectionStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportCertCorrectionTypeNomsController>().InstancePerLifetimeScope();

            // ContractReportFinancialCertCorrectionControllers
            moduleBuilder.RegisterType<ContractReportFinancialCertCorrectionBlobsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportFinancialCertCorrectionCSDsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportFinancialCertCorrectionCSDStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportFinancialCertCorrectionProcedureNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportFinancialCertCorrectionsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportFinancialCertCorrectionStatusNomsController>().InstancePerLifetimeScope();

            // ContractReportCertAuthorityCorrectionControllers
            moduleBuilder.RegisterType<ContractReportCertAuthorityCorrectionBlobsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportCertAuthorityCorrectionContractNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportCertAuthorityCorrectionDocsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportCertAuthorityCorrectionProcedureNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportCertAuthorityCorrectionProgrammeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportCertAuthorityCorrectionsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportCertAuthorityCorrectionStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportCertAuthorityCorrectionTypeNomsController>().InstancePerLifetimeScope();

            // ContractReportCertAuthorityFinancialCorrectionControllers
            moduleBuilder.RegisterType<ContractReportCertAuthorityFinancialCorrectionBlobsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportCertAuthorityFinancialCorrectionCSDsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportCertAuthorityFinancialCorrectionCSDStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportCertAuthorityFinancialCorrectionProcedureNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportCertAuthorityFinancialCorrectionsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportCertAuthorityFinancialCorrectionStatusNomsController>().InstancePerLifetimeScope();

            // ContractReportRevalidationCertAuthorityCorrectionControllers
            moduleBuilder.RegisterType<ContractReportRevalidationCertAuthorityCorrectionBlobsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportRevalidationCertAuthorityCorrectionContractNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportRevalidationCertAuthorityCorrectionDocsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportRevalidationCertAuthorityCorrectionProcedureNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportRevalidationCertAuthorityCorrectionProgrammeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportRevalidationCertAuthorityCorrectionsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportRevalidationCertAuthorityCorrectionStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportRevalidationCertAuthorityCorrectionTypeNomsController>().InstancePerLifetimeScope();

            // ContractReportRevalidationCertAuthorityFinancialCorrectionControllers
            moduleBuilder.RegisterType<ContractReportRevalidationCertAuthorityFinancialCorrectionBlobsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportRevalidationCertAuthorityFinancialCorrectionCSDsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportRevalidationCertAuthorityFinancialCorrectionCSDStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportRevalidationCertAuthorityFinancialCorrectionProcedureNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportRevalidationCertAuthorityFinancialCorrectionsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportRevalidationCertAuthorityFinancialCorrectionStatusNomsController>().InstancePerLifetimeScope();

            // MonitoringControllers
            moduleBuilder.RegisterType<MonitoringAdvancePaymentsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<MonitoringDoubleFundingReportsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<MonitoringProjectsReportsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<MonitoringIndicatorsReportsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<MonitoringContractReportsReportsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<MonitoringFinancialExecutionReportsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<MonitoringBudgetLevelsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<MonitoringFinancialCorrectionsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<MonitoringConcludedContractsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<MonitoringBeneficiaryProjectsContractsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<MonitoringEvaluationsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<MonitoringContractsReportsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<MonitoringContractReportPaymentsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<MonitoringIrregularitiesController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<MonitoringPinController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<MonitoringProgrammeSummaryController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<MonitoringArachneController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<MonitoringMicrodataEsfController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<MonitoringExpenseTypesController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<MonitoringSebraController>().InstancePerLifetimeScope();

            // SapInterfacesControllers
            moduleBuilder.RegisterType<SapFilesController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<SapFileStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<SapFileTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<SapFileBlobsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<SapCertReportsController>().InstancePerLifetimeScope();

            // InterfacesControllers
            moduleBuilder.RegisterType<InformationSystemNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<InterfacesController>().InstancePerLifetimeScope();

            // ProceduresControllers
            moduleBuilder.RegisterType<ProceduresController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProcedureIndicatorsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProcedureSharesController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProcedureTimeLimitsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProcedureShareExpenseBudgetsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProcedureBlobsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProcedureSpecFieldsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProcedureDocumentsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProcedureDirectionsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProcedureAppGuidelinesController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProcedureAppDocsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProceduresExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProcedureTechnicalReportDocumentsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProcedureFinancialReportDocumentsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProcedureAdvancePaymentDocumentsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProcedureIntermediatePaymentDocumentsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProcedureFinalPaymentDocumentsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProcedureProcurementDocumentsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProcedureLocationsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProcedureKindNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProcedureYearNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProcedureEvalTablesController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProcedureQuestionsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProcedureApplicationSectionsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProcedureMassCommunicationController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProcedureMassCommunicationProcedureNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProcedureMassCommunicationProgrammeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProcedureMassCommunicationDocumentsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProcedureMassCommunicationBlobsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProcedureMassCommunicationRecipientsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProcedureMonitorstatDocumentsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProcedureMonitorstatEconomicActivitiesController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProcedureMonitorstatEconomicActivityTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProcedureMonitorstatRequestsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProcedureMonitorstatRequestStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProcedureAppFormDeclarationsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProceduresByProgrammeNomsController>().InstancePerLifetimeScope();

            // PrognosesControllers
            moduleBuilder.RegisterType<ProgrammePrognosesController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProgrammePriorityPrognosesController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProcedurePrognosesController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<PrognosisProgrammeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<PrognosisProcedureNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<PrognosisStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<PrognosisReportsController>().InstancePerLifetimeScope();

            // FIReimbursedAmountsControllers
            moduleBuilder.RegisterType<FIReimbursedAmountsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<FIReimbursedAmountStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<FIReimbursementTypeNomsController>().InstancePerLifetimeScope();

            // NotificationControllers
            moduleBuilder.RegisterType<NotificationSettingsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<NotificationSettingProgrammesNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<NotificationScopesNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<NotificationEventsNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<NotificationSettingAttachedContractsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<NotificationSettingAttachedProceduresController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<NotificationSettingAttachedProgrammePrioritiesController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<NotificationSettingAttachedProgrammesController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<UserNotificationsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<NotificationSettingUsersNomsController>().InstancePerLifetimeScope();

            // Monitorstat controllers
            moduleBuilder.RegisterType<MonitorstatSurveysController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<MonitorstatYearNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<MonitorstatSurveysNomsController>().InstancePerLifetimeScope();

            // Nom Controllers
            moduleBuilder.RegisterType<InstitutionNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<IndicatorNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<RegionCategoryNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<InstitutionNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<InstitutionTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<BudgetPeriodNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<MeasureNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<RegulationInvestmentPriorityNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProgrammeAvailableNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProgrammeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProgrammePriorityNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProgrammePriorityCompanyNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CountryNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<Nuts1NomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<Nuts2NomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<DistrictNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<MunicipalityNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<SettlementNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProtectedZoneNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<NutsLevelNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProcedureStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ExpenseTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<UinTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CompanyLegalTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CompanySizeTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CompanyTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<KidCodeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<PermissionTemplateNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProjectTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProjectRegistrationStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProjectRecieveTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProcedureNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CompanyNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<UserTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<RequestPackageTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<RequestPackageStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<RequestStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProcedureEvalTableTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProcedureEvalTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProcedureBudgetLevel2AidModeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProcedureSpecFieldMaxLengthNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ApplicationFormTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<UserOrganizationNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProjectProcedureNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractProcedureNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractProgrammeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<MapNodeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<MapNodeStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<AllowedRegistrationTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<BasicInterestRateNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<AllowanceNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<PhysicalExecutionTableNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<FinancialExecutionTableNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<EvalSessionTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<EvalSessionStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<EvalSessionUserTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<EvalSessionSheetStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<EvalSessionDistributionTypesNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<EvalSessionAssessorNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<EvalSessionAssistantAssessorNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<EvalSessionProjectNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<EvalSessionUserNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<MessageRecipientsNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<EvalSessionDistributionStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<EvalSessionProcedureNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<EvalSessionDistributionNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<EvalSessionEvaluationCalculationTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<EvalSessionStandpointStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<EvalSessionProjectStandingTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ActiveStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProjectCommunicationStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ActionLogGroupNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ActionLogPortalGroupNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProjectVersionXmlStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<EvalSessionProjectStandingStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<EvalSessionStandingStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<EvalSessionReportTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProcedureEvalTableStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractRegistrationTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractExecutionStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractVersionTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractVersionStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractProcurementStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractContractRegistrationsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<SourceNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractRegistrationNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProgrammeCompanyNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<GuidanceModuleNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<NewsStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<NewsTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractSpendingPlanStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportStatusWithoutDraftNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportFinancialStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportTechnicalStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportPaymentStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportPaymentTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportTechnicalTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportProcedureNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportPaymentCheckStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportFinancialCheckStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportTechnicalCheckStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportFinancialCorrectionProcedureNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CostSupportingDocumentTypesNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportFinancialCheckApprovalsNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportTechnicalCheckApprovalsNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportPaymentCheckApprovalsNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<YesNoNonApplicableNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CostSupportingDocumentTypesNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportFinancialCSDBudgetItemStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<YearNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<QuarterNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<MonthNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportFinancialCorrectionStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportFinancialCorrectionCSDStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<SignNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractContractNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<FlatFinancialCorrectionLevelNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<FlatFinancialCorrectionStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<FlatFinancialCorrectionTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<FlatFinancialCorrectionContractNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractBudgetLevel3AmountNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<FinancialCorrectionVersionStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<OtherViolationNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<FinancialCorrectionImposingReasonNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<AmendmentReasonNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CorrectionBearerNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<MonFinCtrlFinancialProgrammesNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<AnnualAccountReportProgrammesNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractDebtExecutionStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractDebtVersionStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractDebtCertStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CorrectionDebtVersionStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<IrregularityNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<FinancialCorrectionNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<FlatFinancialCorrectionNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportPaymentNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CertReportStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CertReportTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportPaymentCheckCertStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportFinancialCorrectionCSDCertStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportFinancialCSDBudgetItemCertStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CorrectionTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<InterestSchemeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportIndicatorStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportIndicatorApprovalNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<YearlyCertReportSummaryTablesNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<IntermediateFinalCertReportSummaryTablesNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<FinancialCorrectionViolationFoundByNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CostSupportingDocumentCompanyTypesNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportAdvancePaymentAmountStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportAdvancePaymentAmountApprovalNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CorrectionTypeExtendedNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ErrandAreaNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ErrandLegalActNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ErrandTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<BfpCalculatorController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProjectDossierDocumentTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProjectDossierContractNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProjectDossierBlobsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProjectDossierExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProjectDossierContractExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProjectDossierPaidAmountsExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProjectDossierDebtsExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProjectDossierReimbursedAmountsExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProjectDossierFinancialCorrectionsExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProjectDossierApprovedAmountsExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProjectDossierCertifiedAmountsExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProjectDossierPhysicalExecutionExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProjectDossierIrregularitiesAndSignalsExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProjectDossierAuditsExcelController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<PersonalUinTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<EvalSessionProjectStandingRejectionReasonNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportAdvanceNVPaymentAmountStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ContractReportAdvanceNVPaymentAmountApprovalNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<CurrencyNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<BudgetLevelNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<GroupingLevelNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ActuallyPaidAmountCreationTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<DebtReimbursedAmountCreationTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProgrammeApplicationDocumentsNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<UserNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProjectManagingAuthorityCommunicationSourceNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProjectManagingAuthorityCommunicationSubjectNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProjectCommunicationAnswerStatusNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProjectCommunicationAnswerSourceNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProcedureMonitorstatRequestNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<FieldTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProgrammeAppFormDeclarationNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<SebraPaymentTypeNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProcedureApplicationDocNomsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<NSIProgrammeDeclarationNomsController>().InstancePerLifetimeScope();

            // Suggestion Controllers
            moduleBuilder.RegisterType<ExpenseSubTypeSuggestionsController>().InstancePerLifetimeScope();

            // Procurement controllers
            moduleBuilder.RegisterType<ProcurementsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProcurementDocumentsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProcurementBlobsController>().InstancePerLifetimeScope();
            moduleBuilder.RegisterType<ProcurementDifferentiatedPositionsController>().InstancePerLifetimeScope();
        }
    }
}
