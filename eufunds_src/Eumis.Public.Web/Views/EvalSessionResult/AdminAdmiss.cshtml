@using Eumis.Public.Web.InfrastructureClasses
@using Eumis.Public.Web.Models.EvalSessionResult
@using Eumis.Public.Domain.Entities.Umis.EvalSessions
@using Eumis.Public.Common.Json;

@using PagedList
@using PagedList.Mvc;

@model AdminAdmissSearchVM

@Html.Breadcrumb(new List<BreadcrumbItem>()
{
    new BreadcrumbItem(Url.Action(MVC.Home.ActionNames.Index, MVC.Home.Name), Texts.Global_Home),
    new BreadcrumbItem(Url.Action(MVC.Home.ActionNames.Index, MVC.Home.Name) + "#" + Eumis.Public.Common.Configuration.HTML_ENQUERIES_ID, Texts.Global_Enquiries),
}, Texts.EvalSessionResult_AdminAdmiss_ProjectEvaluation)

<div class="container">

    <div class="page-title">
        <h1>@Texts.EvalSessionResult_AdminAdmiss_ProjectEvaluation</h1>
    </div>

    <div class="page-content">

        @if (Model.ShowRes)
        {
            <script type="text/javascript">
                $(document).ready(function () {
                    $('html, body').animate({ scrollTop: (500) }, 1400, 'easeOutQuint');
                });
            </script>

            if (Model.SearchResults != null && Model.SearchResults.Count > 0)
            {
                <div class="heading-with-export clearfix">
                    @Html.Partial(MVC.Shared.Views._ExportIcons)
                </div>

                <p><strong>@Texts.EvalSessionResult_Index_Procedure</strong>: @Model.EvalSessionResult.TransProcedureName</p>
                <p><strong>@Texts.EvalSessionResult_Index_EvalType</strong>:  @Model.EvalSessionResult.Type.GetEnumDescription()</p>
                <p><strong>@Texts.EvalSessionResult_Index_EvalSession</strong>: @Model.EvalSessionResult.EvalSessionNum</p>
                <h2>@Texts.EvalSessionResult_AdminAdmiss_Projects</h2>

                <div class="table-wrapper">
                    <table class="chart-info">
                        <thead>
                            <tr>
                                <th>@Texts.EvalSessionResult_AdminAdmiss_ProjectCode</th>
                                <th>@Texts.EvalSessionResult_AdminAdmiss_ProjectNamе</th>
                                <th>@Texts.EvalSessionResult_AdminAdmiss_ProjectRegDate</th>
                                <th>@Texts.EvalSessionResult_AdminAdmiss_CompanyName</th>
                                <th>@Texts.EvalSessionResult_AdminAdmiss_CompanyUin</th>
                                <th>@Texts.EvalSessionResult_AdminAdmiss_AdminAdmissResult</th>
                                <th>@Texts.EvalSessionResult_AdminAdmiss_NonAdmissionReason</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var project in Model.SearchResults)
                            {
                                <tr>
                                    <td>@project.RegNumber</td>
                                    <td>@project.TransName</td>
                                    <td>@project.RegDate.ToShortDateString()</td>
                                    <td>@Html.DisplayFor(e => project.TransCompanyName)</td>
                                    <td>
                                        @if (project.CompanyUinType != Eumis.Public.Domain.Entities.Umis.NonAggregates.UinType.PersonalBulstat)
                                        {
                                            @(project.CompanyUinType.GetEnumDescription() + ": " + project.CompanyUin)
                                        }
                                    </td>
                                    <td>@Html.DisplayFor(e => project.TransAdminAdmissResult)</td>
                                    <td>@(project.AdminAdmissResult == EvalSessionAdminAdmissEvaluation.NotPassed ? project.NonAdmissionReason : string.Empty)</td>
                                </tr>
                            }
                        </tbody>
                    </table>

                    @if (Model.SearchResults != null && Model.SearchResults.PageCount > 1)
                    {
                        <div class="paging clearfix">
                            <span>@Texts.Global_Page (@Model.SearchResults.PageNumber/@Model.SearchResults.PageCount):</span>
                            @Html.PagedListPager(Model.SearchResults,
                        page => Url.Action(MVC.EvalSessionResult.ActionNames.Show, MVC.EvalSessionResult.Name
                            , new
                            {
                                resultId = Request.QueryString["resultId"],
                                resultType = Request.QueryString["resultType"],
                                page = Eumis.Public.Common.Crypto.ConfigurationBasedStringEncrypter.Encrypt(page.ToString())
                            })
                        , new PagedListRenderOptions
                        {
                            Display = PagedListDisplayMode.IfNeeded,
                            DisplayEllipsesWhenNotShowingAllPageNumbers = true,
                            LinkToNextPageFormat = ">",
                            LinkToPreviousPageFormat = "<"
                        })
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="no-results"><span>@Texts.Global_NoResults</span></div>
            }
        }
    </div>
</div>
