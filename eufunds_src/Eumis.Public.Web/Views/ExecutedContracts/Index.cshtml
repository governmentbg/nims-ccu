@using Eumis.Public.Web.InfrastructureClasses
@using Eumis.Public.Web.Models.ExecutedContracts
@using Eumis.Public.Common.Json;

@using PagedList
@using PagedList.Mvc;

@model ExecutedContractsSearchVM

@Html.Breadcrumb(new List<BreadcrumbItem>()
{
    new BreadcrumbItem(Url.Action(MVC.Home.ActionNames.Index, MVC.Home.Name), Texts.Global_Home),
    new BreadcrumbItem(Url.Action(MVC.Home.ActionNames.Index, MVC.Home.Name) + "#" + Eumis.Public.Common.Configuration.HTML_ENQUERIES_ID, Texts.Global_Enquiries),
}, Texts.ProjectProposals_Index_ProjectProposals)

<div class="container">

    <div class="page-title">
        <h1>@Texts.ExecutedContracts_Index_Title</h1>
    </div>

    <div class="page-content">
        <form class="form-with-sections" method="post">
            @Html.ValidationSummary()
            <section data-section="2" class="clearfix" style="display: block;">
                <div class="row">
                    <div class="form-group col-sm-6">
                        <label>@Texts.ExecutedContracts_Index_Programme</label>
                        @Html.TextBoxFor(m => m.ProgrammeId, new { id = "programme-ddl" })
                    </div>

                    <div class="form-group col-sm-6">
                        <label>@Texts.ExecutedContracts_Index_Procedure</label>
                        @Html.TextBoxFor(m => m.ProcedureId, new { id = "procedure-ddl" })
                    </div>

                    <div class="form-group col-sm-6">
                        <label>@Texts.ExecutedContracts_Index_Company</label>
                        @Html.TextBoxFor(m => m.CompanyId, new { id = "company-ddl" })
                    </div>

                    <script>
                        $(document).ready(function () {
                            createSelect2('#programme-ddl', '/@Language/@OpId/@PrId/ExecutedContracts/GetProgramme', '/@Language//@OpId/@PrId/ExecutedContracts/GetProgrammes');
                            createSelect2('#procedure-ddl', '/@Language//@OpId/@PrId/ExecutedContracts/GetProcedure', '/@Language//@OpId/@PrId/ExecutedContracts/GetProcedures', '#programme-ddl');
                            createSelect2('#company-ddl', '/@Language/@OpId/@PrId/ExecutedContracts/GetCompany', '/@Language//@OpId/@PrId/ExecutedContracts/GetCompanies');
                        });
                    </script>

                    <div class="form-submit col-lg-3 col-sm-12">
                        <input type="submit" class="submit m-right-0 wait" name="submit" value="@Texts.Global_SearchButtonValue">
                    </div>
                </div>
            </section>
        </form>

        @if (Model.ShowRes)
        {
            <script type="text/javascript">
                $(document).ready(function () {
                    $('html, body').animate({ scrollTop: (500) }, 1400, 'easeOutQuint');
                });
            </script>

            if (Model.SearchResults != null && Model.SearchResults.Count > 0)
            {
                <div class="heading-with-export clearfix">
                    <h2>@Texts.Global_Total</h2>
                    @Html.Partial(MVC.Shared.Views._ExportIcons)
                </div>

                <div class="heading-with-export clearfix" style="margin-top:20px;">
                    <h2>@Texts.ProjectProposals_Index_ProjectProposals</h2>
                </div>

                <div class="table-wrapper">
                    <table class="chart-info">
                        <thead>
                            <tr>
                                <th colspan="4">@Texts.ExecutedContracts_Index_Contract</th>
                                <th colspan="5">@Texts.ExecutedContracts_Index_Company</th>
                                <th colspan="5">@Texts.ExecutedContracts_Index_Contract</th>
                            </tr>
                            <tr>
                                <th>@Texts.ExecutedContracts_Index_Programme</th>
                                <th>@Texts.ExecutedContracts_Index_Procedure</th>
                                <th>@Texts.ExecutedContracts_Index_ContractRegNumber</th>
                                <th>@Texts.ExecutedContracts_Index_Contract</th>
                                <th>@Texts.ExecutedContracts_Index_Uin</th>
                                <th>@Texts.ExecutedContracts_Index_Company</th>
                                <th>@Texts.ExecutedContracts_Index_CompanyType</th>
                                <th>@Texts.ExecutedContracts_Index_CompanyLegalType</th>
                                <th>@Texts.ExecutedContracts_Index_CompanySizeType</th>
                                <th>@Texts.ExecutedContracts_Index_ContractDuration</th>
                                <th>@Texts.ExecutedContracts_Index_InitialContractDate</th>
                                <th>@Texts.ExecutedContracts_Index_InitialCompletionDate</th>
                                <th>@Texts.ExecutedContracts_Index_ActualCompletionDate</th>
                                <th>@Texts.ExecutedContracts_Index_ContractExecutionStatus</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var contract in Model.SearchResults)
                            {
                                <tr>
                                    <td>@contract.ProgrammeTransName</td>
                                    <td>@contract.ProcedureTransName</td>
                                    <td>@contract.ContractRegNumber</td>
                                    <td>@Html.ActionLink(contract.ContractTransName, MVC.Project.BasicData(Eumis.Public.Common.Crypto.ConfigurationBasedStringEncrypter.Encrypt(contract.ContractId), false), new { @class = "wait" })</td>
                                    <td>@contract.CompanyUin</td>
                                    <td>@contract.CompanyTransName</td>
                                    <td>@contract.CompanyTypeTransName</td>
                                    <td>@contract.CompanyLegalTypeTransName</td>
                                    <td>@contract.CompanySizeTypeTransName</td>
                                    <td>@contract.ContractDuration</td>
                                    <td>@Html.DisplayFor(m => contract.InitialContractDate)</td>
                                    <td>@Html.DisplayFor(m => contract.InitialCompletionDate)</td>
                                    <td>@Html.DisplayFor(m => contract.ActualCompletionDate)</td>
                                    <td>@contract.ContractExecutionStatus.GetEnumDescription()</td>
                                </tr>
                            }
                        </tbody>
                    </table>

                    @if (Model.SearchResults != null && Model.SearchResults.PageCount > 1)
                    {
                        <div class="paging clearfix">
                            <span>@Texts.Global_Page (@Model.SearchResults.PageNumber/@Model.SearchResults.PageCount):</span>
                            @Html.PagedListPager(Model.SearchResults,
                        page => Url.Action(MVC.ExecutedContracts.ActionNames.Index, MVC.ExecutedContracts.Name
                            , new
                            {
                                programmeId = Request.QueryString["programmeId"],
                                procedureId = Request.QueryString["procedureId"],
                                companyId = Request.QueryString["companyId"],
                                showRes = true,
                                page = Eumis.Public.Common.Crypto.ConfigurationBasedStringEncrypter.Encrypt(page.ToString())
                            })
                        , new PagedListRenderOptions
                          {
                              Display = PagedListDisplayMode.IfNeeded,
                              DisplayEllipsesWhenNotShowingAllPageNumbers = true,
                              LinkToNextPageFormat = ">",
                              LinkToPreviousPageFormat = "<"
                          })
                        </div>
                    }
                </div>

                <h2>@Texts.Global_Note:</h2>
                <div class="note">
                    @Texts.Global_NoteBGN
                </div>
            }
            else
            {
                <div class="no-results"><span>@Texts.Global_NoResults</span></div>
            }
        }
    </div>
</div>
