@model Eumis.Public.Web.Models.Beneficiary.BeneficiarySearchVM
@using Eumis.Public.Web.InfrastructureClasses

@using PagedList
@using PagedList.Mvc;

@{
    var breadcrumbLinks = new List<BreadcrumbItem>() { new BreadcrumbItem(Url.Action(MVC.Home.ActionNames.Index, MVC.Home.Name), Texts.Global_Home) };
}

@Html.Breadcrumb(breadcrumbLinks, Texts.Global_Beneficiaries)

<div class="container">

    <div class="page-title">
        <h1>@Texts.Global_Beneficiaries</h1>
    </div>

    <div class="page-content">
        <form class="form-with-sections" method="post">
            <section data-section="2" class="clearfix" style="display: block;">
                <div class="form-group col-lg-4 col-sm-6">
                    <label>@Texts.Beneficiary_Index_Beneficiary</label>
                    @Html.TextBoxFor(m => m.Beneficiary, new { @class = "form-control" })
                </div>

                <div class="form-group col-lg-4 col-sm-6">
                    <label>@Texts.Beneficiary_Index_CompanyType:</label><br>
                    @Html.TextBoxFor(m => m.CompanyType, new { id = "company-type-ddl", @class = "form-control" })
                </div>

                <div class="form-group col-lg-4 col-sm-6">
                    <label>@Texts.Beneficiary_Index_CompanyLegalType:</label><br>
                    @Html.TextBoxFor(m => m.CompanyLegalType, new { id = "company-legal-type-ddl", @class = "form-control" })
                </div>
                <div class="form-group col-lg-4 col-sm-6">
                    <label>@Texts.Beneficiary_Index_CompanyUin:</label><br>
                    @Html.TextBoxFor(m => m.CompanyUin, new { @class = "form-control" })
                </div>
                @Html.Hidden("ShowRes", true)
                <script>
                    $(document).ready(function () {
                        createSelect2('#company-type-ddl', '/@Language/@OpId/@PrId/Nomenclature/GetCompanyType', '/@Language/@OpId/@PrId/Nomenclature/GetCompanyTypes');
                        createSelect2('#company-legal-type-ddl', '/@Language/@OpId/@PrId/Nomenclature/GetCompanyLegalType', '/@Language/@OpId/@PrId/Nomenclature/GetCompanyLegalTypes', '#company-type-ddl');
                    });
                </script>

                <div class="form-submit col-lg-3 col-sm-12">
                    <input type="submit" class="submit m-right-0 wait" name="submit" value="@Texts.Global_SearchButtonValue">
                </div>

            </section>
        </form>

        @if (Model.SearchResults != null && Model.SearchResults.Count > 0)
        {
            <div class="heading-with-export clearfix">
                @Html.Partial(MVC.Shared.Views._ExportIcons)
            </div>

            <div class="table-wrapper">
                <table class="chart-info">
                    <thead>
                        <tr>
                            <th>@Texts.Beneficiary_Index_Name</th>
                            <th>@Texts.Beneficiary_Index_ProjectsCount</th>
                            <th>@Texts.Global_Contracted</th>
                            <th>@Texts.Global_Payed</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var beneficiary in Model.SearchResults)
                        {
                            <tr>
                                <td>@Html.ActionLink(beneficiary.TransFullName, MVC.Company.ActionNames.Index, MVC.Company.Name, new { uin = Eumis.Public.Common.Crypto.ConfigurationBasedStringEncrypter.Encrypt(beneficiary.Uin), uinType = beneficiary.UinType, isHistoric = beneficiary.IsHistoric, type = Eumis.Public.Web.Models.Company.CompanyEnumType.Beneficiary }, new { @class = "wait" })</td>
                                <td class="sum-field">@Html.DisplayFor(m => beneficiary.ContractsCount)</td>
                                <td class="sum-field">@Html.DisplayFor(m => beneficiary.ContractedAmount)</td>
                                <td class="sum-field">@Html.DisplayFor(m => beneficiary.PaidAmount)</td>
                            </tr>
                        }
                    </tbody>
                </table>

                @if (Model.SearchResults != null && Model.SearchResults.PageCount > 1)
                        {
                    <div class="paging clearfix">
                        <span>@Texts.Global_Page (@Model.SearchResults.PageNumber/@Model.SearchResults.PageCount):</span>
                        @Html.PagedListPager(Model.SearchResults,
                         page => Url.Action(MVC.Beneficiary.ActionNames.Index,
                             MVC.Beneficiary.Name
                             , new
                             {
                                 beneficiary = Request.QueryString["beneficiary"],
                                 companyType = Request.QueryString["companyType"],
                                 companyLegalType = Request.QueryString["companyLegalType"],
                                 showRes = true,
                                 page = Eumis.Public.Common.Crypto.ConfigurationBasedStringEncrypter.Encrypt(page.ToString())
                             })
                         , new PagedListRenderOptions
                         {
                             Display = PagedListDisplayMode.IfNeeded,
                             DisplayEllipsesWhenNotShowingAllPageNumbers = true,
                             LinkToNextPageFormat = ">",
                             LinkToPreviousPageFormat = "<"
                         })
                    </div>
                        }
            </div>

            <h2>@Texts.Global_Note:</h2>
            <div class="note">
                @Texts.Global_NoteUnderlined<br />
                @Texts.Global_NoteBGN
            </div>
        }
        else if (Model.ShowRes)
        {
            <div class="no-results"><span>@Texts.Global_NoResults</span></div>
        }
    </div>
</div>
