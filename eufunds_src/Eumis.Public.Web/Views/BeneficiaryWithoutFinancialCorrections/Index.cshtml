@using Eumis.Public.Web.InfrastructureClasses
@using Eumis.Public.Web.Models.BeneficiaryWithoutFinancialCorrections
@using Eumis.Public.Common.Json;

@using PagedList
@using PagedList.Mvc;

@model BeneficiaryWithoutFinancialCorrectionsSearchVM

@Html.Breadcrumb(new List<BreadcrumbItem>()
{
    new BreadcrumbItem(Url.Action(MVC.Home.ActionNames.Index, MVC.Home.Name), Texts.Global_Home),
    new BreadcrumbItem(Url.Action(MVC.Home.ActionNames.Index, MVC.Home.Name) + "#" + Eumis.Public.Common.Configuration.HTML_ENQUERIES_ID, Texts.Global_Enquiries),
}, Texts.BeneficiaryWithoutFC_Index_ShortName)

    <div class="container">

        <div class="page-title">
            <h1>@Texts.BeneficiaryWithoutFC_Index_Name</h1>
        </div>

        <div class="page-content">
            <form class="form-with-sections" method="post">
                <section data-section="2" class="clearfix" style="display: block;">
                    <div class="form-group col-lg-4 col-sm-6">
                        <label>@Texts.BeneficiaryWithoutFC_Index_Beneficiary</label>
                        @Html.TextBoxFor(m => m.Beneficiary, new { @class = "form-control" })
                    </div>

                    <div class="form-group col-lg-4 col-sm-6">
                        <label>@Texts.BeneficiaryWithoutFC_Index_CompanyType:</label><br>
                        @Html.TextBoxFor(m => m.CompanyType, new { id = "company-type-ddl", @class = "form-control" })
                    </div>

                    <div class="form-group col-lg-4 col-sm-6">
                        <label>@Texts.BeneficiaryWithoutFC_Index_CompanyLegalType:</label><br>
                        @Html.TextBoxFor(m => m.CompanyLegalType, new { id = "company-legal-type-ddl", @class = "form-control" })
                    </div>
                    <div class="form-group col-lg-4 col-sm-6">
                        <label>@Texts.BeneficiaryWithoutFC_Index_CompanyUin:</label><br>
                        @Html.TextBoxFor(m => m.CompanyUin, new { @class = "form-control" })
                    </div>
                    <div class="form-group col-lg-4 col-sm-6">
                        <label>@Texts.BeneficiaryWithoutFC_Index_Seat</label><br>
                        @Html.TextBoxFor(m => m.Seat, new { @class = "form-control" })
                    </div>
                    @Html.Hidden("ShowRes", true)
                    <script>
                    $(document).ready(function () {
                        createSelect2('#company-type-ddl', '/@Language/@OpId/@PrId/Nomenclature/GetCompanyType', '/@Language/@OpId/@PrId/Nomenclature/GetCompanyTypes');
                        createSelect2('#company-legal-type-ddl', '/@Language/@OpId/@PrId/Nomenclature/GetCompanyLegalType', '/@Language/@OpId/@PrId/Nomenclature/GetCompanyLegalTypes', '#company-type-ddl');
                    });
                    </script>

                    <div class="form-submit col-lg-3 col-sm-12">
                        <input type="submit" class="submit m-right-0 wait" name="submit" value="@Texts.Global_SearchButtonValue">
                    </div>

                </section>
            </form>

            @if (Model.ShowRes)
            {
                <script type="text/javascript">
                    $(document).ready(function () {
                        $('html, body').animate({ scrollTop: (500) }, 1400, 'easeOutQuint');
                    });
                </script>

                if (Model.SearchResults != null && Model.SearchResults.Count > 0)
                {
                    <div class="heading-with-export clearfix">
                        @Html.Partial(MVC.Shared.Views._ExportIcons)
                    </div>

                    <div class="heading-with-export clearfix" style="margin-top:20px;">
                        <h2>@Texts.BeneficiaryWithoutFC_Index_Name</h2>
                    </div>

                    <div class="table-wrapper">
                        <table class="chart-info">
                            <thead>
                                <tr>
                                    <th>@Texts.BeneficiaryWithoutFC_Index_Beneficiary</th>
                                    <th>@Texts.BeneficiaryWithoutFC_Index_CompanyUin</th>
                                    <th>@Texts.BeneficiaryWithoutFC_Index_CompanyType</th>
                                    <th>@Texts.BeneficiaryWithoutFC_Index_CompanyLegalType</th>
                                    <th>@Texts.BeneficiaryWithoutFC_Index_Seat</th>
                                    <th>@Texts.BeneficiaryWithoutFC_Index_ProjectsCount</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var beneficiary in Model.SearchResults)
                                {
                                <tr>
                                    <td>@Html.DisplayFor(m => beneficiary.Name)</td>
                                    <td>@Html.DisplayFor(m => beneficiary.Uin)</td>
                                    <td>@Html.DisplayFor(m => beneficiary.CompanyTypeName)</td>
                                    <td>@Html.DisplayFor(m => beneficiary.CompanyLegalTypeName)</td>
                                    <td>@Html.DisplayFor(m => beneficiary.Seat)</td>
                                    <td class="sum-field">@Html.DisplayFor(m => beneficiary.ContractsCount)</td>
                                </tr>
                                }
                            </tbody>
                        </table>

                        @if (Model.SearchResults != null && Model.SearchResults.PageCount > 1)
                        {
                            <div class="paging clearfix">
                                <span>@Texts.Global_Page (@Model.SearchResults.PageNumber/@Model.SearchResults.PageCount):</span>
                                @Html.PagedListPager(Model.SearchResults,
                            page => Url.Action(MVC.BeneficiaryWithoutFinancialCorrections.ActionNames.Index, MVC.BeneficiaryWithoutFinancialCorrections.Name
                                , new
                                {
                                    companyUin = Request.QueryString["companyUin"],
                                    beneficiary = Request.QueryString["beneficiary"],
                                    companyType = Request.QueryString["companyType"],
                                    companyLegalType = Request.QueryString["companyLegalType"],
                                    seat = Request.QueryString["seat"],
                                    showRes = true,
                                    page = Eumis.Public.Common.Crypto.ConfigurationBasedStringEncrypter.Encrypt(page.ToString())
                                })
                            , new PagedListRenderOptions
                              {
                                  Display = PagedListDisplayMode.IfNeeded,
                                  DisplayEllipsesWhenNotShowingAllPageNumbers = true,
                                  LinkToNextPageFormat = ">",
                                  LinkToPreviousPageFormat = "<"
                              })
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class="no-results"><span>@Texts.Global_NoResults</span></div>
                }
            }
        </div>
    </div>
