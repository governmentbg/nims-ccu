// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static partial class MVC
{
    public static Eumis.Public.Web.Controllers.ActuallyPaidAmountsController ActuallyPaidAmounts = new Eumis.Public.Web.Controllers.T4MVC_ActuallyPaidAmountsController();
    public static Eumis.Public.Web.Controllers.AdminController Admin = new Eumis.Public.Web.Controllers.T4MVC_AdminController();
    public static Eumis.Public.Web.Controllers.AdminProcedureController AdminProcedure = new Eumis.Public.Web.Controllers.T4MVC_AdminProcedureController();
    public static Eumis.Public.Web.Controllers.BeneficiaryController Beneficiary = new Eumis.Public.Web.Controllers.T4MVC_BeneficiaryController();
    public static Eumis.Public.Web.Controllers.BeneficiaryWithoutFinancialCorrectionsController BeneficiaryWithoutFinancialCorrections = new Eumis.Public.Web.Controllers.T4MVC_BeneficiaryWithoutFinancialCorrectionsController();
    public static Eumis.Public.Web.Controllers.BgMapsController BgMaps = new Eumis.Public.Web.Controllers.T4MVC_BgMapsController();
    public static Eumis.Public.Web.Controllers.CalendarController Calendar = new Eumis.Public.Web.Controllers.T4MVC_CalendarController();
    public static Eumis.Public.Web.Controllers.CompanyController Company = new Eumis.Public.Web.Controllers.T4MVC_CompanyController();
    public static Eumis.Public.Web.Controllers.ContractContractsController ContractContracts = new Eumis.Public.Web.Controllers.T4MVC_ContractContractsController();
    public static Eumis.Public.Web.Controllers.ContractorController Contractor = new Eumis.Public.Web.Controllers.T4MVC_ContractorController();
    public static Eumis.Public.Web.Controllers.EvalSessionResultController EvalSessionResult = new Eumis.Public.Web.Controllers.T4MVC_EvalSessionResultController();
    public static Eumis.Public.Web.Controllers.EventsController Events = new Eumis.Public.Web.Controllers.T4MVC_EventsController();
    public static Eumis.Public.Web.Controllers.ExecutedContractsController ExecutedContracts = new Eumis.Public.Web.Controllers.T4MVC_ExecutedContractsController();
    public static Eumis.Public.Web.Controllers.HomeController Home = new Eumis.Public.Web.Controllers.T4MVC_HomeController();
    public static Eumis.Public.Web.Controllers.ImplementationController Implementation = new Eumis.Public.Web.Controllers.T4MVC_ImplementationController();
    public static Eumis.Public.Web.Controllers.IndicativeAnnualWorkingProgrammesController IndicativeAnnualWorkingProgrammes = new Eumis.Public.Web.Controllers.T4MVC_IndicativeAnnualWorkingProgrammesController();
    public static Eumis.Public.Web.Controllers.IndicatorsController Indicators = new Eumis.Public.Web.Controllers.T4MVC_IndicatorsController();
    public static Eumis.Public.Web.Controllers.MemberController Member = new Eumis.Public.Web.Controllers.T4MVC_MemberController();
    public static Eumis.Public.Web.Controllers.NomenclatureController Nomenclature = new Eumis.Public.Web.Controllers.T4MVC_NomenclatureController();
    public static Eumis.Public.Web.Controllers.OpenDataController OpenData = new Eumis.Public.Web.Controllers.T4MVC_OpenDataController();
    public static Eumis.Public.Web.Controllers.OperationalProgramsController OperationalPrograms = new Eumis.Public.Web.Controllers.T4MVC_OperationalProgramsController();
    public static Eumis.Public.Web.Controllers.Operations508Controller Operations508 = new Eumis.Public.Web.Controllers.T4MVC_Operations508Controller();
    public static Eumis.Public.Web.Controllers.OperationsController Operations = new Eumis.Public.Web.Controllers.T4MVC_OperationsController();
    public static Eumis.Public.Web.Controllers.OPProfileController OPProfile = new Eumis.Public.Web.Controllers.T4MVC_OPProfileController();
    public static Eumis.Public.Web.Controllers.PartnerController Partner = new Eumis.Public.Web.Controllers.T4MVC_PartnerController();
    public static Eumis.Public.Web.Controllers.PlanningRegionsController PlanningRegions = new Eumis.Public.Web.Controllers.T4MVC_PlanningRegionsController();
    public static Eumis.Public.Web.Controllers.PriorityLinesController PriorityLines = new Eumis.Public.Web.Controllers.T4MVC_PriorityLinesController();
    public static Eumis.Public.Web.Controllers.ProceduresController Procedures = new Eumis.Public.Web.Controllers.T4MVC_ProceduresController();
    public static Eumis.Public.Web.Controllers.ProgrammeGroupsController ProgrammeGroups = new Eumis.Public.Web.Controllers.T4MVC_ProgrammeGroupsController();
    public static Eumis.Public.Web.Controllers.ProjectController Project = new Eumis.Public.Web.Controllers.T4MVC_ProjectController();
    public static Eumis.Public.Web.Controllers.ProjectProposalsController ProjectProposals = new Eumis.Public.Web.Controllers.T4MVC_ProjectProposalsController();
    public static Eumis.Public.Web.Controllers.SubcontractorController Subcontractor = new Eumis.Public.Web.Controllers.T4MVC_SubcontractorController();
    public static T4MVC.InfrastructureController Infrastructure = new T4MVC.InfrastructureController();
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
}

namespace T4MVC
{
}

#pragma warning disable 0436
namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}
#pragma warning restore 0436

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_JsonResult : System.Web.Mvc.JsonResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_JsonResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_FileResult : System.Web.Mvc.FileResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_FileResult(string area, string controller, string action, string protocol = null): base(" ")
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    protected override void WriteFile(System.Web.HttpResponseBase response) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_PartialViewResult : System.Web.Mvc.PartialViewResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_PartialViewResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Scripts {
        public const string UrlPath = "~/Scripts";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
        public static readonly string autogrow_min_js = Url("autogrow.min.js");
        public static readonly string bootstrap_confirmation_min_js = Url("bootstrap-confirmation.min.js");
        public static readonly string bootstrap_datepicker_bg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.bg.min.js") ? Url("bootstrap-datepicker.bg.min.js") : Url("bootstrap-datepicker.bg.js");
        public static readonly string bootstrap_datepicker_en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.en.min.js") ? Url("bootstrap-datepicker.en.min.js") : Url("bootstrap-datepicker.en.js");
        public static readonly string bootstrap_datepicker_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-datepicker.min.js") ? Url("bootstrap-datepicker.min.js") : Url("bootstrap-datepicker.js");
        public static readonly string bootstrap_switch_min_js = Url("bootstrap-switch.min.js");
        public static readonly string bootstrap_tabdrop_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-tabdrop.min.js") ? Url("bootstrap-tabdrop.min.js") : Url("bootstrap-tabdrop.js");
        public static readonly string bootstrap_min_js = Url("bootstrap.min.js");
        public static readonly string highcharts_7_2_0_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/highcharts-7.2.0.min.js") ? Url("highcharts-7.2.0.min.js") : Url("highcharts-7.2.0.js");
        public static readonly string highcharts_custom_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/highcharts-custom.min.js") ? Url("highcharts-custom.min.js") : Url("highcharts-custom.js");
        public static readonly string highmaps_1_1_5_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/highmaps-1.1.5.min.js") ? Url("highmaps-1.1.5.min.js") : Url("highmaps-1.1.5.js");
        public static readonly string highmaps_custom_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/highmaps-custom.min.js") ? Url("highmaps-custom.min.js") : Url("highmaps-custom.js");
        public static readonly string highmaps_data_1_1_5_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/highmaps-data-1.1.5.min.js") ? Url("highmaps-data-1.1.5.min.js") : Url("highmaps-data-1.1.5.js");
        public static readonly string highmaps_drilldown_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/highmaps-drilldown.min.js") ? Url("highmaps-drilldown.min.js") : Url("highmaps-drilldown.js");
        public static readonly string highmaps_exporting_1_1_5_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/highmaps-exporting-1.1.5.min.js") ? Url("highmaps-exporting-1.1.5.min.js") : Url("highmaps-exporting-1.1.5.js");
        public static readonly string jquery_2_1_1_intellisense_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery-2.1.1.intellisense.min.js") ? Url("jquery-2.1.1.intellisense.min.js") : Url("jquery-2.1.1.intellisense.js");
        public static readonly string jquery_2_1_1_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery-2.1.1.min.js") ? Url("jquery-2.1.1.min.js") : Url("jquery-2.1.1.js");
        public static readonly string jquery_2_1_1_min_js = Url("jquery-2.1.1.min.js");
        public static readonly string jquery_2_1_1_min_map = Url("jquery-2.1.1.min.map");
        public static readonly string jquery_ba_resize_min_js = Url("jquery.ba-resize.min.js");
        public static readonly string jquery_easing_1_3_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.easing.1.3.min.js") ? Url("jquery.easing.1.3.min.js") : Url("jquery.easing.1.3.js");
        public static readonly string jquery_lightbox_min_js = Url("jquery.lightbox.min.js");
        public static readonly string jquery_validate_vsdoc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.validate-vsdoc.min.js") ? Url("jquery.validate-vsdoc.min.js") : Url("jquery.validate-vsdoc.js");
        public static readonly string jquery_validate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.validate.min.js") ? Url("jquery.validate.min.js") : Url("jquery.validate.js");
        public static readonly string jquery_validate_min_js = Url("jquery.validate.min.js");
        public static readonly string jquery_validate_unobtrusive_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.validate.unobtrusive.min.js") ? Url("jquery.validate.unobtrusive.min.js") : Url("jquery.validate.unobtrusive.js");
        public static readonly string jquery_validate_unobtrusive_min_js = Url("jquery.validate.unobtrusive.min.js");
        public static readonly string lodash_4_7_15_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/lodash-4.7.15.min.js") ? Url("lodash-4.7.15.min.js") : Url("lodash-4.7.15.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class map {
            public const string UrlPath = "~/Scripts/map";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string Map_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/Map.min.js") ? Url("Map.min.js") : Url("Map.js");
            public static readonly string MapData_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/MapData.min.js") ? Url("MapData.min.js") : Url("MapData.js");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Pages {
            public const string UrlPath = "~/Scripts/Pages";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string HomeDefault_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/HomeDefault.min.js") ? Url("HomeDefault.min.js") : Url("HomeDefault.js");
        }
    
        public static readonly string responsive_calendar_min_js = Url("responsive-calendar.min.js");
        public static readonly string scripts_custom_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/scripts-custom.min.js") ? Url("scripts-custom.min.js") : Url("scripts-custom.js");
        public static readonly string scripts_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/scripts.min.js") ? Url("scripts.min.js") : Url("scripts.js");
        public static readonly string select2_min_js = Url("select2.min.js");
        public static readonly string select2_locale_bg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/select2_locale_bg.min.js") ? Url("select2_locale_bg.min.js") : Url("select2_locale_bg.js");
        public static readonly string select2_locale_en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/select2_locale_en.min.js") ? Url("select2_locale_en.min.js") : Url("select2_locale_en.js");
        public static readonly string time_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/time.min.js") ? Url("time.min.js") : Url("time.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class tree {
            public const string UrlPath = "~/Scripts/tree";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string jquery_treetable_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.treetable.min.css") ? Url("jquery.treetable.min.css") : Url("jquery.treetable.css");
            public static readonly string jquery_treetable_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.treetable.min.js") ? Url("jquery.treetable.min.js") : Url("jquery.treetable.js");
        }
    
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Content {
        public const string UrlPath = "~/Content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class css {
            public const string UrlPath = "~/Content/css";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string bootstrap_switch_min_css = Url("bootstrap-switch.min.css");
            public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
            public static readonly string custom_public_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/custom-public.min.css") ? Url("custom-public.min.css") : Url("custom-public.css");
            public static readonly string custom_style_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/custom-style.min.css") ? Url("custom-style.min.css") : Url("custom-style.css");
            public static readonly string datepicker_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/datepicker.min.css") ? Url("datepicker.min.css") : Url("datepicker.css");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class lightbox {
                public const string UrlPath = "~/Content/css/lightbox";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string close_png = Url("close.png");
                public static readonly string jquery_lightbox_min_css = Url("jquery.lightbox.min.css");
                public static readonly string loading_gif = Url("loading.gif");
                public static readonly string next_png = Url("next.png");
                public static readonly string previous_png = Url("previous.png");
            }
        
            public static readonly string print_style_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/print-style.min.css") ? Url("print-style.min.css") : Url("print-style.css");
            public static readonly string responsive_calendar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/responsive-calendar.min.css") ? Url("responsive-calendar.min.css") : Url("responsive-calendar.css");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class select2 {
                public const string UrlPath = "~/Content/css/select2";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string select2_spinner_gif = Url("select2-spinner.gif");
                public static readonly string select2_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/select2.min.css") ? Url("select2.min.css") : Url("select2.css");
                public static readonly string select2_png = Url("select2.png");
                public static readonly string select2x2_png = Url("select2x2.png");
            }
        
            public static readonly string style_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/style.min.css") ? Url("style.min.css") : Url("style.css");
            public static readonly string tabdrop_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/tabdrop.min.css") ? Url("tabdrop.min.css") : Url("tabdrop.css");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class fonts {
            public const string UrlPath = "~/Content/fonts";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string glyphicons_halflings_regular_eot = Url("glyphicons-halflings-regular.eot");
            public static readonly string glyphicons_halflings_regular_svg = Url("glyphicons-halflings-regular.svg");
            public static readonly string glyphicons_halflings_regular_ttf = Url("glyphicons-halflings-regular.ttf");
            public static readonly string glyphicons_halflings_regular_woff = Url("glyphicons-halflings-regular.woff");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class img {
            public const string UrlPath = "~/Content/img";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string browser_chrome_png = Url("browser_chrome.png");
            public static readonly string browser_firefox_png = Url("browser_firefox.png");
            public static readonly string browser_ie_png = Url("browser_ie.png");
            public static readonly string browser_opera_png = Url("browser_opera.png");
            public static readonly string browser_safari_png = Url("browser_safari.png");
            public static readonly string eea_norway_grants_png = Url("eea_norway_grants.png");
            public static readonly string eu_png = Url("eu.png");
            public static readonly string eu_big_jpg = Url("eu_big.jpg");
            public static readonly string eu_flag_gif = Url("eu_flag.gif");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class gallery {
                public const string UrlPath = "~/Content/img/gallery";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string _01_gif = Url("01.gif");
                public static readonly string _02_gif = Url("02.gif");
                public static readonly string _03_gif = Url("03.gif");
                public static readonly string _04_gif = Url("04.gif");
            }
        
            public static readonly string gerb_jpg = Url("gerb.jpg");
            public static readonly string gerb_footer_png = Url("gerb_footer.png");
            public static readonly string green_logo_png = Url("green_logo.png");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class icons {
                public const string UrlPath = "~/Content/img/icons";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string add_new_btn_png = Url("add-new-btn.png");
                public static readonly string arrow_back_png = Url("arrow-back.png");
                public static readonly string arrow_down_gif = Url("arrow-down.gif");
                public static readonly string arrow_right_png = Url("arrow-right.png");
                public static readonly string back_btn_arrow_png = Url("back_btn_arrow.png");
                public static readonly string blue_arrow_right_gif = Url("blue_arrow_right.gif");
                public static readonly string blue_arrow_right_png = Url("blue_arrow_right.png");
                public static readonly string blue_arrow_right_small_gif = Url("blue_arrow_right_small.gif");
                public static readonly string breadcrumb_sep_png = Url("breadcrumb-sep.png");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class browsers {
                    public const string UrlPath = "~/Content/img/icons/browsers";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string chrome_jpg = Url("chrome.jpg");
                    public static readonly string firefox_jpg = Url("firefox.jpg");
                    public static readonly string ie_jpg = Url("ie.jpg");
                    public static readonly string opera_jpg = Url("opera.jpg");
                    public static readonly string safari_jpg = Url("safari.jpg");
                }
            
                public static readonly string deadline_gif = Url("deadline.gif");
                public static readonly string delete_btn_png = Url("delete-btn.png");
                public static readonly string delete_file_btn_png = Url("delete-file-btn.png");
                public static readonly string download_as_file_gif = Url("download-as-file.gif");
                public static readonly string download_icon_png = Url("download-icon.png");
                public static readonly string drop_arrow_gif = Url("drop-arrow.gif");
                public static readonly string eco_tree_png = Url("eco_tree.png");
                public static readonly string edit_btn_png = Url("edit-btn.png");
                public static readonly string error_gif = Url("error.gif");
                public static readonly string favicon_ico = Url("favicon.ico");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class files {
                    public const string UrlPath = "~/Content/img/icons/files";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                    public static readonly string doc_png = Url("doc.png");
                    public static readonly string file_png = Url("file.png");
                    public static readonly string html_jpg = Url("html.jpg");
                    public static readonly string html_png = Url("html.png");
                    public static readonly string pdf_png = Url("pdf.png");
                    public static readonly string ppt_png = Url("ppt.png");
                    public static readonly string print_jpg = Url("print.jpg");
                    public static readonly string txt_png = Url("txt.png");
                    public static readonly string xls_jpg = Url("xls.jpg");
                    public static readonly string xls_png = Url("xls.png");
                    public static readonly string xml_jpg = Url("xml.jpg");
                    public static readonly string zip_png = Url("zip.png");
                }
            
                public static readonly string filter_png = Url("filter.png");
                public static readonly string gototop_png = Url("gototop.png");
                public static readonly string green_tick_gif = Url("green-tick.gif");
                public static readonly string history_btn_png = Url("history-btn.png");
                public static readonly string horizontal_scroll_png = Url("horizontal-scroll.png");
                public static readonly string info_white_png = Url("info-white.png");
                public static readonly string info_png = Url("info.png");
                public static readonly string isun_png = Url("isun.png");
                public static readonly string lang_jpg = Url("lang.jpg");
                public static readonly string list_arrow_right_gif = Url("list-arrow-right.gif");
                public static readonly string mappointer_png = Url("mappointer.png");
                public static readonly string people_png = Url("people.png");
                public static readonly string preview_btn_png = Url("preview-btn.png");
                public static readonly string print_2_gif = Url("print-2.gif");
                public static readonly string print_gif = Url("print.gif");
                public static readonly string save_as_draft_gif = Url("save-as-draft.gif");
                public static readonly string search_btn_png = Url("search-btn.png");
                public static readonly string search_png = Url("search.png");
                public static readonly string stats_png = Url("stats.png");
                public static readonly string step_final_png = Url("step-final.png");
                public static readonly string subm_add_gif = Url("subm-add.gif");
                public static readonly string subm_choose_gif = Url("subm-choose.gif");
                public static readonly string subm_download_gif = Url("subm-download.gif");
                public static readonly string subm_download_png = Url("subm-download.png");
                public static readonly string subm_print_gif = Url("subm-print.gif");
                public static readonly string subm_sign_gif = Url("subm-sign.gif");
                public static readonly string success_gif = Url("success.gif");
                public static readonly string success_png = Url("success.png");
                public static readonly string tick_gif = Url("tick.gif");
                public static readonly string tick_blue_gif = Url("tick_blue.gif");
                public static readonly string validate_gif = Url("validate.gif");
                public static readonly string warning_orange_png = Url("warning-orange.png");
                public static readonly string warning_red_gif = Url("warning-red.gif");
                public static readonly string warning_gif = Url("warning.gif");
                public static readonly string warning_png = Url("warning.png");
                public static readonly string zoomin_gif = Url("zoomin.gif");
            }
        
            public static readonly string isun_lg_gif = Url("isun-lg.gif");
            public static readonly string isun_line_jpg = Url("isun-line.jpg");
            public static readonly string isun_gif = Url("isun.gif");
            public static readonly string loader_gif = Url("loader.gif");
            public static readonly string loader_h26_gif = Url("loader_h26.gif");
            public static readonly string logo_png = Url("logo.png");
            public static readonly string logo_big_jpg = Url("logo_big.jpg");
            public static readonly string logo_good_governance_bg_png = Url("logo_good_governance_bg.png");
            public static readonly string narrow_subheader_jpg = Url("narrow-subheader.jpg");
            public static readonly string qr_jpg = Url("qr.jpg");
            public static readonly string subheader_jpg = Url("subheader.jpg");
            public static readonly string support_mail_PNG = Url("support-mail.PNG");
        }
    
        public static readonly string PagedList_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/PagedList.min.css") ? Url("PagedList.min.css") : Url("PagedList.css");
    }

    
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class Bundles
    {
        public static partial class Scripts 
        {
            public static partial class map 
            {
                public static class Assets
                {
                    public static readonly string Map_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/map/Map.js"); 
                    public static readonly string MapData_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/map/MapData.js"); 
                }
            }
            public static partial class Pages 
            {
                public static class Assets
                {
                    public static readonly string HomeDefault_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/Pages/HomeDefault.js"); 
                }
            }
            public static partial class tree 
            {
                public static class Assets
                {
                    public static readonly string jquery_treetable_css = T4MVCHelpers.ProcessAssetPath("~/Scripts/tree/jquery.treetable.css");
                    public static readonly string jquery_treetable_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/tree/jquery.treetable.js"); 
                }
            }
            public static class Assets
            {
                public static readonly string autogrow_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/autogrow.min.js"); 
                public static readonly string bootstrap_confirmation_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/bootstrap-confirmation.min.js"); 
                public static readonly string bootstrap_datepicker_bg_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/bootstrap-datepicker.bg.js"); 
                public static readonly string bootstrap_datepicker_en_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/bootstrap-datepicker.en.js"); 
                public static readonly string bootstrap_datepicker_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/bootstrap-datepicker.js"); 
                public static readonly string bootstrap_switch_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/bootstrap-switch.min.js"); 
                public static readonly string bootstrap_tabdrop_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/bootstrap-tabdrop.js"); 
                public static readonly string bootstrap_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/bootstrap.min.js"); 
                public static readonly string highcharts_7_2_0_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/highcharts-7.2.0.js"); 
                public static readonly string highcharts_custom_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/highcharts-custom.js"); 
                public static readonly string highmaps_1_1_5_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/highmaps-1.1.5.js"); 
                public static readonly string highmaps_custom_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/highmaps-custom.js"); 
                public static readonly string highmaps_data_1_1_5_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/highmaps-data-1.1.5.js"); 
                public static readonly string highmaps_drilldown_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/highmaps-drilldown.js"); 
                public static readonly string highmaps_exporting_1_1_5_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/highmaps-exporting-1.1.5.js"); 
                public static readonly string jquery_2_1_1_intellisense_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery-2.1.1.intellisense.js"); 
                public static readonly string jquery_2_1_1_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery-2.1.1.js"); 
                public static readonly string jquery_2_1_1_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery-2.1.1.min.js"); 
                public static readonly string jquery_ba_resize_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery.ba-resize.min.js"); 
                public static readonly string jquery_easing_1_3_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery.easing.1.3.js"); 
                public static readonly string jquery_lightbox_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery.lightbox.min.js"); 
                public static readonly string jquery_validate_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery.validate.js"); 
                public static readonly string jquery_validate_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery.validate.min.js"); 
                public static readonly string jquery_validate_unobtrusive_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery.validate.unobtrusive.js"); 
                public static readonly string jquery_validate_unobtrusive_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/jquery.validate.unobtrusive.min.js"); 
                public static readonly string lodash_4_7_15_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/lodash-4.7.15.js"); 
                public static readonly string responsive_calendar_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/responsive-calendar.min.js"); 
                public static readonly string scripts_custom_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/scripts-custom.js"); 
                public static readonly string scripts_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/scripts.js"); 
                public static readonly string select2_min_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/select2.min.js"); 
                public static readonly string select2_locale_bg_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/select2_locale_bg.js"); 
                public static readonly string select2_locale_en_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/select2_locale_en.js"); 
                public static readonly string time_js = T4MVCHelpers.ProcessAssetPath("~/Scripts/time.js"); 
            }
        }
        public static partial class Content 
        {
            public static partial class css 
            {
                public static partial class lightbox 
                {
                    public static class Assets
                    {
                        public static readonly string jquery_lightbox_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/css/lightbox/jquery.lightbox.min.css");
                    }
                }
                public static partial class select2 
                {
                    public static class Assets
                    {
                        public static readonly string select2_css = T4MVCHelpers.ProcessAssetPath("~/Content/css/select2/select2.css");
                    }
                }
                public static class Assets
                {
                    public static readonly string bootstrap_switch_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/css/bootstrap-switch.min.css");
                    public static readonly string bootstrap_min_css = T4MVCHelpers.ProcessAssetPath("~/Content/css/bootstrap.min.css");
                    public static readonly string custom_public_css = T4MVCHelpers.ProcessAssetPath("~/Content/css/custom-public.css");
                    public static readonly string custom_style_css = T4MVCHelpers.ProcessAssetPath("~/Content/css/custom-style.css");
                    public static readonly string datepicker_css = T4MVCHelpers.ProcessAssetPath("~/Content/css/datepicker.css");
                    public static readonly string print_style_css = T4MVCHelpers.ProcessAssetPath("~/Content/css/print-style.css");
                    public static readonly string responsive_calendar_css = T4MVCHelpers.ProcessAssetPath("~/Content/css/responsive-calendar.css");
                    public static readonly string style_css = T4MVCHelpers.ProcessAssetPath("~/Content/css/style.css");
                    public static readonly string tabdrop_css = T4MVCHelpers.ProcessAssetPath("~/Content/css/tabdrop.css");
                }
            }
            public static partial class fonts 
            {
                public static class Assets
                {
                }
            }
            public static partial class img 
            {
                public static partial class gallery 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class icons 
                {
                    public static partial class browsers 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class files 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                }
            }
            public static class Assets
            {
                public static readonly string PagedList_css = T4MVCHelpers.ProcessAssetPath("~/Content/PagedList.css");
            }
        }
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    private static string ProcessAssetPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and should retain this prefix
        return virtualPath;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;
    public static Func<string, string> ProcessAssetPath = ProcessAssetPathDefault;

    // Calling T4Extension.TimestampString through delegate to allow it to be replaced for unit testing and other purposes
    public static Func<string, string> TimestampString = System.Web.Mvc.T4Extensions.TimestampString;

    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}





#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114


